(self.webpackChunkstatic_site_template=self.webpackChunkstatic_site_template||[]).push([[179],{9408:(e,t,n)=>{"use strict";n(4794);var r=n(3935),i=n(7294),a=n(9163),o=n(3727),c=n(5977),l=n(9427),u=1e3,y=1e3,f=a.ZP.line.attrs((function(e){return{x1:e.x1,x2:e.x2,y1:e.y1,y2:e.y2}})).withConfig({displayName:"Grid__Line",componentId:"hsvf45-0"})(["stroke:#999;"]),s=function(e){return i.createElement(i.Fragment,null,new Array(31).fill(!0).map((function(e,t){return i.createElement(f,{key:t,y1:t/30*u,y2:t/30*u,x1:"0%",x2:"100%"})})),new Array(31).fill(!0).map((function(e,t){return i.createElement(f,{key:t,x1:t/30*y,x2:t/30*y,y1:"0%",y2:"100%"})})))},h=a.ZP.svg.attrs({xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 ".concat(u," ").concat(y)}).withConfig({displayName:"Background__Svg",componentId:"sc-1ja7kg2-0"})(["height:100%;width:100%;"]),m=function(e){return i.createElement(h,null,i.createElement(s,null),i.createElement("image",{href:e.backgroundImage,height:u,width:y}),e.children)};function p(){return(p=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var x=function(e){var t=e.innerElement,n=e.width,r=void 0===n?1:n,a=e.height,o=void 0===a?1:a,c=e.x,l=e.y,f=e.children,s=function(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}(e,["innerElement","width","height","x","y","children"]),h=l*y/30,m="translate(".concat(c*u/30," ").concat(h,")"),x="".concat(r*y/30,"px"),d="".concat(o*u/30,"px"),g=t;return i.createElement("g",{transform:m},i.createElement(g,p({width:x,height:d},s),f))};function d(){return(d=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var g=a.ZP.rect.attrs((function(){return{rx:"1em",ry:"1em"}})).withConfig({displayName:"Text__Rect",componentId:"sc-162jir1-0"})([""]),b=(0,a.ZP)(g).attrs((function(e){return{fill:e.shadingColor,width:"100%",height:"100%"}})).withConfig({displayName:"Text__Shading",componentId:"sc-162jir1-1"})(["fill-opacity:",";"],(function(e){return e.shadingOpacity})),v=(0,a.ZP)(g).attrs((function(e){return{fill:"none","stroke-width":1,stroke:e.borderColor}})).withConfig({displayName:"Text__Border",componentId:"sc-162jir1-2"})(["stroke-width:1;"]),M=a.ZP.text.attrs((function(){return{x:"50%",y:"50%"}})).withConfig({displayName:"Text__SvgText",componentId:"sc-162jir1-3"})(["dominant-baseline:middle;text-anchor:middle;"]);function w(){return(w=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var O=(0,a.ZP)((function(e){var t=e.children,n=e.width,r=e.height,a=e.x,o=e.y,c=e.onClick,l=e.borderColor,u=e.shadingColor,y=e.shadingOpacity,f=function(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}(e,["children","width","height","x","y","onClick","borderColor","shadingColor","shadingOpacity"]);return i.createElement(i.Fragment,null,i.createElement(x,{y:o,x:a,width:n,height:r,innerElement:"svg",onClick:c},u?i.createElement(b,d({shadingColor:u,shadingOpacity:y},f)):null,t),l?i.createElement(x,d({y:o,x:a,width:n,height:r,innerElement:v,borderColor:l},f)):null)})).withConfig({displayName:"Button__StyledText",componentId:"sc-1wh5wgx-0"})(["cursor:pointer;"]),E=function(e){var t=e.text,n=e.children,r=e.width,a=e.height,o=e.x,c=e.y,l=e.onClick,u=function(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}(e,["text","children","width","height","x","y","onClick"]);return i.createElement(O,w({width:r,height:a,y:c,x:o,shadingColor:"#333333",shadingOpacity:"0.3",borderColor:"black",onClick:l},u),t?i.createElement(M,null,t):i.createElement(i.Fragment,null,n))},j=function(){var e=(0,c.k6)();return i.createElement(m,{backgroundImage:l},i.createElement(E,{onClick:function(){return e.push("/controls")},x:10,y:25,width:4,height:2,text:"Controls"}),i.createElement(E,{onClick:function(){return e.push("/level1")},x:18,y:25,width:4,height:2,text:"Play Game!"}))},k=n(4675),P=n(3550),C=n(5172),S=(a.ZP.circle.attrs({cx:"50%",cy:"50%",r:"50%"}).withConfig({displayName:"Vim__HighlightCircle",componentId:"sc-1e60oua-0"})(["stroke:black;fill:white;"]),function(e){var t=e.x,n=e.y;return i.createElement(x,{x:t,y:n,innerElement:"svg"},i.createElement("image",{href:P,height:"100%",width:"100%"}))}),_=a.ZP.rect.attrs({}).withConfig({displayName:"Wall__WallRect",componentId:"sc-1ih1qeg-0"})(["fill:black;fill-opacity:0.4;stroke:black;"]),I=function(e){var t=e.area,n=t.xMin,r=t.xMax,a=t.yMin,o=t.yMax;return i.createElement(x,{x:n,y:a,width:r-n+1,height:o-a+1,innerElement:_})},A=n(7454),N=(0,a.ZP)(M).withConfig({displayName:"VictoryButton__Congratulations",componentId:"sc-15108m7-0"})(["font-size:4em;"]),Z=function(e){var t=e.nextLevel,n=(0,c.k6)();return i.createElement(E,{onClick:function(){return n.push(t)},x:5,y:5,width:20,height:20},i.createElement(N,null,"Victory!"))};function D(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function T(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?D(Object(n),!0).forEach((function(t){L(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):D(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function L(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function W(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,i=!1,a=void 0;try{for(var o,c=e[Symbol.iterator]();!(r=(o=c.next()).done)&&(n.push(o.value),!t||n.length!==t);r=!0);}catch(e){i=!0,a=e}finally{try{r||null==c.return||c.return()}finally{if(i)throw a}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return B(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?B(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function B(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var z=function(e){var t=e.score,n=(e.incrementScore,{nextLevel:"/level2",score:t,walls:[{yMin:11,yMax:27,xMin:21,xMax:21},{yMin:10,yMax:16,xMin:20,xMax:20},{yMin:24,yMax:27,xMin:20,xMax:20},{yMin:28,yMax:29,xMin:0,xMax:29},{yMin:0,yMax:2,xMin:0,xMax:29},{yMin:15,yMax:27,xMin:0,xMax:0},{yMin:14,yMax:27,xMin:29,xMax:29},{yMin:16,yMax:20,xMin:24,xMax:28},{yMin:13,yMax:24,xMin:15,xMax:16},{yMin:11,yMax:12,xMin:2,xMax:19},{yMin:10,yMax:10,xMin:12,xMax:19},{yMin:9,yMax:10,xMin:2,xMax:7},{yMin:6,yMax:8,xMin:6,xMax:7},{yMin:5,yMax:6,xMin:8,xMax:26},{yMin:7,yMax:11,xMin:25,xMax:26},{yMin:11,yMax:11,xMin:23,xMax:24},{yMin:12,yMax:12,xMin:24,xMax:25},{yMin:27,yMax:27,xMin:1,xMax:4}],victory:{yMin:13,yMax:18,xMin:17,xMax:19},vim:{x:25,y:25},mims:[{x:10,y:10}]}),r=W((0,i.useState)(n),2),a=r[0],o=r[1],c=W((0,i.useState)(!1),2),l=c[0],u=c[1],y=function(e,t,n){return Math.min(Math.max(e,t),n)},f=function(e,t){o((function(n){var r=n.vim,i=r.x,o=r.y;(function(e,t,n){var r=n.xMax,i=n.xMin,a=n.yMax,o=n.yMin;return e>=i&&e<=r&&t>=o&&t<=a})(i,o,n.victory)&&u(!0);var c=y(e+i,0,29),l=y(t+o,0,29);return function(e,t){return a.walls.some((function(n){var r=n.xMax,i=n.xMin,a=n.yMax,o=n.yMin;return e>=i&&e<=r&&t>=o&&t<=a}))}(c,l)?n:T(T({},n),{},{vim:{x:c,y:l}})}))};return(0,C.y)("Up, w, k",(function(){return f(0,-1)})),(0,C.y)("Down, s, j",(function(){return f(0,1)})),(0,C.y)("Left, q, a, h",(function(){return f(-1,0)})),(0,C.y)("Right, d, e, l",(function(){return f(1,0)})),i.createElement(m,{backgroundImage:k},i.createElement(S,a.vim),a.walls.map((function(e,t){return i.createElement(I,{key:t,area:e})})),l?i.createElement(Z,{nextLevel:a.nextLevel}):null)},H=(0,a.ZP)(M).withConfig({displayName:"Controls__Paragraph",componentId:"l9yrre-0"})(["font-size:2em;"]),U=(0,a.ZP)(H).withConfig({displayName:"Controls__Header",componentId:"l9yrre-1"})(["font-size:2em;text-decoration:underline;"]),F=function(e){e.changePage;var t=(0,c.k6)();return i.createElement(m,{backgroundImage:A},i.createElement(E,{onClick:function(){return t.push("/")},x:2,y:2,width:26,height:26,shadingOpacity:"0.9",shadingColor:"white"},i.createElement(U,{transform:"translate(0 -200)"},"Movement"),i.createElement(H,{transform:"translate(0 -100)"},"WASD, QWES, HJKL and the arrow keys"),i.createElement(U,{transform:"translate(0 100)"},"Shoot"),i.createElement(H,{transform:"translate(0 200)"},"left click")))},R=function(e){var t=e.gameState.score,n=e.changeState;return i.createElement(o.UT,null,i.createElement(c.rs,null,i.createElement(c.AW,{path:"/level1"},i.createElement(z,{incrementScore:function(e){return n("score",t+e)}})),i.createElement(c.AW,{path:"/controls"},i.createElement(F,null)),i.createElement(c.AW,{path:"/"},i.createElement(j,null))))};function V(){var e,t,n=(e=['\n  * {\n    border: 0;\n    padding: 0;\n    margin: 0;\n    font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;\n  }\n  \n  body{\n    background-color: #aaa;\n    @media (prefers-color-scheme: dark) {\n      background-color: #888;\n    }\n  }\n'],t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}})));return V=function(){return n},n}var q=(0,a.vJ)(V());function G(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function J(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?G(Object(n),!0).forEach((function(t){$(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):G(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function $(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function K(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var Q=a.ZP.div.withConfig({displayName:"MainPage__PageContainer",componentId:"sc-2if5lv-0"})(["position:absolute;top:50%;left:50%;max-width:1000px;max-height:1000px;width:100%;height:100%;transform:translate(-50%,-50%);"]),X=function(){var e,t,n=(e=(0,i.useState)({score:0}),t=2,function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,i=!1,a=void 0;try{for(var o,c=e[Symbol.iterator]();!(r=(o=c.next()).done)&&(n.push(o.value),!t||n.length!==t);r=!0);}catch(e){i=!0,a=e}finally{try{r||null==c.return||c.return()}finally{if(i)throw a}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return K(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?K(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),r=n[0],a=n[1];return i.createElement(Q,null,i.createElement(q,null),i.createElement(R,{gameState:r,changeState:function(e,t){a((function(n){return J(J({},n),{},$({},e,t))}))}}))};r.render(i.createElement(X,null),document.getElementById("root"))},4675:(e,t,n)=>{"use strict";e.exports=n.p+"c4ee33e31ef76369f17a.webp"},7454:(e,t,n)=>{"use strict";e.exports=n.p+"0cc6f8247c5e0d51c2a9.webp"},9427:(e,t,n)=>{"use strict";e.exports=n.p+"d57eb5fa0317d0c244fb.webp"},3550:(e,t,n)=>{"use strict";e.exports=n.p+"337a95e20939ecb91fce.webp"}},0,[[9408,666,216]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,