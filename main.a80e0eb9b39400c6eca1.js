(self.webpackChunkstatic_site_template=self.webpackChunkstatic_site_template||[]).push([[179],{419:(e,t,r)=>{"use strict";r(794);var n=r(935),o=r(294),a=r(163),i=1e3,c=1e3,l=function(e){return o.createElement(o.Fragment,null,new Array(31).fill(!0).map((function(e,t){return o.createElement("line",{key:t,y1:t/30*i,y2:t/30*i,x1:"0%",x2:"100%",stroke:"#777"})})),new Array(31).fill(!0).map((function(e,t){return o.createElement("line",{key:t,x1:t/30*c,x2:t/30*c,y1:"0%",y2:"100%",stroke:"#999"})})))},u=function(e){var t=e.gameState,r=t.page,n=t.score,a=e.changeState;return o.createElement(o.Fragment,null,o.createElement(r,{changePage:function(e){return a("page",e)},incrementScore:function(e){return a("score",n+e)}}))};function f(){var e,t,r=(e=['\n  * {\n    border: 0;\n    padding: 0;\n    margin: 0;\n    font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;\n  }\n  \n  body{\n    background-color: #aaa;\n    @media (prefers-color-scheme: dark) {\n      background-color: #888;\n    }\n  }\n'],t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}})));return f=function(){return r},r}var s=(0,a.vJ)(f()),h=r(427),m=a.ZP.svg.attrs({xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 ".concat(i," ").concat(c)}).withConfig({displayName:"Background__Svg",componentId:"sc-1ja7kg2-0"})(["height:100%;width:100%;"]),y=function(e){return o.createElement(m,null,o.createElement(l,null),o.createElement("image",{href:e.backgroundImage,height:i,width:c}),e.children)};function p(){return(p=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}var g=function(e){var t=e.innerElement,r=e.width,n=void 0===r?1:r,a=e.height,l=void 0===a?1:a,u=e.x,f=e.y,s=e.children,h=function(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}(e,["innerElement","width","height","x","y","children"]),m=f*c/30,y="translate(".concat(u*i/30," ").concat(m,")"),g="".concat(n*c/30,"px"),d="".concat(l*i/30,"px"),b=t;return o.createElement("g",{transform:y},o.createElement(b,p({width:g,height:d},h),s))};function d(){return(d=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}var b=a.ZP.rect.attrs((function(){return{rx:"1em",ry:"1em"}})).withConfig({displayName:"Text__Rect",componentId:"sc-162jir1-0"})([""]),v=(0,a.ZP)(b).attrs((function(e){return{fill:e.shadingColor,width:"100%",height:"100%"}})).withConfig({displayName:"Text__Shading",componentId:"sc-162jir1-1"})(["fill-opacity:",";"],(function(e){return e.shadingOpacity})),w=(0,a.ZP)(b).attrs((function(e){return{fill:"none","stroke-width":1,stroke:e.borderColor}})).withConfig({displayName:"Text__Border",componentId:"sc-162jir1-2"})(["stroke-width:1;"]),O=a.ZP.text.attrs((function(){return{x:"50%",y:"50%"}})).withConfig({displayName:"Text__SvgText",componentId:"sc-162jir1-3"})(["dominant-baseline:middle;text-anchor:middle;"]);function x(){return(x=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}var j=(0,a.ZP)((function(e){var t=e.children,r=e.width,n=e.height,a=e.x,i=e.y,c=e.onClick,l=e.borderColor,u=e.shadingColor,f=e.shadingOpacity,s=function(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}(e,["children","width","height","x","y","onClick","borderColor","shadingColor","shadingOpacity"]);return o.createElement(o.Fragment,null,o.createElement(g,{y:i,x:a,width:r,height:n,innerElement:"svg",onClick:c},u?o.createElement(v,d({shadingColor:u,shadingOpacity:f},s)):null,t),l?o.createElement(g,d({y:i,x:a,width:r,height:n,innerElement:w,borderColor:l},s)):null)})).withConfig({displayName:"Button__StyledText",componentId:"sc-1wh5wgx-0"})(["cursor:pointer;"]),E=function(e){var t=e.text,r=e.children,n=e.width,a=e.height,i=e.x,c=e.y,l=e.onClick,u=function(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}(e,["text","children","width","height","x","y","onClick"]);return o.createElement(j,x({width:n,height:a,y:c,x:i,shadingColor:"#333333",shadingOpacity:"0.3",borderColor:"black",onClick:l},u),t?o.createElement(O,null,t):o.createElement(o.Fragment,null,r))},k=r(454),P=(0,a.ZP)(O).withConfig({displayName:"Controls__Paragraph",componentId:"l9yrre-0"})(["font-size:2em;"]),C=(0,a.ZP)(P).withConfig({displayName:"Controls__Header",componentId:"l9yrre-1"})(["font-size:2em;text-decoration:underline;"]),S=function(e){var t=e.changePage;return o.createElement(y,{backgroundImage:k},o.createElement(E,{onClick:function(){return t(M)},x:2,y:2,width:26,height:26,shadingOpacity:"0.9"},o.createElement(C,{transform:"translate(0 -200)"},"Movement"),o.createElement(P,{transform:"translate(0 -100)"},"WASD, QWES, HJKL and the arrow keys"),o.createElement(C,{transform:"translate(0 100)"},"Shoot"),o.createElement(P,{transform:"translate(0 200)"},"left click")))},I=r(675),_=r(550),A=r(172);function N(){return(N=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function Z(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}(0,a.ZP)(g).withConfig({displayName:"Vim__VimDisplay",componentId:"sc-1e60oua-0"})(["background-image:url(",");background-size:100% 100%;"],_);var T=function(e){var t,r,n=e.x,a=e.y,i=(t=(0,o.useState)({x:n,y:a}),r=2,function(e){if(Array.isArray(e))return e}(t)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var r=[],n=!0,o=!1,a=void 0;try{for(var i,c=e[Symbol.iterator]();!(n=(i=c.next()).done)&&(r.push(i.value),!t||r.length!==t);n=!0);}catch(e){o=!0,a=e}finally{try{n||null==c.return||c.return()}finally{if(o)throw a}}return r}}(t,r)||function(e,t){if(e){if("string"==typeof e)return Z(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Z(e,t):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),c=i[0],l=i[1],u=function(e,t,r){return Math.min(Math.max(e,t),r)},f=function(e,t){return l((function(r){var n=r.x,o=r.y;return{x:u(e+n,0,29),y:u(t+o,0,29)}}))};return(0,A.y)("Up, w, k",(function(){return f(0,-1)})),(0,A.y)("Down, s, j",(function(){return f(0,1)})),(0,A.y)("Left, q, a, h",(function(){return f(-1,0)})),(0,A.y)("Right, d, e, l",(function(){return f(1,0)})),o.createElement(g,N({},c,{innerElement:"svg"}),o.createElement("image",{href:_,height:"100%",width:"100%"}))},D=function(e){return e.changePage,o.createElement(y,{backgroundImage:I},o.createElement(T,{x:25,y:25}))},M=function(e){var t=e.changePage;return o.createElement(y,{backgroundImage:h},o.createElement(E,{onClick:function(){return t(S)},x:10,y:25,width:4,height:2,text:"Controls"}),o.createElement(E,{onClick:function(){return t(D)},x:18,y:25,width:4,height:2,text:"Play Game!"}))};function z(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function B(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?z(Object(r),!0).forEach((function(t){F(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):z(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function F(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function H(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var U=a.ZP.div.withConfig({displayName:"MainPage__PageContainer",componentId:"sc-2if5lv-0"})(["position:absolute;top:50%;left:50%;max-width:1000px;max-height:1000px;width:100%;height:100%;transform:translate(-50%,-50%);"]),J=function(){var e,t,r=(e=(0,o.useState)({page:M,score:0}),t=2,function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var r=[],n=!0,o=!1,a=void 0;try{for(var i,c=e[Symbol.iterator]();!(n=(i=c.next()).done)&&(r.push(i.value),!t||r.length!==t);n=!0);}catch(e){o=!0,a=e}finally{try{n||null==c.return||c.return()}finally{if(o)throw a}}return r}}(e,t)||function(e,t){if(e){if("string"==typeof e)return H(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?H(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),n=r[0],a=r[1];return o.createElement(U,null,o.createElement(s,null),o.createElement(u,{gameState:n,changeState:function(e,t){a((function(r){return B(B({},r),{},F({},e,t))}))}}))};n.render(o.createElement(J,null),document.getElementById("root"))},675:(e,t,r)=>{"use strict";e.exports=r.p+"c4ee33e31ef76369f17a.webp"},454:(e,t,r)=>{"use strict";e.exports=r.p+"0cc6f8247c5e0d51c2a9.webp"},427:(e,t,r)=>{"use strict";e.exports=r.p+"d57eb5fa0317d0c244fb.webp"},550:(e,t,r)=>{"use strict";e.exports=r.p+"337a95e20939ecb91fce.webp"}},0,[[419,666,216]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,