/*! For license information please see vendors.f2c9e183f3132398226d.js.LICENSE.txt */
(self.webpackChunkstatic_site_template=self.webpackChunkstatic_site_template||[]).push([[216],{2122:(e,t,n)=>{"use strict";function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}n.d(t,{Z:()=>r})},1788:(e,t,n)=>{"use strict";function r(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}n.d(t,{Z:()=>r})},9756:(e,t,n)=>{"use strict";function r(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}n.d(t,{Z:()=>r})},1261:(e,t,n)=>{"use strict";n.d(t,{Z:()=>$});var r=n(4015),a=n.n(r),o=n(3645),i=n.n(o),l=n(1667),u=n.n(l),s=n(6116),c=n(9533),f=n(1563),d=n(7248),p=n(7630),h=n(9386),m=n(7162),g=n(8778),y=n(9996),v=n(1288),b=n(5153),w=n(5866),k=n(891),A=n(8206),C=n(4381),E=n(914),S=i()(a()),x=u()(s),P=u()(c),_=u()(f),O=u()(d),B=u()(p),U=u()(h),T=u()(m),F=u()(g),N=u()(y),L=u()(v),R=u()(b),I=u()(w),z=u()(k),M=u()(A),D=u()(C),j=u()(E);S.push([e.id,"/* open-sans-cyrillic-ext-400-italic*/\n@font-face {\n  font-family: 'Open Sans';\n  font-style: italic;\n  font-display: swap;\n  font-weight: 400;\n  src: url("+x+") format('woff2'), url("+P+") format('woff');\n  unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;\n}\n/* open-sans-cyrillic-400-italic*/\n@font-face {\n  font-family: 'Open Sans';\n  font-style: italic;\n  font-display: swap;\n  font-weight: 400;\n  src: url("+_+") format('woff2'), url("+P+") format('woff');\n  unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\n}\n/* open-sans-greek-ext-400-italic*/\n@font-face {\n  font-family: 'Open Sans';\n  font-style: italic;\n  font-display: swap;\n  font-weight: 400;\n  src: url("+O+") format('woff2'), url("+P+") format('woff');\n  unicode-range: U+1F00-1FFF;\n}\n/* open-sans-greek-400-italic*/\n@font-face {\n  font-family: 'Open Sans';\n  font-style: italic;\n  font-display: swap;\n  font-weight: 400;\n  src: url("+B+") format('woff2'), url("+P+") format('woff');\n  unicode-range: U+0370-03FF;\n}\n/* open-sans-vietnamese-400-italic*/\n@font-face {\n  font-family: 'Open Sans';\n  font-style: italic;\n  font-display: swap;\n  font-weight: 400;\n  src: url("+U+") format('woff2'), url("+P+") format('woff');\n  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;\n}\n/* open-sans-latin-ext-400-italic*/\n@font-face {\n  font-family: 'Open Sans';\n  font-style: italic;\n  font-display: swap;\n  font-weight: 400;\n  src: url("+T+") format('woff2'), url("+P+") format('woff');\n  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n/* open-sans-latin-400-italic*/\n@font-face {\n  font-family: 'Open Sans';\n  font-style: italic;\n  font-display: swap;\n  font-weight: 400;\n  src: url("+F+") format('woff2'), url("+P+") format('woff');\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n}\n/* open-sans-cyrillic-ext-400-normal*/\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url("+N+") format('woff2'), url("+L+") format('woff');\n  unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;\n}\n/* open-sans-cyrillic-400-normal*/\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url("+R+") format('woff2'), url("+L+") format('woff');\n  unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\n}\n/* open-sans-greek-ext-400-normal*/\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url("+I+") format('woff2'), url("+L+") format('woff');\n  unicode-range: U+1F00-1FFF;\n}\n/* open-sans-greek-400-normal*/\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url("+z+") format('woff2'), url("+L+") format('woff');\n  unicode-range: U+0370-03FF;\n}\n/* open-sans-vietnamese-400-normal*/\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url("+M+") format('woff2'), url("+L+") format('woff');\n  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;\n}\n/* open-sans-latin-ext-400-normal*/\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url("+D+") format('woff2'), url("+L+") format('woff');\n  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n/* open-sans-latin-400-normal*/\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url("+j+") format('woff2'), url("+L+") format('woff');\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n}\n","",{version:3,sources:["webpack://./node_modules/fontsource-open-sans/index.css"],names:[],mappings:"AAAA,qCAAqC;AACrC;EACE,wBAAwB;EACxB,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,oHAAwI;EACxI,sFAAsF;AACxF;AACA,iCAAiC;AACjC;EACE,wBAAwB;EACxB,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,oHAAoI;EACpI,4DAA4D;AAC9D;AACA,kCAAkC;AAClC;EACE,wBAAwB;EACxB,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,oHAAqI;EACrI,0BAA0B;AAC5B;AACA,8BAA8B;AAC9B;EACE,wBAAwB;EACxB,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,oHAAiI;EACjI,0BAA0B;AAC5B;AACA,mCAAmC;AACnC;EACE,wBAAwB;EACxB,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,oHAAsI;EACtI,gHAAgH;AAClH;AACA,kCAAkC;AAClC;EACE,wBAAwB;EACxB,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,oHAAqI;EACrI,mHAAmH;AACrH;AACA,8BAA8B;AAC9B;EACE,wBAAwB;EACxB,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,oHAAiI;EACjI,yKAAyK;AAC3K;AACA,qCAAqC;AACrC;EACE,wBAAwB;EACxB,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,oHAAwI;EACxI,sFAAsF;AACxF;AACA,iCAAiC;AACjC;EACE,wBAAwB;EACxB,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,qHAAoI;EACpI,4DAA4D;AAC9D;AACA,kCAAkC;AAClC;EACE,wBAAwB;EACxB,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,qHAAqI;EACrI,0BAA0B;AAC5B;AACA,8BAA8B;AAC9B;EACE,wBAAwB;EACxB,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,qHAAiI;EACjI,0BAA0B;AAC5B;AACA,mCAAmC;AACnC;EACE,wBAAwB;EACxB,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,qHAAsI;EACtI,gHAAgH;AAClH;AACA,kCAAkC;AAClC;EACE,wBAAwB;EACxB,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,qHAAqI;EACrI,mHAAmH;AACrH;AACA,8BAA8B;AAC9B;EACE,wBAAwB;EACxB,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,qHAAiI;EACjI,yKAAyK;AAC3K",sourcesContent:["/* open-sans-cyrillic-ext-400-italic*/\n@font-face {\n  font-family: 'Open Sans';\n  font-style: italic;\n  font-display: swap;\n  font-weight: 400;\n  src: url('./files/open-sans-cyrillic-ext-400-italic.woff2') format('woff2'), url('./files/open-sans-all-400-italic.woff') format('woff');\n  unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;\n}\n/* open-sans-cyrillic-400-italic*/\n@font-face {\n  font-family: 'Open Sans';\n  font-style: italic;\n  font-display: swap;\n  font-weight: 400;\n  src: url('./files/open-sans-cyrillic-400-italic.woff2') format('woff2'), url('./files/open-sans-all-400-italic.woff') format('woff');\n  unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\n}\n/* open-sans-greek-ext-400-italic*/\n@font-face {\n  font-family: 'Open Sans';\n  font-style: italic;\n  font-display: swap;\n  font-weight: 400;\n  src: url('./files/open-sans-greek-ext-400-italic.woff2') format('woff2'), url('./files/open-sans-all-400-italic.woff') format('woff');\n  unicode-range: U+1F00-1FFF;\n}\n/* open-sans-greek-400-italic*/\n@font-face {\n  font-family: 'Open Sans';\n  font-style: italic;\n  font-display: swap;\n  font-weight: 400;\n  src: url('./files/open-sans-greek-400-italic.woff2') format('woff2'), url('./files/open-sans-all-400-italic.woff') format('woff');\n  unicode-range: U+0370-03FF;\n}\n/* open-sans-vietnamese-400-italic*/\n@font-face {\n  font-family: 'Open Sans';\n  font-style: italic;\n  font-display: swap;\n  font-weight: 400;\n  src: url('./files/open-sans-vietnamese-400-italic.woff2') format('woff2'), url('./files/open-sans-all-400-italic.woff') format('woff');\n  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;\n}\n/* open-sans-latin-ext-400-italic*/\n@font-face {\n  font-family: 'Open Sans';\n  font-style: italic;\n  font-display: swap;\n  font-weight: 400;\n  src: url('./files/open-sans-latin-ext-400-italic.woff2') format('woff2'), url('./files/open-sans-all-400-italic.woff') format('woff');\n  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n/* open-sans-latin-400-italic*/\n@font-face {\n  font-family: 'Open Sans';\n  font-style: italic;\n  font-display: swap;\n  font-weight: 400;\n  src: url('./files/open-sans-latin-400-italic.woff2') format('woff2'), url('./files/open-sans-all-400-italic.woff') format('woff');\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n}\n/* open-sans-cyrillic-ext-400-normal*/\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url('./files/open-sans-cyrillic-ext-400-normal.woff2') format('woff2'), url('./files/open-sans-all-400-normal.woff') format('woff');\n  unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;\n}\n/* open-sans-cyrillic-400-normal*/\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url('./files/open-sans-cyrillic-400-normal.woff2') format('woff2'), url('./files/open-sans-all-400-normal.woff') format('woff');\n  unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\n}\n/* open-sans-greek-ext-400-normal*/\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url('./files/open-sans-greek-ext-400-normal.woff2') format('woff2'), url('./files/open-sans-all-400-normal.woff') format('woff');\n  unicode-range: U+1F00-1FFF;\n}\n/* open-sans-greek-400-normal*/\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url('./files/open-sans-greek-400-normal.woff2') format('woff2'), url('./files/open-sans-all-400-normal.woff') format('woff');\n  unicode-range: U+0370-03FF;\n}\n/* open-sans-vietnamese-400-normal*/\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url('./files/open-sans-vietnamese-400-normal.woff2') format('woff2'), url('./files/open-sans-all-400-normal.woff') format('woff');\n  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;\n}\n/* open-sans-latin-ext-400-normal*/\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url('./files/open-sans-latin-ext-400-normal.woff2') format('woff2'), url('./files/open-sans-all-400-normal.woff') format('woff');\n  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n/* open-sans-latin-400-normal*/\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url('./files/open-sans-latin-400-normal.woff2') format('woff2'), url('./files/open-sans-all-400-normal.woff') format('woff');\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n}\n"],sourceRoot:""}]);const $=S},3645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=e(t);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var a={};if(r)for(var o=0;o<this.length;o++){var i=this[o][0];null!=i&&(a[i]=!0)}for(var l=0;l<e.length;l++){var u=[].concat(e[l]);r&&a[u[0]]||(n&&(u[2]?u[2]="".concat(n," and ").concat(u[2]):u[2]=n),t.push(u))}},t}},4015:e=>{"use strict";function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}e.exports=function(e){var n,r,a=(r=4,function(e){if(Array.isArray(e))return e}(n=e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,a=!1,o=void 0;try{for(var i,l=e[Symbol.iterator]();!(r=(i=l.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){a=!0,o=e}finally{try{r||null==l.return||l.return()}finally{if(a)throw o}}return n}}(n,r)||function(e,n){if(e){if("string"==typeof e)return t(e,n);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?t(e,n):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=a[1],i=a[3];if("function"==typeof btoa){var l=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),u="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(l),s="/*# ".concat(u," */"),c=i.sources.map((function(e){return"/*# sourceURL=".concat(i.sourceRoot||"").concat(e," */")}));return[o].concat(c).concat([s]).join("\n")}return[o].join("\n")}},1667:e=>{"use strict";e.exports=function(e,t){return t||(t={}),"string"!=typeof(e=e&&e.__esModule?e.default:e)?e:(/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e)}},9533:(e,t,n)=>{"use strict";e.exports=n.p+"b2f7fa8bb26a2699b579.woff"},1288:(e,t,n)=>{"use strict";e.exports=n.p+"4f2cda059485c5f324fa.woff"},1563:(e,t,n)=>{"use strict";e.exports=n.p+"4db1bf0c1f6d5f32f320.woff2"},5153:(e,t,n)=>{"use strict";e.exports=n.p+"b3501f3f1fa72bcb728a.woff2"},6116:(e,t,n)=>{"use strict";e.exports=n.p+"07b851eaa771083aa412.woff2"},9996:(e,t,n)=>{"use strict";e.exports=n.p+"ea48f4ff22a3d336ebb0.woff2"},7630:(e,t,n)=>{"use strict";e.exports=n.p+"df10eb39af19eaf363ee.woff2"},891:(e,t,n)=>{"use strict";e.exports=n.p+"3efbf9f403ae2d6791f1.woff2"},7248:(e,t,n)=>{"use strict";e.exports=n.p+"c9f3696e45388e46f544.woff2"},5866:(e,t,n)=>{"use strict";e.exports=n.p+"18af2512ed41dc94e197.woff2"},8778:(e,t,n)=>{"use strict";e.exports=n.p+"bb915319f59c02c348a6.woff2"},914:(e,t,n)=>{"use strict";e.exports=n.p+"f57a62e9efddf6ace18b.woff2"},7162:(e,t,n)=>{"use strict";e.exports=n.p+"9b5f4ef6bec817044bca.woff2"},4381:(e,t,n)=>{"use strict";e.exports=n.p+"e21fda72f7303338832c.woff2"},9386:(e,t,n)=>{"use strict";e.exports=n.p+"deef4f2bcf876c281b29.woff2"},8206:(e,t,n)=>{"use strict";e.exports=n.p+"5ec64a942bafa79974d2.woff2"},7531:(e,t,n)=>{"use strict";n.d(t,{lX:()=>b,q_:()=>S,ob:()=>d,PP:()=>P,Ep:()=>f});var r=n(2122);function a(e){return"/"===e.charAt(0)}function o(e,t){for(var n=t,r=n+1,a=e.length;r<a;n+=1,r+=1)e[n]=e[r];e.pop()}var i=n(2177);function l(e){return"/"===e.charAt(0)?e:"/"+e}function u(e){return"/"===e.charAt(0)?e.substr(1):e}function s(e,t){return function(e,t){return 0===e.toLowerCase().indexOf(t.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(t.length))}(e,t)?e.substr(t.length):e}function c(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function f(e){var t=e.pathname,n=e.search,r=e.hash,a=t||"/";return n&&"?"!==n&&(a+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(a+="#"===r.charAt(0)?r:"#"+r),a}function d(e,t,n,i){var l;"string"==typeof e?(l=function(e){var t=e||"/",n="",r="",a=t.indexOf("#");-1!==a&&(r=t.substr(a),t=t.substr(0,a));var o=t.indexOf("?");return-1!==o&&(n=t.substr(o),t=t.substr(0,o)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(l=(0,r.Z)({},e)).pathname&&(l.pathname=""),l.search?"?"!==l.search.charAt(0)&&(l.search="?"+l.search):l.search="",l.hash?"#"!==l.hash.charAt(0)&&(l.hash="#"+l.hash):l.hash="",void 0!==t&&void 0===l.state&&(l.state=t));try{l.pathname=decodeURI(l.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+l.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(l.key=n),i?l.pathname?"/"!==l.pathname.charAt(0)&&(l.pathname=function(e,t){void 0===t&&(t="");var n,r=e&&e.split("/")||[],i=t&&t.split("/")||[],l=e&&a(e),u=t&&a(t),s=l||u;if(e&&a(e)?i=r:r.length&&(i.pop(),i=i.concat(r)),!i.length)return"/";if(i.length){var c=i[i.length-1];n="."===c||".."===c||""===c}else n=!1;for(var f=0,d=i.length;d>=0;d--){var p=i[d];"."===p?o(i,d):".."===p?(o(i,d),f++):f&&(o(i,d),f--)}if(!s)for(;f--;f)i.unshift("..");!s||""===i[0]||i[0]&&a(i[0])||i.unshift("");var h=i.join("/");return n&&"/"!==h.substr(-1)&&(h+="/"),h}(l.pathname,i.pathname)):l.pathname=i.pathname:l.pathname||(l.pathname="/"),l}function p(){var e=null,t=[];return{setPrompt:function(t){return e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,a){if(null!=e){var o="function"==typeof e?e(t,n):e;"string"==typeof o?"function"==typeof r?r(o,a):a(!0):a(!1!==o)}else a(!0)},appendListener:function(e){var n=!0;function r(){n&&e.apply(void 0,arguments)}return t.push(r),function(){n=!1,t=t.filter((function(e){return e!==r}))}},notifyListeners:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach((function(e){return e.apply(void 0,n)}))}}}var h=!("undefined"==typeof window||!window.document||!window.document.createElement);function m(e,t){t(window.confirm(e))}var g="popstate",y="hashchange";function v(){try{return window.history.state||{}}catch(e){return{}}}function b(e){void 0===e&&(e={}),h||(0,i.Z)(!1);var t,n=window.history,a=(-1===(t=window.navigator.userAgent).indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,o=!(-1===window.navigator.userAgent.indexOf("Trident")),u=e,b=u.forceRefresh,w=void 0!==b&&b,k=u.getUserConfirmation,A=void 0===k?m:k,C=u.keyLength,E=void 0===C?6:C,S=e.basename?c(l(e.basename)):"";function x(e){var t=e||{},n=t.key,r=t.state,a=window.location,o=a.pathname+a.search+a.hash;return S&&(o=s(o,S)),d(o,r,n)}function P(){return Math.random().toString(36).substr(2,E)}var _=p();function O(e){(0,r.Z)(j,e),j.length=n.length,_.notifyListeners(j.location,j.action)}function B(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||F(x(e.state))}function U(){F(x(v()))}var T=!1;function F(e){T?(T=!1,O()):_.confirmTransitionTo(e,"POP",A,(function(t){t?O({action:"POP",location:e}):function(e){var t=j.location,n=L.indexOf(t.key);-1===n&&(n=0);var r=L.indexOf(e.key);-1===r&&(r=0);var a=n-r;a&&(T=!0,I(a))}(e)}))}var N=x(v()),L=[N.key];function R(e){return S+f(e)}function I(e){n.go(e)}var z=0;function M(e){1===(z+=e)&&1===e?(window.addEventListener(g,B),o&&window.addEventListener(y,U)):0===z&&(window.removeEventListener(g,B),o&&window.removeEventListener(y,U))}var D=!1,j={length:n.length,action:"POP",location:N,createHref:R,push:function(e,t){var r="PUSH",o=d(e,t,P(),j.location);_.confirmTransitionTo(o,r,A,(function(e){if(e){var t=R(o),i=o.key,l=o.state;if(a)if(n.pushState({key:i,state:l},null,t),w)window.location.href=t;else{var u=L.indexOf(j.location.key),s=L.slice(0,u+1);s.push(o.key),L=s,O({action:r,location:o})}else window.location.href=t}}))},replace:function(e,t){var r="REPLACE",o=d(e,t,P(),j.location);_.confirmTransitionTo(o,r,A,(function(e){if(e){var t=R(o),i=o.key,l=o.state;if(a)if(n.replaceState({key:i,state:l},null,t),w)window.location.replace(t);else{var u=L.indexOf(j.location.key);-1!==u&&(L[u]=o.key),O({action:r,location:o})}else window.location.replace(t)}}))},go:I,goBack:function(){I(-1)},goForward:function(){I(1)},block:function(e){void 0===e&&(e=!1);var t=_.setPrompt(e);return D||(M(1),D=!0),function(){return D&&(D=!1,M(-1)),t()}},listen:function(e){var t=_.appendListener(e);return M(1),function(){M(-1),t()}}};return j}var w="hashchange",k={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+u(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:u,decodePath:l},slash:{encodePath:l,decodePath:l}};function A(e){var t=e.indexOf("#");return-1===t?e:e.slice(0,t)}function C(){var e=window.location.href,t=e.indexOf("#");return-1===t?"":e.substring(t+1)}function E(e){window.location.replace(A(window.location.href)+"#"+e)}function S(e){void 0===e&&(e={}),h||(0,i.Z)(!1);var t=window.history,n=(window.navigator.userAgent.indexOf("Firefox"),e),a=n.getUserConfirmation,o=void 0===a?m:a,u=n.hashType,g=void 0===u?"slash":u,y=e.basename?c(l(e.basename)):"",v=k[g],b=v.encodePath,S=v.decodePath;function x(){var e=S(C());return y&&(e=s(e,y)),d(e)}var P=p();function _(e){(0,r.Z)(D,e),D.length=t.length,P.notifyListeners(D.location,D.action)}var O=!1,B=null;function U(){var e,t,n=C(),r=b(n);if(n!==r)E(r);else{var a=x(),i=D.location;if(!O&&(t=a,(e=i).pathname===t.pathname&&e.search===t.search&&e.hash===t.hash))return;if(B===f(a))return;B=null,function(e){if(O)O=!1,_();else{P.confirmTransitionTo(e,"POP",o,(function(t){t?_({action:"POP",location:e}):function(e){var t=D.location,n=L.lastIndexOf(f(t));-1===n&&(n=0);var r=L.lastIndexOf(f(e));-1===r&&(r=0);var a=n-r;a&&(O=!0,R(a))}(e)}))}}(a)}}var T=C(),F=b(T);T!==F&&E(F);var N=x(),L=[f(N)];function R(e){t.go(e)}var I=0;function z(e){1===(I+=e)&&1===e?window.addEventListener(w,U):0===I&&window.removeEventListener(w,U)}var M=!1,D={length:t.length,action:"POP",location:N,createHref:function(e){var t=document.querySelector("base"),n="";return t&&t.getAttribute("href")&&(n=A(window.location.href)),n+"#"+b(y+f(e))},push:function(e,t){var n="PUSH",r=d(e,void 0,void 0,D.location);P.confirmTransitionTo(r,n,o,(function(e){if(e){var t=f(r),a=b(y+t);if(C()!==a){B=t,function(e){window.location.hash=e}(a);var o=L.lastIndexOf(f(D.location)),i=L.slice(0,o+1);i.push(t),L=i,_({action:n,location:r})}else _()}}))},replace:function(e,t){var n="REPLACE",r=d(e,void 0,void 0,D.location);P.confirmTransitionTo(r,n,o,(function(e){if(e){var t=f(r),a=b(y+t);C()!==a&&(B=t,E(a));var o=L.indexOf(f(D.location));-1!==o&&(L[o]=t),_({action:n,location:r})}}))},go:R,goBack:function(){R(-1)},goForward:function(){R(1)},block:function(e){void 0===e&&(e=!1);var t=P.setPrompt(e);return M||(z(1),M=!0),function(){return M&&(M=!1,z(-1)),t()}},listen:function(e){var t=P.appendListener(e);return z(1),function(){z(-1),t()}}};return D}function x(e,t,n){return Math.min(Math.max(e,t),n)}function P(e){void 0===e&&(e={});var t=e,n=t.getUserConfirmation,a=t.initialEntries,o=void 0===a?["/"]:a,i=t.initialIndex,l=void 0===i?0:i,u=t.keyLength,s=void 0===u?6:u,c=p();function h(e){(0,r.Z)(w,e),w.length=w.entries.length,c.notifyListeners(w.location,w.action)}function m(){return Math.random().toString(36).substr(2,s)}var g=x(l,0,o.length-1),y=o.map((function(e){return d(e,void 0,"string"==typeof e?m():e.key||m())})),v=f;function b(e){var t=x(w.index+e,0,w.entries.length-1),r=w.entries[t];c.confirmTransitionTo(r,"POP",n,(function(e){e?h({action:"POP",location:r,index:t}):h()}))}var w={length:y.length,action:"POP",location:y[g],index:g,entries:y,createHref:v,push:function(e,t){var r="PUSH",a=d(e,t,m(),w.location);c.confirmTransitionTo(a,r,n,(function(e){if(e){var t=w.index+1,n=w.entries.slice(0);n.length>t?n.splice(t,n.length-t,a):n.push(a),h({action:r,location:a,index:t,entries:n})}}))},replace:function(e,t){var r="REPLACE",a=d(e,t,m(),w.location);c.confirmTransitionTo(a,r,n,(function(e){e&&(w.entries[w.index]=a,h({action:r,location:a}))}))},go:b,goBack:function(){b(-1)},goForward:function(){b(1)},canGo:function(e){var t=w.index+e;return t>=0&&t<w.entries.length},block:function(e){return void 0===e&&(e=!1),c.setPrompt(e)},listen:function(e){return c.appendListener(e)}};return w}},8679:(e,t,n)=>{"use strict";var r=n(9864),a={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},o={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},i={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},l={};function u(e){return r.isMemo(e)?i:l[e.$$typeof]||a}l[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},l[r.Memo]=i;var s=Object.defineProperty,c=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,h=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(h){var a=p(n);a&&a!==h&&e(t,a,r)}var i=c(n);f&&(i=i.concat(f(n)));for(var l=u(t),m=u(n),g=0;g<i.length;++g){var y=i[g];if(!(o[y]||r&&r[y]||m&&m[y]||l&&l[y])){var v=d(n,y);try{s(t,y,v)}catch(e){}}}}return t}},7418:e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function a(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,o){for(var i,l,u=a(e),s=1;s<arguments.length;s++){for(var c in i=Object(arguments[s]))n.call(i,c)&&(u[c]=i[c]);if(t){l=t(i);for(var f=0;f<l.length;f++)r.call(i,l[f])&&(u[l[f]]=i[l[f]])}}return u}},2703:(e,t,n)=>{"use strict";var r=n(414);function a(){}function o(){}o.resetWarningCache=a,e.exports=function(){function e(e,t,n,a,o,i){if(i!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:o,resetWarningCache:a};return n.PropTypes=n,n}},5697:(e,t,n)=>{e.exports=n(2703)()},414:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},4448:(e,t,n)=>{"use strict";var r=n(7294),a=n(7418),o=n(3840);function i(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(i(227));var l=new Set,u={};function s(e,t){c(e,t),c(e+"Capture",t)}function c(e,t){for(u[e]=t,e=0;e<t.length;e++)l.add(t[e])}var f=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p=Object.prototype.hasOwnProperty,h={},m={};function g(e,t,n,r,a,o,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=o,this.removeEmptyString=i}var y={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){y[e]=new g(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];y[t]=new g(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){y[e]=new g(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){y[e]=new g(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){y[e]=new g(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){y[e]=new g(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){y[e]=new g(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){y[e]=new g(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){y[e]=new g(e,5,!1,e.toLowerCase(),null,!1,!1)}));var v=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function w(e,t,n,r){var a=y.hasOwnProperty(t)?y[t]:null;(null!==a?0===a.type:!r&&2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1]))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,r)&&(n=null),r||null===a?function(e){return!!p.call(m,e)||!p.call(h,e)&&(d.test(e)?m[e]=!0:(h[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,r=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(v,b);y[t]=new g(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(v,b);y[t]=new g(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(v,b);y[t]=new g(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){y[e]=new g(e,1,!1,e.toLowerCase(),null,!1,!1)})),y.xlinkHref=new g("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){y[e]=new g(e,1,!1,e.toLowerCase(),null,!0,!0)}));var k=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,A=60103,C=60106,E=60107,S=60108,x=60114,P=60109,_=60110,O=60112,B=60113,U=60120,T=60115,F=60116,N=60121,L=60128,R=60129,I=60130,z=60131;if("function"==typeof Symbol&&Symbol.for){var M=Symbol.for;A=M("react.element"),C=M("react.portal"),E=M("react.fragment"),S=M("react.strict_mode"),x=M("react.profiler"),P=M("react.provider"),_=M("react.context"),O=M("react.forward_ref"),B=M("react.suspense"),U=M("react.suspense_list"),T=M("react.memo"),F=M("react.lazy"),N=M("react.block"),M("react.scope"),L=M("react.opaque.id"),R=M("react.debug_trace_mode"),I=M("react.offscreen"),z=M("react.legacy_hidden")}var D,j="function"==typeof Symbol&&Symbol.iterator;function $(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=j&&e[j]||e["@@iterator"])?e:null}function H(e){if(void 0===D)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);D=t&&t[1]||""}return"\n"+D+e}var V=!1;function W(e,t){if(!e||V)return"";V=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(e){if(e&&r&&"string"==typeof e.stack){for(var a=e.stack.split("\n"),o=r.stack.split("\n"),i=a.length-1,l=o.length-1;1<=i&&0<=l&&a[i]!==o[l];)l--;for(;1<=i&&0<=l;i--,l--)if(a[i]!==o[l]){if(1!==i||1!==l)do{if(i--,0>--l||a[i]!==o[l])return"\n"+a[i].replace(" at new "," at ")}while(1<=i&&0<=l);break}}}finally{V=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?H(e):""}function q(e){switch(e.tag){case 5:return H(e.type);case 16:return H("Lazy");case 13:return H("Suspense");case 19:return H("SuspenseList");case 0:case 2:case 15:return W(e.type,!1);case 11:return W(e.type.render,!1);case 22:return W(e.type._render,!1);case 1:return W(e.type,!0);default:return""}}function K(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case E:return"Fragment";case C:return"Portal";case x:return"Profiler";case S:return"StrictMode";case B:return"Suspense";case U:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case _:return(e.displayName||"Context")+".Consumer";case P:return(e._context.displayName||"Context")+".Provider";case O:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case T:return K(e.type);case N:return K(e._render);case F:t=e._payload,e=e._init;try{return K(e(t))}catch(e){}}return null}function Q(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function Z(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Y(e){e._valueTracker||(e._valueTracker=function(e){var t=Z(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var a=n.get,o=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,o.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function G(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=Z(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function X(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function J(e,t){var n=t.checked;return a({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=Q(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function te(e,t){null!=(t=t.checked)&&w(e,"checked",t,!1)}function ne(e,t){te(e,t);var n=Q(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ae(e,t.type,n):t.hasOwnProperty("defaultValue")&&ae(e,t.type,Q(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function re(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ae(e,t,n){"number"===t&&X(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function oe(e,t){return e=a({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function ie(e,t,n,r){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&r&&(e[n].defaultSelected=!0)}else{for(n=""+Q(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function le(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(i(91));return a({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ue(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(i(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(i(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:Q(n)}}function se(e,t){var n=Q(t.value),r=Q(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function ce(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var fe="http://www.w3.org/1999/xhtml";function de(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function pe(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?de(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var he,me,ge=(me=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((he=he||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=he.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return me(e,t)}))}:me);function ye(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ve={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},be=["Webkit","ms","Moz","O"];function we(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ve.hasOwnProperty(e)&&ve[e]?(""+t).trim():t+"px"}function ke(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=we(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,a):e[n]=a}}Object.keys(ve).forEach((function(e){be.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ve[t]=ve[e]}))}));var Ae=a({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Ce(e,t){if(t){if(Ae[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(i(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(i(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(i(62))}}function Ee(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function Se(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var xe=null,Pe=null,_e=null;function Oe(e){if(e=Xr(e)){if("function"!=typeof xe)throw Error(i(280));var t=e.stateNode;t&&(t=ea(t),xe(e.stateNode,e.type,t))}}function Be(e){Pe?_e?_e.push(e):_e=[e]:Pe=e}function Ue(){if(Pe){var e=Pe,t=_e;if(_e=Pe=null,Oe(e),t)for(e=0;e<t.length;e++)Oe(t[e])}}function Te(e,t){return e(t)}function Fe(e,t,n,r,a){return e(t,n,r,a)}function Ne(){}var Le=Te,Re=!1,Ie=!1;function ze(){null===Pe&&null===_e||(Ne(),Ue())}function Me(e,t){var n=e.stateNode;if(null===n)return null;var r=ea(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(i(231,t,typeof n));return n}var De=!1;if(f)try{var je={};Object.defineProperty(je,"passive",{get:function(){De=!0}}),window.addEventListener("test",je,je),window.removeEventListener("test",je,je)}catch(me){De=!1}function $e(e,t,n,r,a,o,i,l,u){var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){this.onError(e)}}var He=!1,Ve=null,We=!1,qe=null,Ke={onError:function(e){He=!0,Ve=e}};function Qe(e,t,n,r,a,o,i,l,u){He=!1,Ve=null,$e.apply(Ke,arguments)}function Ze(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ye(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Ge(e){if(Ze(e)!==e)throw Error(i(188))}function Xe(e,t){for(var n=e.alternate;null!==t;){if(t===e||t===n)return!0;t=t.return}return!1}var Je,et,tt,nt,rt=!1,at=[],ot=null,it=null,lt=null,ut=new Map,st=new Map,ct=[],ft="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function dt(e,t,n,r,a){return{blockedOn:e,domEventName:t,eventSystemFlags:16|n,nativeEvent:a,targetContainers:[r]}}function pt(e,t){switch(e){case"focusin":case"focusout":ot=null;break;case"dragenter":case"dragleave":it=null;break;case"mouseover":case"mouseout":lt=null;break;case"pointerover":case"pointerout":ut.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":st.delete(t.pointerId)}}function ht(e,t,n,r,a,o){return null===e||e.nativeEvent!==o?(e=dt(t,n,r,a,o),null!==t&&null!==(t=Xr(t))&&et(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function mt(e){var t=Gr(e.target);if(null!==t){var n=Ze(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ye(n)))return e.blockedOn=t,void nt(e.lanePriority,(function(){o.unstable_runWithPriority(e.priority,(function(){tt(n)}))}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function gt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Gt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=Xr(n))&&et(t),e.blockedOn=n,!1;t.shift()}return!0}function yt(e,t,n){gt(e)&&n.delete(t)}function vt(){for(rt=!1;0<at.length;){var e=at[0];if(null!==e.blockedOn){null!==(e=Xr(e.blockedOn))&&Je(e);break}for(var t=e.targetContainers;0<t.length;){var n=Gt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n){e.blockedOn=n;break}t.shift()}null===e.blockedOn&&at.shift()}null!==ot&&gt(ot)&&(ot=null),null!==it&&gt(it)&&(it=null),null!==lt&&gt(lt)&&(lt=null),ut.forEach(yt),st.forEach(yt)}function bt(e,t){e.blockedOn===t&&(e.blockedOn=null,rt||(rt=!0,o.unstable_scheduleCallback(o.unstable_NormalPriority,vt)))}function wt(e){function t(t){return bt(t,e)}if(0<at.length){bt(at[0],e);for(var n=1;n<at.length;n++){var r=at[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==ot&&bt(ot,e),null!==it&&bt(it,e),null!==lt&&bt(lt,e),ut.forEach(t),st.forEach(t),n=0;n<ct.length;n++)(r=ct[n]).blockedOn===e&&(r.blockedOn=null);for(;0<ct.length&&null===(n=ct[0]).blockedOn;)mt(n),null===n.blockedOn&&ct.shift()}function kt(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var At={animationend:kt("Animation","AnimationEnd"),animationiteration:kt("Animation","AnimationIteration"),animationstart:kt("Animation","AnimationStart"),transitionend:kt("Transition","TransitionEnd")},Ct={},Et={};function St(e){if(Ct[e])return Ct[e];if(!At[e])return e;var t,n=At[e];for(t in n)if(n.hasOwnProperty(t)&&t in Et)return Ct[e]=n[t];return e}f&&(Et=document.createElement("div").style,"AnimationEvent"in window||(delete At.animationend.animation,delete At.animationiteration.animation,delete At.animationstart.animation),"TransitionEvent"in window||delete At.transitionend.transition);var xt=St("animationend"),Pt=St("animationiteration"),_t=St("animationstart"),Ot=St("transitionend"),Bt=new Map,Ut=new Map,Tt=["abort","abort",xt,"animationEnd",Pt,"animationIteration",_t,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Ot,"transitionEnd","waiting","waiting"];function Ft(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],a=e[n+1];a="on"+(a[0].toUpperCase()+a.slice(1)),Ut.set(r,t),Bt.set(r,a),s(a,[r])}}(0,o.unstable_now)();var Nt=8;function Lt(e){if(0!=(1&e))return Nt=15,1;if(0!=(2&e))return Nt=14,2;if(0!=(4&e))return Nt=13,4;var t=24&e;return 0!==t?(Nt=12,t):0!=(32&e)?(Nt=11,32):0!=(t=192&e)?(Nt=10,t):0!=(256&e)?(Nt=9,256):0!=(t=3584&e)?(Nt=8,t):0!=(4096&e)?(Nt=7,4096):0!=(t=4186112&e)?(Nt=6,t):0!=(t=62914560&e)?(Nt=5,t):67108864&e?(Nt=4,67108864):0!=(134217728&e)?(Nt=3,134217728):0!=(t=805306368&e)?(Nt=2,t):0!=(1073741824&e)?(Nt=1,1073741824):(Nt=8,e)}function Rt(e,t){var n=e.pendingLanes;if(0===n)return Nt=0;var r=0,a=0,o=e.expiredLanes,i=e.suspendedLanes,l=e.pingedLanes;if(0!==o)r=o,a=Nt=15;else if(0!=(o=134217727&n)){var u=o&~i;0!==u?(r=Lt(u),a=Nt):0!=(l&=o)&&(r=Lt(l),a=Nt)}else 0!=(o=n&~i)?(r=Lt(o),a=Nt):0!==l&&(r=Lt(l),a=Nt);if(0===r)return 0;if(r=n&((0>(r=31-$t(r))?0:1<<r)<<1)-1,0!==t&&t!==r&&0==(t&i)){if(Lt(t),a<=Nt)return t;Nt=a}if(0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)a=1<<(n=31-$t(t)),r|=e[n],t&=~a;return r}function It(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function zt(e,t){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=Mt(24&~t))?zt(10,t):e;case 10:return 0===(e=Mt(192&~t))?zt(8,t):e;case 8:return 0===(e=Mt(3584&~t))&&0===(e=Mt(4186112&~t))&&(e=512),e;case 2:return 0===(t=Mt(805306368&~t))&&(t=268435456),t}throw Error(i(358,e))}function Mt(e){return e&-e}function Dt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function jt(e,t,n){e.pendingLanes|=t;var r=t-1;e.suspendedLanes&=r,e.pingedLanes&=r,(e=e.eventTimes)[t=31-$t(t)]=n}var $t=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Ht(e)/Vt|0)|0},Ht=Math.log,Vt=Math.LN2,Wt=o.unstable_UserBlockingPriority,qt=o.unstable_runWithPriority,Kt=!0;function Qt(e,t,n,r){Re||Ne();var a=Yt,o=Re;Re=!0;try{Fe(a,e,t,n,r)}finally{(Re=o)||ze()}}function Zt(e,t,n,r){qt(Wt,Yt.bind(null,e,t,n,r))}function Yt(e,t,n,r){var a;if(Kt)if((a=0==(4&t))&&0<at.length&&-1<ft.indexOf(e))e=dt(null,e,t,n,r),at.push(e);else{var o=Gt(e,t,n,r);if(null===o)a&&pt(e,r);else{if(a){if(-1<ft.indexOf(e))return e=dt(o,e,t,n,r),void at.push(e);if(function(e,t,n,r,a){switch(t){case"focusin":return ot=ht(ot,e,t,n,r,a),!0;case"dragenter":return it=ht(it,e,t,n,r,a),!0;case"mouseover":return lt=ht(lt,e,t,n,r,a),!0;case"pointerover":var o=a.pointerId;return ut.set(o,ht(ut.get(o)||null,e,t,n,r,a)),!0;case"gotpointercapture":return o=a.pointerId,st.set(o,ht(st.get(o)||null,e,t,n,r,a)),!0}return!1}(o,e,t,n,r))return;pt(e,r)}Br(e,t,r,null,n)}}}function Gt(e,t,n,r){var a=Se(r);if(null!==(a=Gr(a))){var o=Ze(a);if(null===o)a=null;else{var i=o.tag;if(13===i){if(null!==(a=Ye(o)))return a;a=null}else if(3===i){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;a=null}else o!==a&&(a=null)}}return Br(e,t,r,a,n),null}var Xt=null,Jt=null,en=null;function tn(){if(en)return en;var e,t,n=Jt,r=n.length,a="value"in Xt?Xt.value:Xt.textContent,o=a.length;for(e=0;e<r&&n[e]===a[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===a[o-t];t++);return en=a.slice(e,1<t?1-t:void 0)}function nn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function rn(){return!0}function an(){return!1}function on(e){function t(t,n,r,a,o){for(var i in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=a,this.target=o,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(a):a[i]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?rn:an,this.isPropagationStopped=an,this}return a(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=rn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=rn)},persist:function(){},isPersistent:rn}),t}var ln,un,sn,cn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},fn=on(cn),dn=a({},cn,{view:0,detail:0}),pn=on(dn),hn=a({},dn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Sn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==sn&&(sn&&"mousemove"===e.type?(ln=e.screenX-sn.screenX,un=e.screenY-sn.screenY):un=ln=0,sn=e),ln)},movementY:function(e){return"movementY"in e?e.movementY:un}}),mn=on(hn),gn=on(a({},hn,{dataTransfer:0})),yn=on(a({},dn,{relatedTarget:0})),vn=on(a({},cn,{animationName:0,elapsedTime:0,pseudoElement:0})),bn=on(a({},cn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}})),wn=on(a({},cn,{data:0})),kn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},An={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Cn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function En(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Cn[e])&&!!t[e]}function Sn(){return En}var xn=on(a({},dn,{key:function(e){if(e.key){var t=kn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=nn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?An[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Sn,charCode:function(e){return"keypress"===e.type?nn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?nn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}})),Pn=on(a({},hn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),_n=on(a({},dn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Sn})),On=on(a({},cn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Bn=on(a({},hn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0})),Un=[9,13,27,32],Tn=f&&"CompositionEvent"in window,Fn=null;f&&"documentMode"in document&&(Fn=document.documentMode);var Nn=f&&"TextEvent"in window&&!Fn,Ln=f&&(!Tn||Fn&&8<Fn&&11>=Fn),Rn=String.fromCharCode(32),In=!1;function zn(e,t){switch(e){case"keyup":return-1!==Un.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Mn(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Dn=!1,jn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function $n(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!jn[e.type]:"textarea"===t}function Hn(e,t,n,r){Be(r),0<(t=Tr(t,"onChange")).length&&(n=new fn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Vn=null,Wn=null;function qn(e){Er(e,0)}function Kn(e){if(G(Jr(e)))return e}function Qn(e,t){if("change"===e)return t}var Zn=!1;if(f){var Yn;if(f){var Gn="oninput"in document;if(!Gn){var Xn=document.createElement("div");Xn.setAttribute("oninput","return;"),Gn="function"==typeof Xn.oninput}Yn=Gn}else Yn=!1;Zn=Yn&&(!document.documentMode||9<document.documentMode)}function Jn(){Vn&&(Vn.detachEvent("onpropertychange",er),Wn=Vn=null)}function er(e){if("value"===e.propertyName&&Kn(Wn)){var t=[];if(Hn(t,Wn,e,Se(e)),e=qn,Re)e(t);else{Re=!0;try{Te(e,t)}finally{Re=!1,ze()}}}}function tr(e,t,n){"focusin"===e?(Jn(),Wn=n,(Vn=t).attachEvent("onpropertychange",er)):"focusout"===e&&Jn()}function nr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Kn(Wn)}function rr(e,t){if("click"===e)return Kn(t)}function ar(e,t){if("input"===e||"change"===e)return Kn(t)}var or="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},ir=Object.prototype.hasOwnProperty;function lr(e,t){if(or(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!ir.call(t,n[r])||!or(e[n[r]],t[n[r]]))return!1;return!0}function ur(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function sr(e,t){var n,r=ur(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=ur(r)}}function cr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?cr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function fr(){for(var e=window,t=X();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=X((e=t.contentWindow).document)}return t}function dr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var pr=f&&"documentMode"in document&&11>=document.documentMode,hr=null,mr=null,gr=null,yr=!1;function vr(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;yr||null==hr||hr!==X(r)||(r="selectionStart"in(r=hr)&&dr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},gr&&lr(gr,r)||(gr=r,0<(r=Tr(mr,"onSelect")).length&&(t=new fn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=hr)))}Ft("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Ft("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Ft(Tt,2);for(var br="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),wr=0;wr<br.length;wr++)Ut.set(br[wr],0);c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),s("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),s("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),s("onBeforeInput",["compositionend","keypress","textInput","paste"]),s("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var kr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ar=new Set("cancel close invalid load scroll toggle".split(" ").concat(kr));function Cr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,a,o,l,u,s){if(Qe.apply(this,arguments),He){if(!He)throw Error(i(198));var c=Ve;He=!1,Ve=null,We||(We=!0,qe=c)}}(r,t,void 0,e),e.currentTarget=null}function Er(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],a=r.event;r=r.listeners;e:{var o=void 0;if(t)for(var i=r.length-1;0<=i;i--){var l=r[i],u=l.instance,s=l.currentTarget;if(l=l.listener,u!==o&&a.isPropagationStopped())break e;Cr(a,l,s),o=u}else for(i=0;i<r.length;i++){if(u=(l=r[i]).instance,s=l.currentTarget,l=l.listener,u!==o&&a.isPropagationStopped())break e;Cr(a,l,s),o=u}}}if(We)throw e=qe,We=!1,qe=null,e}function Sr(e,t){var n=ta(t),r=e+"__bubble";n.has(r)||(Or(t,e,2,!1),n.add(r))}var xr="_reactListening"+Math.random().toString(36).slice(2);function Pr(e){e[xr]||(e[xr]=!0,l.forEach((function(t){Ar.has(t)||_r(t,!1,e,null),_r(t,!0,e,null)})))}function _r(e,t,n,r){var a=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,o=n;if("selectionchange"===e&&9!==n.nodeType&&(o=n.ownerDocument),null!==r&&!t&&Ar.has(e)){if("scroll"!==e)return;a|=2,o=r}var i=ta(o),l=e+"__"+(t?"capture":"bubble");i.has(l)||(t&&(a|=4),Or(o,e,a,t),i.add(l))}function Or(e,t,n,r){var a=Ut.get(t);switch(void 0===a?2:a){case 0:a=Qt;break;case 1:a=Zt;break;default:a=Yt}n=a.bind(null,t,n,e),a=void 0,!De||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),r?void 0!==a?e.addEventListener(t,n,{capture:!0,passive:a}):e.addEventListener(t,n,!0):void 0!==a?e.addEventListener(t,n,{passive:a}):e.addEventListener(t,n,!1)}function Br(e,t,n,r,a){var o=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var i=r.tag;if(3===i||4===i){var l=r.stateNode.containerInfo;if(l===a||8===l.nodeType&&l.parentNode===a)break;if(4===i)for(i=r.return;null!==i;){var u=i.tag;if((3===u||4===u)&&((u=i.stateNode.containerInfo)===a||8===u.nodeType&&u.parentNode===a))return;i=i.return}for(;null!==l;){if(null===(i=Gr(l)))return;if(5===(u=i.tag)||6===u){r=o=i;continue e}l=l.parentNode}}r=r.return}!function(e,t,n){if(Ie)return e();Ie=!0;try{Le(e,t,n)}finally{Ie=!1,ze()}}((function(){var r=o,a=Se(n),i=[];e:{var l=Bt.get(e);if(void 0!==l){var u=fn,s=e;switch(e){case"keypress":if(0===nn(n))break e;case"keydown":case"keyup":u=xn;break;case"focusin":s="focus",u=yn;break;case"focusout":s="blur",u=yn;break;case"beforeblur":case"afterblur":u=yn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=mn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=gn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=_n;break;case xt:case Pt:case _t:u=vn;break;case Ot:u=On;break;case"scroll":u=pn;break;case"wheel":u=Bn;break;case"copy":case"cut":case"paste":u=bn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=Pn}var c=0!=(4&t),f=!c&&"scroll"===e,d=c?null!==l?l+"Capture":null:l;c=[];for(var p,h=r;null!==h;){var m=(p=h).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==d&&null!=(m=Me(h,d))&&c.push(Ur(h,m,p))),f)break;h=h.return}0<c.length&&(l=new u(l,s,null,n,a),i.push({event:l,listeners:c}))}}if(0==(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(l="mouseover"===e||"pointerover"===e)||0!=(16&t)||!(s=n.relatedTarget||n.fromElement)||!Gr(s)&&!s[Zr])&&(u||l)&&(l=a.window===a?a:(l=a.ownerDocument)?l.defaultView||l.parentWindow:window,u?(u=r,null!==(s=(s=n.relatedTarget||n.toElement)?Gr(s):null)&&(s!==(f=Ze(s))||5!==s.tag&&6!==s.tag)&&(s=null)):(u=null,s=r),u!==s)){if(c=mn,m="onMouseLeave",d="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(c=Pn,m="onPointerLeave",d="onPointerEnter",h="pointer"),f=null==u?l:Jr(u),p=null==s?l:Jr(s),(l=new c(m,h+"leave",u,n,a)).target=f,l.relatedTarget=p,m=null,Gr(a)===r&&((c=new c(d,h+"enter",s,n,a)).target=p,c.relatedTarget=f,m=c),f=m,u&&s)e:{for(d=s,h=0,p=c=u;p;p=Fr(p))h++;for(p=0,m=d;m;m=Fr(m))p++;for(;0<h-p;)c=Fr(c),h--;for(;0<p-h;)d=Fr(d),p--;for(;h--;){if(c===d||null!==d&&c===d.alternate)break e;c=Fr(c),d=Fr(d)}c=null}else c=null;null!==u&&Nr(i,l,u,c,!1),null!==s&&null!==f&&Nr(i,f,s,c,!0)}if("select"===(u=(l=r?Jr(r):window).nodeName&&l.nodeName.toLowerCase())||"input"===u&&"file"===l.type)var g=Qn;else if($n(l))if(Zn)g=ar;else{g=nr;var y=tr}else(u=l.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===l.type||"radio"===l.type)&&(g=rr);switch(g&&(g=g(e,r))?Hn(i,g,n,a):(y&&y(e,l,r),"focusout"===e&&(y=l._wrapperState)&&y.controlled&&"number"===l.type&&ae(l,"number",l.value)),y=r?Jr(r):window,e){case"focusin":($n(y)||"true"===y.contentEditable)&&(hr=y,mr=r,gr=null);break;case"focusout":gr=mr=hr=null;break;case"mousedown":yr=!0;break;case"contextmenu":case"mouseup":case"dragend":yr=!1,vr(i,n,a);break;case"selectionchange":if(pr)break;case"keydown":case"keyup":vr(i,n,a)}var v;if(Tn)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else Dn?zn(e,n)&&(b="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(b="onCompositionStart");b&&(Ln&&"ko"!==n.locale&&(Dn||"onCompositionStart"!==b?"onCompositionEnd"===b&&Dn&&(v=tn()):(Jt="value"in(Xt=a)?Xt.value:Xt.textContent,Dn=!0)),0<(y=Tr(r,b)).length&&(b=new wn(b,e,null,n,a),i.push({event:b,listeners:y}),(v||null!==(v=Mn(n)))&&(b.data=v))),(v=Nn?function(e,t){switch(e){case"compositionend":return Mn(t);case"keypress":return 32!==t.which?null:(In=!0,Rn);case"textInput":return(e=t.data)===Rn&&In?null:e;default:return null}}(e,n):function(e,t){if(Dn)return"compositionend"===e||!Tn&&zn(e,t)?(e=tn(),en=Jt=Xt=null,Dn=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Ln&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))&&0<(r=Tr(r,"onBeforeInput")).length&&(a=new wn("onBeforeInput","beforeinput",null,n,a),i.push({event:a,listeners:r}),a.data=v)}Er(i,t)}))}function Ur(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Tr(e,t){for(var n=t+"Capture",r=[];null!==e;){var a=e,o=a.stateNode;5===a.tag&&null!==o&&(a=o,null!=(o=Me(e,n))&&r.unshift(Ur(e,o,a)),null!=(o=Me(e,t))&&r.push(Ur(e,o,a))),e=e.return}return r}function Fr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Nr(e,t,n,r,a){for(var o=t._reactName,i=[];null!==n&&n!==r;){var l=n,u=l.alternate,s=l.stateNode;if(null!==u&&u===r)break;5===l.tag&&null!==s&&(l=s,a?null!=(u=Me(n,o))&&i.unshift(Ur(n,u,l)):a||null!=(u=Me(n,o))&&i.push(Ur(n,u,l))),n=n.return}0!==i.length&&e.push({event:t,listeners:i})}function Lr(){}var Rr=null,Ir=null;function zr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Mr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var Dr="function"==typeof setTimeout?setTimeout:void 0,jr="function"==typeof clearTimeout?clearTimeout:void 0;function $r(e){(1===e.nodeType||9===e.nodeType&&null!=(e=e.body))&&(e.textContent="")}function Hr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Vr(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var Wr=0,qr=Math.random().toString(36).slice(2),Kr="__reactFiber$"+qr,Qr="__reactProps$"+qr,Zr="__reactContainer$"+qr,Yr="__reactEvents$"+qr;function Gr(e){var t=e[Kr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Zr]||n[Kr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=Vr(e);null!==e;){if(n=e[Kr])return n;e=Vr(e)}return t}n=(e=n).parentNode}return null}function Xr(e){return!(e=e[Kr]||e[Zr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Jr(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(i(33))}function ea(e){return e[Qr]||null}function ta(e){var t=e[Yr];return void 0===t&&(t=e[Yr]=new Set),t}var na=[],ra=-1;function aa(e){return{current:e}}function oa(e){0>ra||(e.current=na[ra],na[ra]=null,ra--)}function ia(e,t){ra++,na[ra]=e.current,e.current=t}var la={},ua=aa(la),sa=aa(!1),ca=la;function fa(e,t){var n=e.type.contextTypes;if(!n)return la;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var a,o={};for(a in n)o[a]=t[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=o),o}function da(e){return null!=e.childContextTypes}function pa(){oa(sa),oa(ua)}function ha(e,t,n){if(ua.current!==la)throw Error(i(168));ia(ua,t),ia(sa,n)}function ma(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var o in r=r.getChildContext())if(!(o in e))throw Error(i(108,K(t)||"Unknown",o));return a({},n,r)}function ga(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||la,ca=ua.current,ia(ua,e),ia(sa,sa.current),!0}function ya(e,t,n){var r=e.stateNode;if(!r)throw Error(i(169));n?(e=ma(e,t,ca),r.__reactInternalMemoizedMergedChildContext=e,oa(sa),oa(ua),ia(ua,e)):oa(sa),ia(sa,n)}var va=null,ba=null,wa=o.unstable_runWithPriority,ka=o.unstable_scheduleCallback,Aa=o.unstable_cancelCallback,Ca=o.unstable_shouldYield,Ea=o.unstable_requestPaint,Sa=o.unstable_now,xa=o.unstable_getCurrentPriorityLevel,Pa=o.unstable_ImmediatePriority,_a=o.unstable_UserBlockingPriority,Oa=o.unstable_NormalPriority,Ba=o.unstable_LowPriority,Ua=o.unstable_IdlePriority,Ta={},Fa=void 0!==Ea?Ea:function(){},Na=null,La=null,Ra=!1,Ia=Sa(),za=1e4>Ia?Sa:function(){return Sa()-Ia};function Ma(){switch(xa()){case Pa:return 99;case _a:return 98;case Oa:return 97;case Ba:return 96;case Ua:return 95;default:throw Error(i(332))}}function Da(e){switch(e){case 99:return Pa;case 98:return _a;case 97:return Oa;case 96:return Ba;case 95:return Ua;default:throw Error(i(332))}}function ja(e,t){return e=Da(e),wa(e,t)}function $a(e,t,n){return e=Da(e),ka(e,t,n)}function Ha(){if(null!==La){var e=La;La=null,Aa(e)}Va()}function Va(){if(!Ra&&null!==Na){Ra=!0;var e=0;try{var t=Na;ja(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Na=null}catch(t){throw null!==Na&&(Na=Na.slice(e+1)),ka(Pa,Ha),t}finally{Ra=!1}}}var Wa=k.ReactCurrentBatchConfig;function qa(e,t){if(e&&e.defaultProps){for(var n in t=a({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var Ka=aa(null),Qa=null,Za=null,Ya=null;function Ga(){Ya=Za=Qa=null}function Xa(e){var t=Ka.current;oa(Ka),e.type._context._currentValue=t}function Ja(e,t){for(;null!==e;){var n=e.alternate;if((e.childLanes&t)===t){if(null===n||(n.childLanes&t)===t)break;n.childLanes|=t}else e.childLanes|=t,null!==n&&(n.childLanes|=t);e=e.return}}function eo(e,t){Qa=e,Ya=Za=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(Ti=!0),e.firstContext=null)}function to(e,t){if(Ya!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Ya=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Za){if(null===Qa)throw Error(i(308));Za=t,Qa.dependencies={lanes:0,firstContext:t,responders:null}}else Za=Za.next=t;return e._currentValue}var no=!1;function ro(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function ao(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function oo(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function io(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function lo(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var a=null,o=null;if(null!==(n=n.firstBaseUpdate)){do{var i={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===o?a=o=i:o=o.next=i,n=n.next}while(null!==n);null===o?a=o=t:o=o.next=t}else a=o=t;return n={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:o,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function uo(e,t,n,r){var o=e.updateQueue;no=!1;var i=o.firstBaseUpdate,l=o.lastBaseUpdate,u=o.shared.pending;if(null!==u){o.shared.pending=null;var s=u,c=s.next;s.next=null,null===l?i=c:l.next=c,l=s;var f=e.alternate;if(null!==f){var d=(f=f.updateQueue).lastBaseUpdate;d!==l&&(null===d?f.firstBaseUpdate=c:d.next=c,f.lastBaseUpdate=s)}}if(null!==i){for(d=o.baseState,l=0,f=c=s=null;;){u=i.lane;var p=i.eventTime;if((r&u)===u){null!==f&&(f=f.next={eventTime:p,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var h=e,m=i;switch(u=t,p=n,m.tag){case 1:if("function"==typeof(h=m.payload)){d=h.call(p,d,u);break e}d=h;break e;case 3:h.flags=-4097&h.flags|64;case 0:if(null==(u="function"==typeof(h=m.payload)?h.call(p,d,u):h))break e;d=a({},d,u);break e;case 2:no=!0}}null!==i.callback&&(e.flags|=32,null===(u=o.effects)?o.effects=[i]:u.push(i))}else p={eventTime:p,lane:u,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===f?(c=f=p,s=d):f=f.next=p,l|=u;if(null===(i=i.next)){if(null===(u=o.shared.pending))break;i=u.next,u.next=null,o.lastBaseUpdate=u,o.shared.pending=null}}null===f&&(s=d),o.baseState=s,o.firstBaseUpdate=c,o.lastBaseUpdate=f,Nl|=l,e.lanes=l,e.memoizedState=d}}function so(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],a=r.callback;if(null!==a){if(r.callback=null,r=n,"function"!=typeof a)throw Error(i(191,a));a.call(r)}}}var co=(new r.Component).refs;function fo(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:a({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var po={isMounted:function(e){return!!(e=e._reactInternals)&&Ze(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=ou(),a=iu(e),o=oo(r,a);o.payload=t,null!=n&&(o.callback=n),io(e,o),lu(e,a,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=ou(),a=iu(e),o=oo(r,a);o.tag=1,o.payload=t,null!=n&&(o.callback=n),io(e,o),lu(e,a,r)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=ou(),r=iu(e),a=oo(n,r);a.tag=2,null!=t&&(a.callback=t),io(e,a),lu(e,r,n)}};function ho(e,t,n,r,a,o,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,o,i):!(t.prototype&&t.prototype.isPureReactComponent&&lr(n,r)&&lr(a,o))}function mo(e,t,n){var r=!1,a=la,o=t.contextType;return"object"==typeof o&&null!==o?o=to(o):(a=da(t)?ca:ua.current,o=(r=null!=(r=t.contextTypes))?fa(e,a):la),t=new t(n,o),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=po,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=o),t}function go(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&po.enqueueReplaceState(t,t.state,null)}function yo(e,t,n,r){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs=co,ro(e);var o=t.contextType;"object"==typeof o&&null!==o?a.context=to(o):(o=da(t)?ca:ua.current,a.context=fa(e,o)),uo(e,n,a,r),a.state=e.memoizedState,"function"==typeof(o=t.getDerivedStateFromProps)&&(fo(e,t,o,n),a.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(t=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&po.enqueueReplaceState(a,a.state,null),uo(e,n,a,r),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4)}var vo=Array.isArray;function bo(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(i(309));var r=n.stateNode}if(!r)throw Error(i(147,e));var a=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===a?t.ref:((t=function(e){var t=r.refs;t===co&&(t=r.refs={}),null===e?delete t[a]:t[a]=e})._stringRef=a,t)}if("string"!=typeof e)throw Error(i(284));if(!n._owner)throw Error(i(290,e))}return e}function wo(e,t){if("textarea"!==e.type)throw Error(i(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t))}function ko(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.flags=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=Iu(e,t)).index=0,e.sibling=null,e}function o(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags=2,n):r:(t.flags=2,n):n}function l(t){return e&&null===t.alternate&&(t.flags=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=ju(n,e.mode,r)).return=e,t):((t=a(t,n)).return=e,t)}function s(e,t,n,r){return null!==t&&t.elementType===n.type?((r=a(t,n.props)).ref=bo(e,t,n),r.return=e,r):((r=zu(n.type,n.key,n.props,null,e.mode,r)).ref=bo(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=$u(n,e.mode,r)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function f(e,t,n,r,o){return null===t||7!==t.tag?((t=Mu(n,e.mode,r,o)).return=e,t):((t=a(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=ju(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case A:return(n=zu(t.type,t.key,t.props,null,e.mode,n)).ref=bo(e,null,t),n.return=e,n;case C:return(t=$u(t,e.mode,n)).return=e,t}if(vo(t)||$(t))return(t=Mu(t,e.mode,n,null)).return=e,t;wo(e,t)}return null}function p(e,t,n,r){var a=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==a?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case A:return n.key===a?n.type===E?f(e,t,n.props.children,r,a):s(e,t,n,r):null;case C:return n.key===a?c(e,t,n,r):null}if(vo(n)||$(n))return null!==a?null:f(e,t,n,r,null);wo(e,n)}return null}function h(e,t,n,r,a){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case A:return e=e.get(null===r.key?n:r.key)||null,r.type===E?f(t,e,r.props.children,a,r.key):s(t,e,r,a);case C:return c(t,e=e.get(null===r.key?n:r.key)||null,r,a)}if(vo(r)||$(r))return f(t,e=e.get(n)||null,r,a,null);wo(t,r)}return null}function m(a,i,l,u){for(var s=null,c=null,f=i,m=i=0,g=null;null!==f&&m<l.length;m++){f.index>m?(g=f,f=null):g=f.sibling;var y=p(a,f,l[m],u);if(null===y){null===f&&(f=g);break}e&&f&&null===y.alternate&&t(a,f),i=o(y,i,m),null===c?s=y:c.sibling=y,c=y,f=g}if(m===l.length)return n(a,f),s;if(null===f){for(;m<l.length;m++)null!==(f=d(a,l[m],u))&&(i=o(f,i,m),null===c?s=f:c.sibling=f,c=f);return s}for(f=r(a,f);m<l.length;m++)null!==(g=h(f,a,m,l[m],u))&&(e&&null!==g.alternate&&f.delete(null===g.key?m:g.key),i=o(g,i,m),null===c?s=g:c.sibling=g,c=g);return e&&f.forEach((function(e){return t(a,e)})),s}function g(a,l,u,s){var c=$(u);if("function"!=typeof c)throw Error(i(150));if(null==(u=c.call(u)))throw Error(i(151));for(var f=c=null,m=l,g=l=0,y=null,v=u.next();null!==m&&!v.done;g++,v=u.next()){m.index>g?(y=m,m=null):y=m.sibling;var b=p(a,m,v.value,s);if(null===b){null===m&&(m=y);break}e&&m&&null===b.alternate&&t(a,m),l=o(b,l,g),null===f?c=b:f.sibling=b,f=b,m=y}if(v.done)return n(a,m),c;if(null===m){for(;!v.done;g++,v=u.next())null!==(v=d(a,v.value,s))&&(l=o(v,l,g),null===f?c=v:f.sibling=v,f=v);return c}for(m=r(a,m);!v.done;g++,v=u.next())null!==(v=h(m,a,g,v.value,s))&&(e&&null!==v.alternate&&m.delete(null===v.key?g:v.key),l=o(v,l,g),null===f?c=v:f.sibling=v,f=v);return e&&m.forEach((function(e){return t(a,e)})),c}return function(e,r,o,u){var s="object"==typeof o&&null!==o&&o.type===E&&null===o.key;s&&(o=o.props.children);var c="object"==typeof o&&null!==o;if(c)switch(o.$$typeof){case A:e:{for(c=o.key,s=r;null!==s;){if(s.key===c){switch(s.tag){case 7:if(o.type===E){n(e,s.sibling),(r=a(s,o.props.children)).return=e,e=r;break e}break;default:if(s.elementType===o.type){n(e,s.sibling),(r=a(s,o.props)).ref=bo(e,s,o),r.return=e,e=r;break e}}n(e,s);break}t(e,s),s=s.sibling}o.type===E?((r=Mu(o.props.children,e.mode,u,o.key)).return=e,e=r):((u=zu(o.type,o.key,o.props,null,e.mode,u)).ref=bo(e,r,o),u.return=e,e=u)}return l(e);case C:e:{for(s=o.key;null!==r;){if(r.key===s){if(4===r.tag&&r.stateNode.containerInfo===o.containerInfo&&r.stateNode.implementation===o.implementation){n(e,r.sibling),(r=a(r,o.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=$u(o,e.mode,u)).return=e,e=r}return l(e)}if("string"==typeof o||"number"==typeof o)return o=""+o,null!==r&&6===r.tag?(n(e,r.sibling),(r=a(r,o)).return=e,e=r):(n(e,r),(r=ju(o,e.mode,u)).return=e,e=r),l(e);if(vo(o))return m(e,r,o,u);if($(o))return g(e,r,o,u);if(c&&wo(e,o),void 0===o&&!s)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(i(152,K(e.type)||"Component"))}return n(e,r)}}var Ao=ko(!0),Co=ko(!1),Eo={},So=aa(Eo),xo=aa(Eo),Po=aa(Eo);function _o(e){if(e===Eo)throw Error(i(174));return e}function Oo(e,t){switch(ia(Po,t),ia(xo,e),ia(So,Eo),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:pe(null,"");break;default:t=pe(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}oa(So),ia(So,t)}function Bo(){oa(So),oa(xo),oa(Po)}function Uo(e){_o(Po.current);var t=_o(So.current),n=pe(t,e.type);t!==n&&(ia(xo,e),ia(So,n))}function To(e){xo.current===e&&(oa(So),oa(xo))}var Fo=aa(0);function No(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var Lo=null,Ro=null,Io=!1;function zo(e,t){var n=Lu(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Mo(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Do(e){if(Io){var t=Ro;if(t){var n=t;if(!Mo(e,t)){if(!(t=Hr(n.nextSibling))||!Mo(e,t))return e.flags=-1025&e.flags|2,Io=!1,void(Lo=e);zo(Lo,n)}Lo=e,Ro=Hr(t.firstChild)}else e.flags=-1025&e.flags|2,Io=!1,Lo=e}}function jo(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Lo=e}function $o(e){if(e!==Lo)return!1;if(!Io)return jo(e),Io=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Mr(t,e.memoizedProps))for(t=Ro;t;)zo(e,t),t=Hr(t.nextSibling);if(jo(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(i(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Ro=Hr(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}Ro=null}}else Ro=Lo?Hr(e.stateNode.nextSibling):null;return!0}function Ho(){Ro=Lo=null,Io=!1}var Vo=[];function Wo(){for(var e=0;e<Vo.length;e++)Vo[e]._workInProgressVersionPrimary=null;Vo.length=0}var qo=k.ReactCurrentDispatcher,Ko=k.ReactCurrentBatchConfig,Qo=0,Zo=null,Yo=null,Go=null,Xo=!1,Jo=!1;function ei(){throw Error(i(321))}function ti(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!or(e[n],t[n]))return!1;return!0}function ni(e,t,n,r,a,o){if(Qo=o,Zo=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,qo.current=null===e||null===e.memoizedState?_i:Oi,e=n(r,a),Jo){o=0;do{if(Jo=!1,!(25>o))throw Error(i(301));o+=1,Go=Yo=null,t.updateQueue=null,qo.current=Bi,e=n(r,a)}while(Jo)}if(qo.current=Pi,t=null!==Yo&&null!==Yo.next,Qo=0,Go=Yo=Zo=null,Xo=!1,t)throw Error(i(300));return e}function ri(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Go?Zo.memoizedState=Go=e:Go=Go.next=e,Go}function ai(){if(null===Yo){var e=Zo.alternate;e=null!==e?e.memoizedState:null}else e=Yo.next;var t=null===Go?Zo.memoizedState:Go.next;if(null!==t)Go=t,Yo=e;else{if(null===e)throw Error(i(310));e={memoizedState:(Yo=e).memoizedState,baseState:Yo.baseState,baseQueue:Yo.baseQueue,queue:Yo.queue,next:null},null===Go?Zo.memoizedState=Go=e:Go=Go.next=e}return Go}function oi(e,t){return"function"==typeof t?t(e):t}function ii(e){var t=ai(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var r=Yo,a=r.baseQueue,o=n.pending;if(null!==o){if(null!==a){var l=a.next;a.next=o.next,o.next=l}r.baseQueue=a=o,n.pending=null}if(null!==a){a=a.next,r=r.baseState;var u=l=o=null,s=a;do{var c=s.lane;if((Qo&c)===c)null!==u&&(u=u.next={lane:0,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null}),r=s.eagerReducer===e?s.eagerState:e(r,s.action);else{var f={lane:c,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null};null===u?(l=u=f,o=r):u=u.next=f,Zo.lanes|=c,Nl|=c}s=s.next}while(null!==s&&s!==a);null===u?o=r:u.next=l,or(r,t.memoizedState)||(Ti=!0),t.memoizedState=r,t.baseState=o,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function li(e){var t=ai(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var r=n.dispatch,a=n.pending,o=t.memoizedState;if(null!==a){n.pending=null;var l=a=a.next;do{o=e(o,l.action),l=l.next}while(l!==a);or(o,t.memoizedState)||(Ti=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),n.lastRenderedState=o}return[o,r]}function ui(e,t,n){var r=t._getVersion;r=r(t._source);var a=t._workInProgressVersionPrimary;if(null!==a?e=a===r:(e=e.mutableReadLanes,(e=(Qo&e)===e)&&(t._workInProgressVersionPrimary=r,Vo.push(t))),e)return n(t._source);throw Vo.push(t),Error(i(350))}function si(e,t,n,r){var a=xl;if(null===a)throw Error(i(349));var o=t._getVersion,l=o(t._source),u=qo.current,s=u.useState((function(){return ui(a,t,n)})),c=s[1],f=s[0];s=Go;var d=e.memoizedState,p=d.refs,h=p.getSnapshot,m=d.source;d=d.subscribe;var g=Zo;return e.memoizedState={refs:p,source:t,subscribe:r},u.useEffect((function(){p.getSnapshot=n,p.setSnapshot=c;var e=o(t._source);if(!or(l,e)){e=n(t._source),or(f,e)||(c(e),e=iu(g),a.mutableReadLanes|=e&a.pendingLanes),e=a.mutableReadLanes,a.entangledLanes|=e;for(var r=a.entanglements,i=e;0<i;){var u=31-$t(i),s=1<<u;r[u]|=e,i&=~s}}}),[n,t,r]),u.useEffect((function(){return r(t._source,(function(){var e=p.getSnapshot,n=p.setSnapshot;try{n(e(t._source));var r=iu(g);a.mutableReadLanes|=r&a.pendingLanes}catch(e){n((function(){throw e}))}}))}),[t,r]),or(h,n)&&or(m,t)&&or(d,r)||((e={pending:null,dispatch:null,lastRenderedReducer:oi,lastRenderedState:f}).dispatch=c=xi.bind(null,Zo,e),s.queue=e,s.baseQueue=null,f=ui(a,t,n),s.memoizedState=s.baseState=f),f}function ci(e,t,n){return si(ai(),e,t,n)}function fi(e){var t=ri();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:oi,lastRenderedState:e}).dispatch=xi.bind(null,Zo,e),[t.memoizedState,e]}function di(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Zo.updateQueue)?(t={lastEffect:null},Zo.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function pi(e){return e={current:e},ri().memoizedState=e}function hi(){return ai().memoizedState}function mi(e,t,n,r){var a=ri();Zo.flags|=e,a.memoizedState=di(1|t,n,void 0,void 0===r?null:r)}function gi(e,t,n,r){var a=ai();r=void 0===r?null:r;var o=void 0;if(null!==Yo){var i=Yo.memoizedState;if(o=i.destroy,null!==r&&ti(r,i.deps))return void di(t,n,o,r)}Zo.flags|=e,a.memoizedState=di(1|t,n,o,r)}function yi(e,t){return mi(516,4,e,t)}function vi(e,t){return gi(516,4,e,t)}function bi(e,t){return gi(4,2,e,t)}function wi(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function ki(e,t,n){return n=null!=n?n.concat([e]):null,gi(4,2,wi.bind(null,t,e),n)}function Ai(){}function Ci(e,t){var n=ai();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&ti(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Ei(e,t){var n=ai();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&ti(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Si(e,t){var n=Ma();ja(98>n?98:n,(function(){e(!0)})),ja(97<n?97:n,(function(){var n=Ko.transition;Ko.transition=1;try{e(!1),t()}finally{Ko.transition=n}}))}function xi(e,t,n){var r=ou(),a=iu(e),o={lane:a,action:n,eagerReducer:null,eagerState:null,next:null},i=t.pending;if(null===i?o.next=o:(o.next=i.next,i.next=o),t.pending=o,i=e.alternate,e===Zo||null!==i&&i===Zo)Jo=Xo=!0;else{if(0===e.lanes&&(null===i||0===i.lanes)&&null!==(i=t.lastRenderedReducer))try{var l=t.lastRenderedState,u=i(l,n);if(o.eagerReducer=i,o.eagerState=u,or(u,l))return}catch(e){}lu(e,a,r)}}var Pi={readContext:to,useCallback:ei,useContext:ei,useEffect:ei,useImperativeHandle:ei,useLayoutEffect:ei,useMemo:ei,useReducer:ei,useRef:ei,useState:ei,useDebugValue:ei,useDeferredValue:ei,useTransition:ei,useMutableSource:ei,useOpaqueIdentifier:ei,unstable_isNewReconciler:!1},_i={readContext:to,useCallback:function(e,t){return ri().memoizedState=[e,void 0===t?null:t],e},useContext:to,useEffect:yi,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,mi(4,2,wi.bind(null,t,e),n)},useLayoutEffect:function(e,t){return mi(4,2,e,t)},useMemo:function(e,t){var n=ri();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=ri();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=xi.bind(null,Zo,e),[r.memoizedState,e]},useRef:pi,useState:fi,useDebugValue:Ai,useDeferredValue:function(e){var t=fi(e),n=t[0],r=t[1];return yi((function(){var t=Ko.transition;Ko.transition=1;try{r(e)}finally{Ko.transition=t}}),[e]),n},useTransition:function(){var e=fi(!1),t=e[0];return pi(e=Si.bind(null,e[1])),[e,t]},useMutableSource:function(e,t,n){var r=ri();return r.memoizedState={refs:{getSnapshot:t,setSnapshot:null},source:e,subscribe:n},si(r,e,t,n)},useOpaqueIdentifier:function(){if(Io){var e=!1,t=function(e){return{$$typeof:L,toString:e,valueOf:e}}((function(){throw e||(e=!0,n("r:"+(Wr++).toString(36))),Error(i(355))})),n=fi(t)[1];return 0==(2&Zo.mode)&&(Zo.flags|=516,di(5,(function(){n("r:"+(Wr++).toString(36))}),void 0,null)),t}return fi(t="r:"+(Wr++).toString(36)),t},unstable_isNewReconciler:!1},Oi={readContext:to,useCallback:Ci,useContext:to,useEffect:vi,useImperativeHandle:ki,useLayoutEffect:bi,useMemo:Ei,useReducer:ii,useRef:hi,useState:function(){return ii(oi)},useDebugValue:Ai,useDeferredValue:function(e){var t=ii(oi),n=t[0],r=t[1];return vi((function(){var t=Ko.transition;Ko.transition=1;try{r(e)}finally{Ko.transition=t}}),[e]),n},useTransition:function(){var e=ii(oi)[0];return[hi().current,e]},useMutableSource:ci,useOpaqueIdentifier:function(){return ii(oi)[0]},unstable_isNewReconciler:!1},Bi={readContext:to,useCallback:Ci,useContext:to,useEffect:vi,useImperativeHandle:ki,useLayoutEffect:bi,useMemo:Ei,useReducer:li,useRef:hi,useState:function(){return li(oi)},useDebugValue:Ai,useDeferredValue:function(e){var t=li(oi),n=t[0],r=t[1];return vi((function(){var t=Ko.transition;Ko.transition=1;try{r(e)}finally{Ko.transition=t}}),[e]),n},useTransition:function(){var e=li(oi)[0];return[hi().current,e]},useMutableSource:ci,useOpaqueIdentifier:function(){return li(oi)[0]},unstable_isNewReconciler:!1},Ui=k.ReactCurrentOwner,Ti=!1;function Fi(e,t,n,r){t.child=null===e?Co(t,null,n,r):Ao(t,e.child,n,r)}function Ni(e,t,n,r,a){n=n.render;var o=t.ref;return eo(t,a),r=ni(e,t,n,r,o,a),null===e||Ti?(t.flags|=1,Fi(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,Xi(e,t,a))}function Li(e,t,n,r,a,o){if(null===e){var i=n.type;return"function"!=typeof i||Ru(i)||void 0!==i.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=zu(n.type,null,r,t,t.mode,o)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,Ri(e,t,i,r,a,o))}return i=e.child,0==(a&o)&&(a=i.memoizedProps,(n=null!==(n=n.compare)?n:lr)(a,r)&&e.ref===t.ref)?Xi(e,t,o):(t.flags|=1,(e=Iu(i,r)).ref=t.ref,e.return=t,t.child=e)}function Ri(e,t,n,r,a,o){if(null!==e&&lr(e.memoizedProps,r)&&e.ref===t.ref){if(Ti=!1,0==(o&a))return t.lanes=e.lanes,Xi(e,t,o);0!=(16384&e.flags)&&(Ti=!0)}return Mi(e,t,n,r,o)}function Ii(e,t,n){var r=t.pendingProps,a=r.children,o=null!==e?e.memoizedState:null;if("hidden"===r.mode||"unstable-defer-without-hiding"===r.mode)if(0==(4&t.mode))t.memoizedState={baseLanes:0},pu(0,n);else{if(0==(1073741824&n))return e=null!==o?o.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e},pu(0,e),null;t.memoizedState={baseLanes:0},pu(0,null!==o?o.baseLanes:n)}else null!==o?(r=o.baseLanes|n,t.memoizedState=null):r=n,pu(0,r);return Fi(e,t,a,n),t.child}function zi(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=128)}function Mi(e,t,n,r,a){var o=da(n)?ca:ua.current;return o=fa(t,o),eo(t,a),n=ni(e,t,n,r,o,a),null===e||Ti?(t.flags|=1,Fi(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,Xi(e,t,a))}function Di(e,t,n,r,a){if(da(n)){var o=!0;ga(t)}else o=!1;if(eo(t,a),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),mo(t,n,r),yo(t,n,r,a),r=!0;else if(null===e){var i=t.stateNode,l=t.memoizedProps;i.props=l;var u=i.context,s=n.contextType;s="object"==typeof s&&null!==s?to(s):fa(t,s=da(n)?ca:ua.current);var c=n.getDerivedStateFromProps,f="function"==typeof c||"function"==typeof i.getSnapshotBeforeUpdate;f||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==r||u!==s)&&go(t,i,r,s),no=!1;var d=t.memoizedState;i.state=d,uo(t,r,i,a),u=t.memoizedState,l!==r||d!==u||sa.current||no?("function"==typeof c&&(fo(t,n,c,r),u=t.memoizedState),(l=no||ho(t,n,l,r,d,u,s))?(f||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(t.flags|=4)):("function"==typeof i.componentDidMount&&(t.flags|=4),t.memoizedProps=r,t.memoizedState=u),i.props=r,i.state=u,i.context=s,r=l):("function"==typeof i.componentDidMount&&(t.flags|=4),r=!1)}else{i=t.stateNode,ao(e,t),l=t.memoizedProps,s=t.type===t.elementType?l:qa(t.type,l),i.props=s,f=t.pendingProps,d=i.context,u="object"==typeof(u=n.contextType)&&null!==u?to(u):fa(t,u=da(n)?ca:ua.current);var p=n.getDerivedStateFromProps;(c="function"==typeof p||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==f||d!==u)&&go(t,i,r,u),no=!1,d=t.memoizedState,i.state=d,uo(t,r,i,a);var h=t.memoizedState;l!==f||d!==h||sa.current||no?("function"==typeof p&&(fo(t,n,p,r),h=t.memoizedState),(s=no||ho(t,n,s,r,d,h,u))?(c||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,h,u),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,h,u)),"function"==typeof i.componentDidUpdate&&(t.flags|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(t.flags|=256)):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),t.memoizedProps=r,t.memoizedState=h),i.props=r,i.state=h,i.context=u,r=s):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),r=!1)}return ji(e,t,n,r,o,a)}function ji(e,t,n,r,a,o){zi(e,t);var i=0!=(64&t.flags);if(!r&&!i)return a&&ya(t,n,!1),Xi(e,t,o);r=t.stateNode,Ui.current=t;var l=i&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&i?(t.child=Ao(t,e.child,null,o),t.child=Ao(t,null,l,o)):Fi(e,t,l,o),t.memoizedState=r.state,a&&ya(t,n,!0),t.child}function $i(e){var t=e.stateNode;t.pendingContext?ha(0,t.pendingContext,t.pendingContext!==t.context):t.context&&ha(0,t.context,!1),Oo(e,t.containerInfo)}var Hi,Vi,Wi,qi={dehydrated:null,retryLane:0};function Ki(e,t,n){var r,a=t.pendingProps,o=Fo.current,i=!1;return(r=0!=(64&t.flags))||(r=(null===e||null!==e.memoizedState)&&0!=(2&o)),r?(i=!0,t.flags&=-65):null!==e&&null===e.memoizedState||void 0===a.fallback||!0===a.unstable_avoidThisFallback||(o|=1),ia(Fo,1&o),null===e?(void 0!==a.fallback&&Do(t),e=a.children,o=a.fallback,i?(e=Qi(t,e,o,n),t.child.memoizedState={baseLanes:n},t.memoizedState=qi,e):"number"==typeof a.unstable_expectedLoadTime?(e=Qi(t,e,o,n),t.child.memoizedState={baseLanes:n},t.memoizedState=qi,t.lanes=33554432,e):((n=Du({mode:"visible",children:e},t.mode,n,null)).return=t,t.child=n)):(e.memoizedState,i?(a=function(e,t,n,r,a){var o=t.mode,i=e.child;e=i.sibling;var l={mode:"hidden",children:n};return 0==(2&o)&&t.child!==i?((n=t.child).childLanes=0,n.pendingProps=l,null!==(i=n.lastEffect)?(t.firstEffect=n.firstEffect,t.lastEffect=i,i.nextEffect=null):t.firstEffect=t.lastEffect=null):n=Iu(i,l),null!==e?r=Iu(e,r):(r=Mu(r,o,a,null)).flags|=2,r.return=t,n.return=t,n.sibling=r,t.child=n,r}(e,t,a.children,a.fallback,n),i=t.child,o=e.child.memoizedState,i.memoizedState=null===o?{baseLanes:n}:{baseLanes:o.baseLanes|n},i.childLanes=e.childLanes&~n,t.memoizedState=qi,a):(n=function(e,t,n,r){var a=e.child;return e=a.sibling,n=Iu(a,{mode:"visible",children:n}),0==(2&t.mode)&&(n.lanes=r),n.return=t,n.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,t.firstEffect=t.lastEffect=e),t.child=n}(e,t,a.children,n),t.memoizedState=null,n))}function Qi(e,t,n,r){var a=e.mode,o=e.child;return t={mode:"hidden",children:t},0==(2&a)&&null!==o?(o.childLanes=0,o.pendingProps=t):o=Du(t,a,0,null),n=Mu(n,a,r,null),o.return=e,n.return=e,o.sibling=n,e.child=o,n}function Zi(e,t){e.lanes|=t;var n=e.alternate;null!==n&&(n.lanes|=t),Ja(e.return,t)}function Yi(e,t,n,r,a,o){var i=e.memoizedState;null===i?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:a,lastEffect:o}:(i.isBackwards=t,i.rendering=null,i.renderingStartTime=0,i.last=r,i.tail=n,i.tailMode=a,i.lastEffect=o)}function Gi(e,t,n){var r=t.pendingProps,a=r.revealOrder,o=r.tail;if(Fi(e,t,r.children,n),0!=(2&(r=Fo.current)))r=1&r|2,t.flags|=64;else{if(null!==e&&0!=(64&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Zi(e,n);else if(19===e.tag)Zi(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(ia(Fo,r),0==(2&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===No(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),Yi(t,!1,a,n,o,t.lastEffect);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===No(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}Yi(t,!0,n,null,o,t.lastEffect);break;case"together":Yi(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Xi(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Nl|=t.lanes,0!=(n&t.childLanes)){if(null!==e&&t.child!==e.child)throw Error(i(153));if(null!==t.child){for(n=Iu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Iu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}return null}function Ji(e,t){if(!Io)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function el(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return da(t.type)&&pa(),null;case 3:return Bo(),oa(sa),oa(ua),Wo(),(r=t.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||($o(t)?t.flags|=4:r.hydrate||(t.flags|=256)),null;case 5:To(t);var o=_o(Po.current);if(n=t.type,null!==e&&null!=t.stateNode)Vi(e,t,n,r),e.ref!==t.ref&&(t.flags|=128);else{if(!r){if(null===t.stateNode)throw Error(i(166));return null}if(e=_o(So.current),$o(t)){r=t.stateNode,n=t.type;var l=t.memoizedProps;switch(r[Kr]=t,r[Qr]=l,n){case"dialog":Sr("cancel",r),Sr("close",r);break;case"iframe":case"object":case"embed":Sr("load",r);break;case"video":case"audio":for(e=0;e<kr.length;e++)Sr(kr[e],r);break;case"source":Sr("error",r);break;case"img":case"image":case"link":Sr("error",r),Sr("load",r);break;case"details":Sr("toggle",r);break;case"input":ee(r,l),Sr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!l.multiple},Sr("invalid",r);break;case"textarea":ue(r,l),Sr("invalid",r)}for(var s in Ce(n,l),e=null,l)l.hasOwnProperty(s)&&(o=l[s],"children"===s?"string"==typeof o?r.textContent!==o&&(e=["children",o]):"number"==typeof o&&r.textContent!==""+o&&(e=["children",""+o]):u.hasOwnProperty(s)&&null!=o&&"onScroll"===s&&Sr("scroll",r));switch(n){case"input":Y(r),re(r,l,!0);break;case"textarea":Y(r),ce(r);break;case"select":case"option":break;default:"function"==typeof l.onClick&&(r.onclick=Lr)}r=e,t.updateQueue=r,null!==r&&(t.flags|=4)}else{switch(s=9===o.nodeType?o:o.ownerDocument,e===fe&&(e=de(n)),e===fe?"script"===n?((e=s.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=s.createElement(n,{is:r.is}):(e=s.createElement(n),"select"===n&&(s=e,r.multiple?s.multiple=!0:r.size&&(s.size=r.size))):e=s.createElementNS(e,n),e[Kr]=t,e[Qr]=r,Hi(e,t),t.stateNode=e,s=Ee(n,r),n){case"dialog":Sr("cancel",e),Sr("close",e),o=r;break;case"iframe":case"object":case"embed":Sr("load",e),o=r;break;case"video":case"audio":for(o=0;o<kr.length;o++)Sr(kr[o],e);o=r;break;case"source":Sr("error",e),o=r;break;case"img":case"image":case"link":Sr("error",e),Sr("load",e),o=r;break;case"details":Sr("toggle",e),o=r;break;case"input":ee(e,r),o=J(e,r),Sr("invalid",e);break;case"option":o=oe(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},o=a({},r,{value:void 0}),Sr("invalid",e);break;case"textarea":ue(e,r),o=le(e,r),Sr("invalid",e);break;default:o=r}Ce(n,o);var c=o;for(l in c)if(c.hasOwnProperty(l)){var f=c[l];"style"===l?ke(e,f):"dangerouslySetInnerHTML"===l?null!=(f=f?f.__html:void 0)&&ge(e,f):"children"===l?"string"==typeof f?("textarea"!==n||""!==f)&&ye(e,f):"number"==typeof f&&ye(e,""+f):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(u.hasOwnProperty(l)?null!=f&&"onScroll"===l&&Sr("scroll",e):null!=f&&w(e,l,f,s))}switch(n){case"input":Y(e),re(e,r,!1);break;case"textarea":Y(e),ce(e);break;case"option":null!=r.value&&e.setAttribute("value",""+Q(r.value));break;case"select":e.multiple=!!r.multiple,null!=(l=r.value)?ie(e,!!r.multiple,l,!1):null!=r.defaultValue&&ie(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof o.onClick&&(e.onclick=Lr)}zr(n,r)&&(t.flags|=4)}null!==t.ref&&(t.flags|=128)}return null;case 6:if(e&&null!=t.stateNode)Wi(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(i(166));n=_o(Po.current),_o(So.current),$o(t)?(r=t.stateNode,n=t.memoizedProps,r[Kr]=t,r.nodeValue!==n&&(t.flags|=4)):((r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[Kr]=t,t.stateNode=r)}return null;case 13:return oa(Fo),r=t.memoizedState,0!=(64&t.flags)?(t.lanes=n,t):(r=null!==r,n=!1,null===e?void 0!==t.memoizedProps.fallback&&$o(t):n=null!==e.memoizedState,r&&!n&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Fo.current)?0===Ul&&(Ul=3):(0!==Ul&&3!==Ul||(Ul=4),null===xl||0==(134217727&Nl)&&0==(134217727&Ll)||fu(xl,_l))),(r||n)&&(t.flags|=4),null);case 4:return Bo(),null===e&&Pr(t.stateNode.containerInfo),null;case 10:return Xa(t),null;case 17:return da(t.type)&&pa(),null;case 19:if(oa(Fo),null===(r=t.memoizedState))return null;if(l=0!=(64&t.flags),null===(s=r.rendering))if(l)Ji(r,!1);else{if(0!==Ul||null!==e&&0!=(64&e.flags))for(e=t.child;null!==e;){if(null!==(s=No(e))){for(t.flags|=64,Ji(r,!1),null!==(l=s.updateQueue)&&(t.updateQueue=l,t.flags|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=n,n=t.child;null!==n;)e=r,(l=n).flags&=2,l.nextEffect=null,l.firstEffect=null,l.lastEffect=null,null===(s=l.alternate)?(l.childLanes=0,l.lanes=e,l.child=null,l.memoizedProps=null,l.memoizedState=null,l.updateQueue=null,l.dependencies=null,l.stateNode=null):(l.childLanes=s.childLanes,l.lanes=s.lanes,l.child=s.child,l.memoizedProps=s.memoizedProps,l.memoizedState=s.memoizedState,l.updateQueue=s.updateQueue,l.type=s.type,e=s.dependencies,l.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return ia(Fo,1&Fo.current|2),t.child}e=e.sibling}null!==r.tail&&za()>Ml&&(t.flags|=64,l=!0,Ji(r,!1),t.lanes=33554432)}else{if(!l)if(null!==(e=No(s))){if(t.flags|=64,l=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),Ji(r,!0),null===r.tail&&"hidden"===r.tailMode&&!s.alternate&&!Io)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*za()-r.renderingStartTime>Ml&&1073741824!==n&&(t.flags|=64,l=!0,Ji(r,!1),t.lanes=33554432);r.isBackwards?(s.sibling=t.child,t.child=s):(null!==(n=r.last)?n.sibling=s:t.child=s,r.last=s)}return null!==r.tail?(n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=za(),n.sibling=null,t=Fo.current,ia(Fo,l?1&t|2:1&t),n):null;case 23:case 24:return hu(),null!==e&&null!==e.memoizedState!=(null!==t.memoizedState)&&"unstable-defer-without-hiding"!==r.mode&&(t.flags|=4),null}throw Error(i(156,t.tag))}function tl(e){switch(e.tag){case 1:da(e.type)&&pa();var t=e.flags;return 4096&t?(e.flags=-4097&t|64,e):null;case 3:if(Bo(),oa(sa),oa(ua),Wo(),0!=(64&(t=e.flags)))throw Error(i(285));return e.flags=-4097&t|64,e;case 5:return To(e),null;case 13:return oa(Fo),4096&(t=e.flags)?(e.flags=-4097&t|64,e):null;case 19:return oa(Fo),null;case 4:return Bo(),null;case 10:return Xa(e),null;case 23:case 24:return hu(),null;default:return null}}function nl(e,t){try{var n="",r=t;do{n+=q(r),r=r.return}while(r);var a=n}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:a}}function rl(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}Hi=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Vi=function(e,t,n,r){var o=e.memoizedProps;if(o!==r){e=t.stateNode,_o(So.current);var i,l=null;switch(n){case"input":o=J(e,o),r=J(e,r),l=[];break;case"option":o=oe(e,o),r=oe(e,r),l=[];break;case"select":o=a({},o,{value:void 0}),r=a({},r,{value:void 0}),l=[];break;case"textarea":o=le(e,o),r=le(e,r),l=[];break;default:"function"!=typeof o.onClick&&"function"==typeof r.onClick&&(e.onclick=Lr)}for(f in Ce(n,r),n=null,o)if(!r.hasOwnProperty(f)&&o.hasOwnProperty(f)&&null!=o[f])if("style"===f){var s=o[f];for(i in s)s.hasOwnProperty(i)&&(n||(n={}),n[i]="")}else"dangerouslySetInnerHTML"!==f&&"children"!==f&&"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(u.hasOwnProperty(f)?l||(l=[]):(l=l||[]).push(f,null));for(f in r){var c=r[f];if(s=null!=o?o[f]:void 0,r.hasOwnProperty(f)&&c!==s&&(null!=c||null!=s))if("style"===f)if(s){for(i in s)!s.hasOwnProperty(i)||c&&c.hasOwnProperty(i)||(n||(n={}),n[i]="");for(i in c)c.hasOwnProperty(i)&&s[i]!==c[i]&&(n||(n={}),n[i]=c[i])}else n||(l||(l=[]),l.push(f,n)),n=c;else"dangerouslySetInnerHTML"===f?(c=c?c.__html:void 0,s=s?s.__html:void 0,null!=c&&s!==c&&(l=l||[]).push(f,c)):"children"===f?"string"!=typeof c&&"number"!=typeof c||(l=l||[]).push(f,""+c):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&(u.hasOwnProperty(f)?(null!=c&&"onScroll"===f&&Sr("scroll",e),l||s===c||(l=[])):"object"==typeof c&&null!==c&&c.$$typeof===L?c.toString():(l=l||[]).push(f,c))}n&&(l=l||[]).push("style",n);var f=l;(t.updateQueue=f)&&(t.flags|=4)}},Wi=function(e,t,n,r){n!==r&&(t.flags|=4)};var al="function"==typeof WeakMap?WeakMap:Map;function ol(e,t,n){(n=oo(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Hl||(Hl=!0,Vl=r),rl(0,t)},n}function il(e,t,n){(n=oo(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var a=t.value;n.payload=function(){return rl(0,t),r(a)}}var o=e.stateNode;return null!==o&&"function"==typeof o.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Wl?Wl=new Set([this]):Wl.add(this),rl(0,t));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}var ll="function"==typeof WeakSet?WeakSet:Set;function ul(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Uu(e,t)}else t.current=null}function sl(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.flags&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:qa(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:return void(256&t.flags&&$r(t.stateNode.containerInfo));case 5:case 6:case 4:case 17:return}throw Error(i(163))}function cl(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{if(3==(3&e.tag)){var r=e.create;e.destroy=r()}e=e.next}while(e!==t)}if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{var a=e;r=a.next,0!=(4&(a=a.tag))&&0!=(1&a)&&(_u(n,e),Pu(n,e)),e=r}while(e!==t)}return;case 1:return e=n.stateNode,4&n.flags&&(null===t?e.componentDidMount():(r=n.elementType===n.type?t.memoizedProps:qa(n.type,t.memoizedProps),e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(t=n.updateQueue)&&so(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}so(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.flags&&zr(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&wt(n)))));case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(i(163))}function fl(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)"function"==typeof(r=r.style).setProperty?r.setProperty("display","none","important"):r.display="none";else{r=n.stateNode;var a=n.memoizedProps.style;a=null!=a&&a.hasOwnProperty("display")?a.display:null,r.style.display=we("display",a)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else if((23!==n.tag&&24!==n.tag||null===n.memoizedState||n===e)&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}function dl(e,t){if(ba&&"function"==typeof ba.onCommitFiberUnmount)try{ba.onCommitFiberUnmount(va,t)}catch(e){}switch(t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var n=e=e.next;do{var r=n,a=r.destroy;if(r=r.tag,void 0!==a)if(0!=(4&r))_u(t,n);else{r=t;try{a()}catch(e){Uu(r,e)}}n=n.next}while(n!==e)}break;case 1:if(ul(t),"function"==typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){Uu(t,e)}break;case 5:ul(t);break;case 4:vl(e,t)}}function pl(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function hl(e){return 5===e.tag||3===e.tag||4===e.tag}function ml(e){e:{for(var t=e.return;null!==t;){if(hl(t))break e;t=t.return}throw Error(i(160))}var n=t;switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(i(161))}16&n.flags&&(ye(t,""),n.flags&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||hl(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.flags)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.flags)){n=n.stateNode;break e}}r?gl(e,n,t):yl(e,n,t)}function gl(e,t,n){var r=e.tag,a=5===r||6===r;if(a)e=a?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Lr));else if(4!==r&&null!==(e=e.child))for(gl(e,t,n),e=e.sibling;null!==e;)gl(e,t,n),e=e.sibling}function yl(e,t,n){var r=e.tag,a=5===r||6===r;if(a)e=a?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(yl(e,t,n),e=e.sibling;null!==e;)yl(e,t,n),e=e.sibling}function vl(e,t){for(var n,r,a=t,o=!1;;){if(!o){o=a.return;e:for(;;){if(null===o)throw Error(i(160));switch(n=o.stateNode,o.tag){case 5:r=!1;break e;case 3:case 4:n=n.containerInfo,r=!0;break e}o=o.return}o=!0}if(5===a.tag||6===a.tag){e:for(var l=e,u=a,s=u;;)if(dl(l,s),null!==s.child&&4!==s.tag)s.child.return=s,s=s.child;else{if(s===u)break e;for(;null===s.sibling;){if(null===s.return||s.return===u)break e;s=s.return}s.sibling.return=s.return,s=s.sibling}r?(l=n,u=a.stateNode,8===l.nodeType?l.parentNode.removeChild(u):l.removeChild(u)):n.removeChild(a.stateNode)}else if(4===a.tag){if(null!==a.child){n=a.stateNode.containerInfo,r=!0,a.child.return=a,a=a.child;continue}}else if(dl(e,a),null!==a.child){a.child.return=a,a=a.child;continue}if(a===t)break;for(;null===a.sibling;){if(null===a.return||a.return===t)return;4===(a=a.return).tag&&(o=!1)}a.sibling.return=a.return,a=a.sibling}}function bl(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:var n=t.updateQueue;if(null!==(n=null!==n?n.lastEffect:null)){var r=n=n.next;do{3==(3&r.tag)&&(e=r.destroy,r.destroy=void 0,void 0!==e&&e()),r=r.next}while(r!==n)}return;case 1:return;case 5:if(null!=(n=t.stateNode)){r=t.memoizedProps;var a=null!==e?e.memoizedProps:r;e=t.type;var o=t.updateQueue;if(t.updateQueue=null,null!==o){for(n[Qr]=r,"input"===e&&"radio"===r.type&&null!=r.name&&te(n,r),Ee(e,a),t=Ee(e,r),a=0;a<o.length;a+=2){var l=o[a],u=o[a+1];"style"===l?ke(n,u):"dangerouslySetInnerHTML"===l?ge(n,u):"children"===l?ye(n,u):w(n,l,u,t)}switch(e){case"input":ne(n,r);break;case"textarea":se(n,r);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(o=r.value)?ie(n,!!r.multiple,o,!1):e!==!!r.multiple&&(null!=r.defaultValue?ie(n,!!r.multiple,r.defaultValue,!0):ie(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(i(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((n=t.stateNode).hydrate&&(n.hydrate=!1,wt(n.containerInfo)));case 12:return;case 13:return null!==t.memoizedState&&(zl=za(),fl(t.child,!0)),void wl(t);case 19:return void wl(t);case 17:return;case 23:case 24:return void fl(t,null!==t.memoizedState)}throw Error(i(163))}function wl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new ll),t.forEach((function(t){var r=Fu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function kl(e,t){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&null!==(t=t.memoizedState)&&null===t.dehydrated}var Al=Math.ceil,Cl=k.ReactCurrentDispatcher,El=k.ReactCurrentOwner,Sl=0,xl=null,Pl=null,_l=0,Ol=0,Bl=aa(0),Ul=0,Tl=null,Fl=0,Nl=0,Ll=0,Rl=0,Il=null,zl=0,Ml=1/0;function Dl(){Ml=za()+500}var jl,$l=null,Hl=!1,Vl=null,Wl=null,ql=!1,Kl=null,Ql=90,Zl=[],Yl=[],Gl=null,Xl=0,Jl=null,eu=-1,tu=0,nu=0,ru=null,au=!1;function ou(){return 0!=(48&Sl)?za():-1!==eu?eu:eu=za()}function iu(e){if(0==(2&(e=e.mode)))return 1;if(0==(4&e))return 99===Ma()?1:2;if(0===tu&&(tu=Fl),0!==Wa.transition){0!==nu&&(nu=null!==Il?Il.pendingLanes:0),e=tu;var t=4186112&~nu;return 0==(t&=-t)&&0==(t=(e=4186112&~e)&-e)&&(t=8192),t}return e=Ma(),e=zt(0!=(4&Sl)&&98===e?12:e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),tu)}function lu(e,t,n){if(50<Xl)throw Xl=0,Jl=null,Error(i(185));if(null===(e=uu(e,t)))return null;jt(e,t,n),e===xl&&(Ll|=t,4===Ul&&fu(e,_l));var r=Ma();1===t?0!=(8&Sl)&&0==(48&Sl)?du(e):(su(e,n),0===Sl&&(Dl(),Ha())):(0==(4&Sl)||98!==r&&99!==r||(null===Gl?Gl=new Set([e]):Gl.add(e)),su(e,n)),Il=e}function uu(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}function su(e,t){for(var n=e.callbackNode,r=e.suspendedLanes,a=e.pingedLanes,o=e.expirationTimes,l=e.pendingLanes;0<l;){var u=31-$t(l),s=1<<u,c=o[u];if(-1===c){if(0==(s&r)||0!=(s&a)){c=t,Lt(s);var f=Nt;o[u]=10<=f?c+250:6<=f?c+5e3:-1}}else c<=t&&(e.expiredLanes|=s);l&=~s}if(r=Rt(e,e===xl?_l:0),t=Nt,0===r)null!==n&&(n!==Ta&&Aa(n),e.callbackNode=null,e.callbackPriority=0);else{if(null!==n){if(e.callbackPriority===t)return;n!==Ta&&Aa(n)}15===t?(n=du.bind(null,e),null===Na?(Na=[n],La=ka(Pa,Va)):Na.push(n),n=Ta):n=14===t?$a(99,du.bind(null,e)):$a(n=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(i(358,e))}}(t),cu.bind(null,e)),e.callbackPriority=t,e.callbackNode=n}}function cu(e){if(eu=-1,nu=tu=0,0!=(48&Sl))throw Error(i(327));var t=e.callbackNode;if(xu()&&e.callbackNode!==t)return null;var n=Rt(e,e===xl?_l:0);if(0===n)return null;var r=n,a=Sl;Sl|=16;var o=yu();for(xl===e&&_l===r||(Dl(),mu(e,r));;)try{wu();break}catch(t){gu(e,t)}if(Ga(),Cl.current=o,Sl=a,null!==Pl?r=0:(xl=null,_l=0,r=Ul),0!=(Fl&Ll))mu(e,0);else if(0!==r){if(2===r&&(Sl|=64,e.hydrate&&(e.hydrate=!1,$r(e.containerInfo)),0!==(n=It(e))&&(r=vu(e,n))),1===r)throw t=Tl,mu(e,0),fu(e,n),su(e,za()),t;switch(e.finishedWork=e.current.alternate,e.finishedLanes=n,r){case 0:case 1:throw Error(i(345));case 2:Cu(e);break;case 3:if(fu(e,n),(62914560&n)===n&&10<(r=zl+500-za())){if(0!==Rt(e,0))break;if(((a=e.suspendedLanes)&n)!==n){ou(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=Dr(Cu.bind(null,e),r);break}Cu(e);break;case 4:if(fu(e,n),(4186112&n)===n)break;for(r=e.eventTimes,a=-1;0<n;){var l=31-$t(n);o=1<<l,(l=r[l])>a&&(a=l),n&=~o}if(n=a,10<(n=(120>(n=za()-n)?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*Al(n/1960))-n)){e.timeoutHandle=Dr(Cu.bind(null,e),n);break}Cu(e);break;case 5:Cu(e);break;default:throw Error(i(329))}}return su(e,za()),e.callbackNode===t?cu.bind(null,e):null}function fu(e,t){for(t&=~Rl,t&=~Ll,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-$t(t),r=1<<n;e[n]=-1,t&=~r}}function du(e){if(0!=(48&Sl))throw Error(i(327));if(xu(),e===xl&&0!=(e.expiredLanes&_l)){var t=_l,n=vu(e,t);0!=(Fl&Ll)&&(n=vu(e,t=Rt(e,t)))}else n=vu(e,t=Rt(e,0));if(0!==e.tag&&2===n&&(Sl|=64,e.hydrate&&(e.hydrate=!1,$r(e.containerInfo)),0!==(t=It(e))&&(n=vu(e,t))),1===n)throw n=Tl,mu(e,0),fu(e,t),su(e,za()),n;return e.finishedWork=e.current.alternate,e.finishedLanes=t,Cu(e),su(e,za()),null}function pu(e,t){ia(Bl,Ol),Ol|=t,Fl|=t}function hu(){Ol=Bl.current,oa(Bl)}function mu(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,jr(n)),null!==Pl)for(n=Pl.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&pa();break;case 3:Bo(),oa(sa),oa(ua),Wo();break;case 5:To(r);break;case 4:Bo();break;case 13:case 19:oa(Fo);break;case 10:Xa(r);break;case 23:case 24:hu()}n=n.return}xl=e,Pl=Iu(e.current,null),_l=Ol=Fl=t,Ul=0,Tl=null,Rl=Ll=Nl=0}function gu(e,t){for(;;){var n=Pl;try{if(Ga(),qo.current=Pi,Xo){for(var r=Zo.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}Xo=!1}if(Qo=0,Go=Yo=Zo=null,Jo=!1,El.current=null,null===n||null===n.return){Ul=1,Tl=t,Pl=null;break}e:{var o=e,i=n.return,l=n,u=t;if(t=_l,l.flags|=2048,l.firstEffect=l.lastEffect=null,null!==u&&"object"==typeof u&&"function"==typeof u.then){var s=u;if(0==(2&l.mode)){var c=l.alternate;c?(l.updateQueue=c.updateQueue,l.memoizedState=c.memoizedState,l.lanes=c.lanes):(l.updateQueue=null,l.memoizedState=null)}var f=0!=(1&Fo.current),d=i;do{var p;if(p=13===d.tag){var h=d.memoizedState;if(null!==h)p=null!==h.dehydrated;else{var m=d.memoizedProps;p=void 0!==m.fallback&&(!0!==m.unstable_avoidThisFallback||!f)}}if(p){var g=d.updateQueue;if(null===g){var y=new Set;y.add(s),d.updateQueue=y}else g.add(s);if(0==(2&d.mode)){if(d.flags|=64,l.flags|=16384,l.flags&=-2981,1===l.tag)if(null===l.alternate)l.tag=17;else{var v=oo(-1,1);v.tag=2,io(l,v)}l.lanes|=1;break e}u=void 0,l=t;var b=o.pingCache;if(null===b?(b=o.pingCache=new al,u=new Set,b.set(s,u)):void 0===(u=b.get(s))&&(u=new Set,b.set(s,u)),!u.has(l)){u.add(l);var w=Tu.bind(null,o,s,l);s.then(w,w)}d.flags|=4096,d.lanes=t;break e}d=d.return}while(null!==d);u=Error((K(l.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==Ul&&(Ul=2),u=nl(u,l),d=i;do{switch(d.tag){case 3:o=u,d.flags|=4096,t&=-t,d.lanes|=t,lo(d,ol(0,o,t));break e;case 1:o=u;var k=d.type,A=d.stateNode;if(0==(64&d.flags)&&("function"==typeof k.getDerivedStateFromError||null!==A&&"function"==typeof A.componentDidCatch&&(null===Wl||!Wl.has(A)))){d.flags|=4096,t&=-t,d.lanes|=t,lo(d,il(d,o,t));break e}}d=d.return}while(null!==d)}Au(n)}catch(e){t=e,Pl===n&&null!==n&&(Pl=n=n.return);continue}break}}function yu(){var e=Cl.current;return Cl.current=Pi,null===e?Pi:e}function vu(e,t){var n=Sl;Sl|=16;var r=yu();for(xl===e&&_l===t||mu(e,t);;)try{bu();break}catch(t){gu(e,t)}if(Ga(),Sl=n,Cl.current=r,null!==Pl)throw Error(i(261));return xl=null,_l=0,Ul}function bu(){for(;null!==Pl;)ku(Pl)}function wu(){for(;null!==Pl&&!Ca();)ku(Pl)}function ku(e){var t=jl(e.alternate,e,Ol);e.memoizedProps=e.pendingProps,null===t?Au(e):Pl=t,El.current=null}function Au(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(2048&t.flags)){if(null!==(n=el(n,t,Ol)))return void(Pl=n);if(24!==(n=t).tag&&23!==n.tag||null===n.memoizedState||0!=(1073741824&Ol)||0==(4&n.mode)){for(var r=0,a=n.child;null!==a;)r|=a.lanes|a.childLanes,a=a.sibling;n.childLanes=r}null!==e&&0==(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=t.firstEffect),e.lastEffect=t.lastEffect),1<t.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=t:e.firstEffect=t,e.lastEffect=t))}else{if(null!==(n=tl(t)))return n.flags&=2047,void(Pl=n);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(t=t.sibling))return void(Pl=t);Pl=t=e}while(null!==t);0===Ul&&(Ul=5)}function Cu(e){var t=Ma();return ja(99,Eu.bind(null,e,t)),null}function Eu(e,t){do{xu()}while(null!==Kl);if(0!=(48&Sl))throw Error(i(327));var n=e.finishedWork;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(i(177));e.callbackNode=null;var r=n.lanes|n.childLanes,a=r,o=e.pendingLanes&~a;e.pendingLanes=a,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=a,e.mutableReadLanes&=a,e.entangledLanes&=a,a=e.entanglements;for(var l=e.eventTimes,u=e.expirationTimes;0<o;){var s=31-$t(o),c=1<<s;a[s]=0,l[s]=-1,u[s]=-1,o&=~c}if(null!==Gl&&0==(24&r)&&Gl.has(e)&&Gl.delete(e),e===xl&&(Pl=xl=null,_l=0),1<n.flags?null!==n.lastEffect?(n.lastEffect.nextEffect=n,r=n.firstEffect):r=n:r=n.firstEffect,null!==r){if(a=Sl,Sl|=32,El.current=null,Rr=Kt,dr(l=fr())){if("selectionStart"in l)u={start:l.selectionStart,end:l.selectionEnd};else e:if(u=(u=l.ownerDocument)&&u.defaultView||window,(c=u.getSelection&&u.getSelection())&&0!==c.rangeCount){u=c.anchorNode,o=c.anchorOffset,s=c.focusNode,c=c.focusOffset;try{u.nodeType,s.nodeType}catch(e){u=null;break e}var f=0,d=-1,p=-1,h=0,m=0,g=l,y=null;t:for(;;){for(var v;g!==u||0!==o&&3!==g.nodeType||(d=f+o),g!==s||0!==c&&3!==g.nodeType||(p=f+c),3===g.nodeType&&(f+=g.nodeValue.length),null!==(v=g.firstChild);)y=g,g=v;for(;;){if(g===l)break t;if(y===u&&++h===o&&(d=f),y===s&&++m===c&&(p=f),null!==(v=g.nextSibling))break;y=(g=y).parentNode}g=v}u=-1===d||-1===p?null:{start:d,end:p}}else u=null;u=u||{start:0,end:0}}else u=null;Ir={focusedElem:l,selectionRange:u},Kt=!1,ru=null,au=!1,$l=r;do{try{Su()}catch(e){if(null===$l)throw Error(i(330));Uu($l,e),$l=$l.nextEffect}}while(null!==$l);ru=null,$l=r;do{try{for(l=e;null!==$l;){var b=$l.flags;if(16&b&&ye($l.stateNode,""),128&b){var w=$l.alternate;if(null!==w){var k=w.ref;null!==k&&("function"==typeof k?k(null):k.current=null)}}switch(1038&b){case 2:ml($l),$l.flags&=-3;break;case 6:ml($l),$l.flags&=-3,bl($l.alternate,$l);break;case 1024:$l.flags&=-1025;break;case 1028:$l.flags&=-1025,bl($l.alternate,$l);break;case 4:bl($l.alternate,$l);break;case 8:vl(l,u=$l);var A=u.alternate;pl(u),null!==A&&pl(A)}$l=$l.nextEffect}}catch(e){if(null===$l)throw Error(i(330));Uu($l,e),$l=$l.nextEffect}}while(null!==$l);if(k=Ir,w=fr(),b=k.focusedElem,l=k.selectionRange,w!==b&&b&&b.ownerDocument&&cr(b.ownerDocument.documentElement,b)){null!==l&&dr(b)&&(w=l.start,void 0===(k=l.end)&&(k=w),"selectionStart"in b?(b.selectionStart=w,b.selectionEnd=Math.min(k,b.value.length)):(k=(w=b.ownerDocument||document)&&w.defaultView||window).getSelection&&(k=k.getSelection(),u=b.textContent.length,A=Math.min(l.start,u),l=void 0===l.end?A:Math.min(l.end,u),!k.extend&&A>l&&(u=l,l=A,A=u),u=sr(b,A),o=sr(b,l),u&&o&&(1!==k.rangeCount||k.anchorNode!==u.node||k.anchorOffset!==u.offset||k.focusNode!==o.node||k.focusOffset!==o.offset)&&((w=w.createRange()).setStart(u.node,u.offset),k.removeAllRanges(),A>l?(k.addRange(w),k.extend(o.node,o.offset)):(w.setEnd(o.node,o.offset),k.addRange(w))))),w=[];for(k=b;k=k.parentNode;)1===k.nodeType&&w.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"==typeof b.focus&&b.focus(),b=0;b<w.length;b++)(k=w[b]).element.scrollLeft=k.left,k.element.scrollTop=k.top}Kt=!!Rr,Ir=Rr=null,e.current=n,$l=r;do{try{for(b=e;null!==$l;){var C=$l.flags;if(36&C&&cl(b,$l.alternate,$l),128&C){w=void 0;var E=$l.ref;if(null!==E){var S=$l.stateNode;switch($l.tag){case 5:w=S;break;default:w=S}"function"==typeof E?E(w):E.current=w}}$l=$l.nextEffect}}catch(e){if(null===$l)throw Error(i(330));Uu($l,e),$l=$l.nextEffect}}while(null!==$l);$l=null,Fa(),Sl=a}else e.current=n;if(ql)ql=!1,Kl=e,Ql=t;else for($l=r;null!==$l;)t=$l.nextEffect,$l.nextEffect=null,8&$l.flags&&((C=$l).sibling=null,C.stateNode=null),$l=t;if(0===(r=e.pendingLanes)&&(Wl=null),1===r?e===Jl?Xl++:(Xl=0,Jl=e):Xl=0,n=n.stateNode,ba&&"function"==typeof ba.onCommitFiberRoot)try{ba.onCommitFiberRoot(va,n,void 0,64==(64&n.current.flags))}catch(e){}if(su(e,za()),Hl)throw Hl=!1,e=Vl,Vl=null,e;return 0!=(8&Sl)||Ha(),null}function Su(){for(;null!==$l;){var e=$l.alternate;au||null===ru||(0!=(8&$l.flags)?Xe($l,ru)&&(au=!0):13===$l.tag&&kl(e,$l)&&Xe($l,ru)&&(au=!0));var t=$l.flags;0!=(256&t)&&sl(e,$l),0==(512&t)||ql||(ql=!0,$a(97,(function(){return xu(),null}))),$l=$l.nextEffect}}function xu(){if(90!==Ql){var e=97<Ql?97:Ql;return Ql=90,ja(e,Ou)}return!1}function Pu(e,t){Zl.push(t,e),ql||(ql=!0,$a(97,(function(){return xu(),null})))}function _u(e,t){Yl.push(t,e),ql||(ql=!0,$a(97,(function(){return xu(),null})))}function Ou(){if(null===Kl)return!1;var e=Kl;if(Kl=null,0!=(48&Sl))throw Error(i(331));var t=Sl;Sl|=32;var n=Yl;Yl=[];for(var r=0;r<n.length;r+=2){var a=n[r],o=n[r+1],l=a.destroy;if(a.destroy=void 0,"function"==typeof l)try{l()}catch(e){if(null===o)throw Error(i(330));Uu(o,e)}}for(n=Zl,Zl=[],r=0;r<n.length;r+=2){a=n[r],o=n[r+1];try{var u=a.create;a.destroy=u()}catch(e){if(null===o)throw Error(i(330));Uu(o,e)}}for(u=e.current.firstEffect;null!==u;)e=u.nextEffect,u.nextEffect=null,8&u.flags&&(u.sibling=null,u.stateNode=null),u=e;return Sl=t,Ha(),!0}function Bu(e,t,n){io(e,t=ol(0,t=nl(n,t),1)),t=ou(),null!==(e=uu(e,1))&&(jt(e,1,t),su(e,t))}function Uu(e,t){if(3===e.tag)Bu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){Bu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Wl||!Wl.has(r))){var a=il(n,e=nl(t,e),1);if(io(n,a),a=ou(),null!==(n=uu(n,1)))jt(n,1,a),su(n,a);else if("function"==typeof r.componentDidCatch&&(null===Wl||!Wl.has(r)))try{r.componentDidCatch(t,e)}catch(e){}break}}n=n.return}}function Tu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=ou(),e.pingedLanes|=e.suspendedLanes&n,xl===e&&(_l&n)===n&&(4===Ul||3===Ul&&(62914560&_l)===_l&&500>za()-zl?mu(e,0):Rl|=n),su(e,t)}function Fu(e,t){var n=e.stateNode;null!==n&&n.delete(t),0==(t=0)&&(0==(2&(t=e.mode))?t=1:0==(4&t)?t=99===Ma()?1:2:(0===tu&&(tu=Fl),0===(t=Mt(62914560&~tu))&&(t=4194304))),n=ou(),null!==(e=uu(e,t))&&(jt(e,t,n),su(e,n))}function Nu(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function Lu(e,t,n,r){return new Nu(e,t,n,r)}function Ru(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Iu(e,t){var n=e.alternate;return null===n?((n=Lu(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function zu(e,t,n,r,a,o){var l=2;if(r=e,"function"==typeof e)Ru(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case E:return Mu(n.children,a,o,t);case R:l=8,a|=16;break;case S:l=8,a|=1;break;case x:return(e=Lu(12,n,t,8|a)).elementType=x,e.type=x,e.lanes=o,e;case B:return(e=Lu(13,n,t,a)).type=B,e.elementType=B,e.lanes=o,e;case U:return(e=Lu(19,n,t,a)).elementType=U,e.lanes=o,e;case I:return Du(n,a,o,t);case z:return(e=Lu(24,n,t,a)).elementType=z,e.lanes=o,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case P:l=10;break e;case _:l=9;break e;case O:l=11;break e;case T:l=14;break e;case F:l=16,r=null;break e;case N:l=22;break e}throw Error(i(130,null==e?e:typeof e,""))}return(t=Lu(l,n,t,a)).elementType=e,t.type=r,t.lanes=o,t}function Mu(e,t,n,r){return(e=Lu(7,e,r,t)).lanes=n,e}function Du(e,t,n,r){return(e=Lu(23,e,r,t)).elementType=I,e.lanes=n,e}function ju(e,t,n){return(e=Lu(6,e,null,t)).lanes=n,e}function $u(e,t,n){return(t=Lu(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Hu(e,t,n){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=Dt(0),this.expirationTimes=Dt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Dt(0),this.mutableSourceEagerHydrationData=null}function Vu(e,t,n,r){var a=t.current,o=ou(),l=iu(a);e:if(n){t:{if(Ze(n=n._reactInternals)!==n||1!==n.tag)throw Error(i(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(da(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(i(171))}if(1===n.tag){var s=n.type;if(da(s)){n=ma(n,s,u);break e}}n=u}else n=la;return null===t.context?t.context=n:t.pendingContext=n,(t=oo(o,l)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),io(a,t),lu(a,l,o),l}function Wu(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function qu(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Ku(e,t){qu(e,t),(e=e.alternate)&&qu(e,t)}function Qu(e,t,n){var r=null!=n&&null!=n.hydrationOptions&&n.hydrationOptions.mutableSources||null;if(n=new Hu(e,t,null!=n&&!0===n.hydrate),t=Lu(3,null,null,2===t?7:1===t?3:0),n.current=t,t.stateNode=n,ro(t),e[Zr]=n.current,Pr(8===e.nodeType?e.parentNode:e),r)for(e=0;e<r.length;e++){var a=(t=r[e])._getVersion;a=a(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,a]:n.mutableSourceEagerHydrationData.push(t,a)}this._internalRoot=n}function Zu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Yu(e,t,n,r,a){var o=n._reactRootContainer;if(o){var i=o._internalRoot;if("function"==typeof a){var l=a;a=function(){var e=Wu(i);l.call(e)}}Vu(t,i,e,a)}else{if(o=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Qu(e,0,t?{hydrate:!0}:void 0)}(n,r),i=o._internalRoot,"function"==typeof a){var u=a;a=function(){var e=Wu(i);u.call(e)}}!function(e,t){var n=Sl;Sl&=-2,Sl|=8;try{e(t)}finally{0===(Sl=n)&&(Dl(),Ha())}}((function(){Vu(t,i,e,a)}))}return Wu(i)}jl=function(e,t,n){var r=t.lanes;if(null!==e)if(e.memoizedProps!==t.pendingProps||sa.current)Ti=!0;else{if(0==(n&r)){switch(Ti=!1,t.tag){case 3:$i(t),Ho();break;case 5:Uo(t);break;case 1:da(t.type)&&ga(t);break;case 4:Oo(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value;var a=t.type._context;ia(Ka,a._currentValue),a._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!=(n&t.child.childLanes)?Ki(e,t,n):(ia(Fo,1&Fo.current),null!==(t=Xi(e,t,n))?t.sibling:null);ia(Fo,1&Fo.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(64&e.flags)){if(r)return Gi(e,t,n);t.flags|=64}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),ia(Fo,Fo.current),r)break;return null;case 23:case 24:return t.lanes=0,Ii(e,t,n)}return Xi(e,t,n)}Ti=0!=(16384&e.flags)}else Ti=!1;switch(t.lanes=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=fa(t,ua.current),eo(t,n),a=ni(null,t,r,e,a,n),t.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,da(r)){var o=!0;ga(t)}else o=!1;t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,ro(t);var l=r.getDerivedStateFromProps;"function"==typeof l&&fo(t,r,l,e),a.updater=po,t.stateNode=a,a._reactInternals=t,yo(t,r,e,n),t=ji(null,t,r,!0,o,n)}else t.tag=0,Fi(null,t,a,n),t=t.child;return t;case 16:a=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=(o=a._init)(a._payload),t.type=a,o=t.tag=function(e){if("function"==typeof e)return Ru(e)?1:0;if(null!=e){if((e=e.$$typeof)===O)return 11;if(e===T)return 14}return 2}(a),e=qa(a,e),o){case 0:t=Mi(null,t,a,e,n);break e;case 1:t=Di(null,t,a,e,n);break e;case 11:t=Ni(null,t,a,e,n);break e;case 14:t=Li(null,t,a,qa(a.type,e),r,n);break e}throw Error(i(306,a,""))}return t;case 0:return r=t.type,a=t.pendingProps,Mi(e,t,r,a=t.elementType===r?a:qa(r,a),n);case 1:return r=t.type,a=t.pendingProps,Di(e,t,r,a=t.elementType===r?a:qa(r,a),n);case 3:if($i(t),r=t.updateQueue,null===e||null===r)throw Error(i(282));if(r=t.pendingProps,a=null!==(a=t.memoizedState)?a.element:null,ao(e,t),uo(t,r,null,n),(r=t.memoizedState.element)===a)Ho(),t=Xi(e,t,n);else{if((o=(a=t.stateNode).hydrate)&&(Ro=Hr(t.stateNode.containerInfo.firstChild),Lo=t,o=Io=!0),o){if(null!=(e=a.mutableSourceEagerHydrationData))for(a=0;a<e.length;a+=2)(o=e[a])._workInProgressVersionPrimary=e[a+1],Vo.push(o);for(n=Co(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|1024,n=n.sibling}else Fi(e,t,r,n),Ho();t=t.child}return t;case 5:return Uo(t),null===e&&Do(t),r=t.type,a=t.pendingProps,o=null!==e?e.memoizedProps:null,l=a.children,Mr(r,a)?l=null:null!==o&&Mr(r,o)&&(t.flags|=16),zi(e,t),Fi(e,t,l,n),t.child;case 6:return null===e&&Do(t),null;case 13:return Ki(e,t,n);case 4:return Oo(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Ao(t,null,r,n):Fi(e,t,r,n),t.child;case 11:return r=t.type,a=t.pendingProps,Ni(e,t,r,a=t.elementType===r?a:qa(r,a),n);case 7:return Fi(e,t,t.pendingProps,n),t.child;case 8:case 12:return Fi(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,a=t.pendingProps,l=t.memoizedProps,o=a.value;var u=t.type._context;if(ia(Ka,u._currentValue),u._currentValue=o,null!==l)if(u=l.value,0==(o=or(u,o)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,o):1073741823))){if(l.children===a.children&&!sa.current){t=Xi(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var s=u.dependencies;if(null!==s){l=u.child;for(var c=s.firstContext;null!==c;){if(c.context===r&&0!=(c.observedBits&o)){1===u.tag&&((c=oo(-1,n&-n)).tag=2,io(u,c)),u.lanes|=n,null!==(c=u.alternate)&&(c.lanes|=n),Ja(u.return,n),s.lanes|=n;break}c=c.next}}else l=10===u.tag&&u.type===t.type?null:u.child;if(null!==l)l.return=u;else for(l=u;null!==l;){if(l===t){l=null;break}if(null!==(u=l.sibling)){u.return=l.return,l=u;break}l=l.return}u=l}Fi(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,r=(o=t.pendingProps).children,eo(t,n),r=r(a=to(a,o.unstable_observedBits)),t.flags|=1,Fi(e,t,r,n),t.child;case 14:return o=qa(a=t.type,t.pendingProps),Li(e,t,a,o=qa(a.type,o),r,n);case 15:return Ri(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,a=t.pendingProps,a=t.elementType===r?a:qa(r,a),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,da(r)?(e=!0,ga(t)):e=!1,eo(t,n),mo(t,r,a),yo(t,r,a,n),ji(null,t,r,!0,e,n);case 19:return Gi(e,t,n);case 23:case 24:return Ii(e,t,n)}throw Error(i(156,t.tag))},Qu.prototype.render=function(e){Vu(e,this._internalRoot,null,null)},Qu.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Vu(null,e,null,(function(){t[Zr]=null}))},Je=function(e){13===e.tag&&(lu(e,4,ou()),Ku(e,4))},et=function(e){13===e.tag&&(lu(e,67108864,ou()),Ku(e,67108864))},tt=function(e){if(13===e.tag){var t=ou(),n=iu(e);lu(e,n,t),Ku(e,n)}},nt=function(e,t){return t()},xe=function(e,t,n){switch(t){case"input":if(ne(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var a=ea(r);if(!a)throw Error(i(90));G(r),ne(r,a)}}}break;case"textarea":se(e,n);break;case"select":null!=(t=n.value)&&ie(e,!!n.multiple,t,!1)}},Te=function(e,t){var n=Sl;Sl|=1;try{return e(t)}finally{0===(Sl=n)&&(Dl(),Ha())}},Fe=function(e,t,n,r,a){var o=Sl;Sl|=4;try{return ja(98,e.bind(null,t,n,r,a))}finally{0===(Sl=o)&&(Dl(),Ha())}},Ne=function(){0==(49&Sl)&&(function(){if(null!==Gl){var e=Gl;Gl=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,su(e,za())}))}Ha()}(),xu())},Le=function(e,t){var n=Sl;Sl|=2;try{return e(t)}finally{0===(Sl=n)&&(Dl(),Ha())}};var Gu={findFiberByHostInstance:Gr,bundleType:0,version:"17.0.1",rendererPackageName:"react-dom"},Xu={bundleType:Gu.bundleType,version:Gu.version,rendererPackageName:Gu.rendererPackageName,rendererConfig:Gu.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:k.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=function(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ze(e)))throw Error(i(188));return t!==e?null:e}for(var n=e,r=t;;){var a=n.return;if(null===a)break;var o=a.alternate;if(null===o){if(null!==(r=a.return)){n=r;continue}break}if(a.child===o.child){for(o=a.child;o;){if(o===n)return Ge(a),e;if(o===r)return Ge(a),t;o=o.sibling}throw Error(i(188))}if(n.return!==r.return)n=a,r=o;else{for(var l=!1,u=a.child;u;){if(u===n){l=!0,n=a,r=o;break}if(u===r){l=!0,r=a,n=o;break}u=u.sibling}if(!l){for(u=o.child;u;){if(u===n){l=!0,n=o,r=a;break}if(u===r){l=!0,r=o,n=a;break}u=u.sibling}if(!l)throw Error(i(189))}}if(n.alternate!==r)throw Error(i(190))}if(3!==n.tag)throw Error(i(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}(e))?null:e.stateNode},findFiberByHostInstance:Gu.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var Ju=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Ju.isDisabled&&Ju.supportsFiber)try{va=Ju.inject(Xu),ba=Ju}catch(me){}}t.render=function(e,t,n){if(!Zu(t))throw Error(i(200));return Yu(null,e,t,!1,n)}},3935:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(4448)},5172:(e,t,n)=>{"use strict";n.d(t,{y:()=>O});var r="undefined"!=typeof navigator&&navigator.userAgent.toLowerCase().indexOf("firefox")>0;function a(e,t,n){e.addEventListener?e.addEventListener(t,n,!1):e.attachEvent&&e.attachEvent("on".concat(t),(function(){n(window.event)}))}function o(e,t){for(var n=t.slice(0,t.length-1),r=0;r<n.length;r++)n[r]=e[n[r].toLowerCase()];return n}function i(e){"string"!=typeof e&&(e="");for(var t=(e=e.replace(/\s/g,"")).split(","),n=t.lastIndexOf("");n>=0;)t[n-1]+=",",t.splice(n,1),n=t.lastIndexOf("");return t}for(var l={backspace:8,tab:9,clear:12,enter:13,return:13,esc:27,escape:27,space:32,left:37,up:38,right:39,down:40,del:46,delete:46,ins:45,insert:45,home:36,end:35,pageup:33,pagedown:34,capslock:20,"⇪":20,",":188,".":190,"/":191,"`":192,"-":r?173:189,"=":r?61:187,";":r?59:186,"'":222,"[":219,"]":221,"\\":220},u={"⇧":16,shift:16,"⌥":18,alt:18,option:18,"⌃":17,ctrl:17,control:17,"⌘":91,cmd:91,command:91},s={16:"shiftKey",18:"altKey",17:"ctrlKey",91:"metaKey",shiftKey:16,ctrlKey:17,altKey:18,metaKey:91},c={16:!1,18:!1,17:!1,91:!1},f={},d=1;d<20;d++)l["f".concat(d)]=111+d;var p=[],h="all",m=[],g=function(e){return l[e.toLowerCase()]||u[e.toLowerCase()]||e.toUpperCase().charCodeAt(0)};function y(e){h=e||"all"}function v(){return h||"all"}var b=function(e){var t=e.key,n=e.scope,r=e.method,a=e.splitKey,l=void 0===a?"+":a;i(t).forEach((function(e){var t=e.split(l),a=t.length,i=t[a-1],s="*"===i?"*":g(i);if(f[s]){n||(n=v());var c=a>1?o(u,t):[];f[s]=f[s].map((function(e){return r&&e.method!==r||e.scope!==n||!function(e,t){for(var n=e.length>=t.length?e:t,r=e.length>=t.length?t:e,a=!0,o=0;o<n.length;o++)-1===r.indexOf(n[o])&&(a=!1);return a}(e.mods,c)?e:{}}))}}))};function w(e,t,n){var r;if(t.scope===n||"all"===t.scope){for(var a in r=t.mods.length>0,c)Object.prototype.hasOwnProperty.call(c,a)&&(!c[a]&&t.mods.indexOf(+a)>-1||c[a]&&-1===t.mods.indexOf(+a))&&(r=!1);(0!==t.mods.length||c[16]||c[18]||c[17]||c[91])&&!r&&"*"!==t.shortcut||!1===t.method(e,t)&&(e.preventDefault?e.preventDefault():e.returnValue=!1,e.stopPropagation&&e.stopPropagation(),e.cancelBubble&&(e.cancelBubble=!0))}}function k(e){var t=f["*"],n=e.keyCode||e.which||e.charCode;if(A.filter.call(this,e)){if(93!==n&&224!==n||(n=91),-1===p.indexOf(n)&&229!==n&&p.push(n),["ctrlKey","altKey","shiftKey","metaKey"].forEach((function(t){var n=s[t];e[t]&&-1===p.indexOf(n)?p.push(n):!e[t]&&p.indexOf(n)>-1?p.splice(p.indexOf(n),1):"metaKey"===t&&e[t]&&3===p.length&&(e.ctrlKey||e.shiftKey||e.altKey||(p=p.slice(p.indexOf(n))))})),n in c){for(var r in c[n]=!0,u)u[r]===n&&(A[r]=!0);if(!t)return}for(var a in c)Object.prototype.hasOwnProperty.call(c,a)&&(c[a]=e[s[a]]);e.getModifierState&&(!e.altKey||e.ctrlKey)&&e.getModifierState("AltGraph")&&(-1===p.indexOf(17)&&p.push(17),-1===p.indexOf(18)&&p.push(18),c[17]=!0,c[18]=!0);var o=v();if(t)for(var i=0;i<t.length;i++)t[i].scope===o&&("keydown"===e.type&&t[i].keydown||"keyup"===e.type&&t[i].keyup)&&w(e,t[i],o);if(n in f)for(var l=0;l<f[n].length;l++)if(("keydown"===e.type&&f[n][l].keydown||"keyup"===e.type&&f[n][l].keyup)&&f[n][l].key){for(var d=f[n][l],h=d.splitKey,m=d.key.split(h),y=[],b=0;b<m.length;b++)y.push(g(m[b]));y.sort().join("")===p.sort().join("")&&w(e,d,o)}}}function A(e,t,n){p=[];var r=i(e),l=[],s="all",d=document,h=0,y=!1,v=!0,b="+";for(void 0===n&&"function"==typeof t&&(n=t),"[object Object]"===Object.prototype.toString.call(t)&&(t.scope&&(s=t.scope),t.element&&(d=t.element),t.keyup&&(y=t.keyup),void 0!==t.keydown&&(v=t.keydown),"string"==typeof t.splitKey&&(b=t.splitKey)),"string"==typeof t&&(s=t);h<r.length;h++)l=[],(e=r[h].split(b)).length>1&&(l=o(u,e)),(e="*"===(e=e[e.length-1])?"*":g(e))in f||(f[e]=[]),f[e].push({keyup:y,keydown:v,scope:s,mods:l,shortcut:r[h],method:n,key:r[h],splitKey:b});void 0!==d&&!function(e){return m.indexOf(e)>-1}(d)&&window&&(m.push(d),a(d,"keydown",(function(e){k(e)})),a(window,"focus",(function(){p=[]})),a(d,"keyup",(function(e){k(e),function(e){var t=e.keyCode||e.which||e.charCode,n=p.indexOf(t);if(n>=0&&p.splice(n,1),e.key&&"meta"===e.key.toLowerCase()&&p.splice(0,p.length),93!==t&&224!==t||(t=91),t in c)for(var r in c[t]=!1,u)u[r]===t&&(A[r]=!1)}(e)})))}var C={setScope:y,getScope:v,deleteScope:function(e,t){var n,r;for(var a in e||(e=v()),f)if(Object.prototype.hasOwnProperty.call(f,a))for(n=f[a],r=0;r<n.length;)n[r].scope===e?n.splice(r,1):r++;v()===e&&y(t||"all")},getPressedKeyCodes:function(){return p.slice(0)},isPressed:function(e){return"string"==typeof e&&(e=g(e)),-1!==p.indexOf(e)},filter:function(e){var t=e.target||e.srcElement,n=t.tagName,r=!0;return!t.isContentEditable&&("INPUT"!==n&&"TEXTAREA"!==n&&"SELECT"!==n||t.readOnly)||(r=!1),r},unbind:function(e){if(e){if(Array.isArray(e))e.forEach((function(e){e.key&&b(e)}));else if("object"==typeof e)e.key&&b(e);else if("string"==typeof e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];var a=n[0],o=n[1];"function"==typeof a&&(o=a,a=""),b({key:e,scope:a,method:o,splitKey:"+"})}}else Object.keys(f).forEach((function(e){return delete f[e]}))}};for(var E in C)Object.prototype.hasOwnProperty.call(C,E)&&(A[E]=C[E]);if("undefined"!=typeof window){var S=window.hotkeys;A.noConflict=function(e){return e&&window.hotkeys===A&&(window.hotkeys=S),A},window.hotkeys=A}const x=A;var P=n(7294);x.filter=function(){return!0};var _=function(e,t){var n=e.target,r=e.srcElement,a=n&&n.tagName||r&&r.tagName;return Boolean(a&&t&&t.includes(a))};function O(e,t,n,r){n instanceof Array&&(r=n,n=void 0);var a=n||{},o=a.enableOnTags,i=a.filter,l=a.keyup,u=a.keydown,s=(0,P.useRef)(null),c=(0,P.useCallback)((function(e,n){return!(i&&!i(e)||(!_(e,["INPUT","TEXTAREA","SELECT"])||_(e,o))&&(null!==s.current&&document.activeElement!==s.current||(t(e,n),0)))}),r?[s,o,i].concat(r):[s,o,i]);return(0,P.useEffect)((function(){return l&&!0!==u&&(n.keydown=!1),x(e,n||{},c),function(){return x.unbind(e,c)}}),[c,n,e]),s}},9921:(e,t)=>{"use strict";var n="function"==typeof Symbol&&Symbol.for,r=n?Symbol.for("react.element"):60103,a=n?Symbol.for("react.portal"):60106,o=n?Symbol.for("react.fragment"):60107,i=n?Symbol.for("react.strict_mode"):60108,l=n?Symbol.for("react.profiler"):60114,u=n?Symbol.for("react.provider"):60109,s=n?Symbol.for("react.context"):60110,c=n?Symbol.for("react.async_mode"):60111,f=n?Symbol.for("react.concurrent_mode"):60111,d=n?Symbol.for("react.forward_ref"):60112,p=n?Symbol.for("react.suspense"):60113,h=n?Symbol.for("react.suspense_list"):60120,m=n?Symbol.for("react.memo"):60115,g=n?Symbol.for("react.lazy"):60116,y=n?Symbol.for("react.block"):60121,v=n?Symbol.for("react.fundamental"):60117,b=n?Symbol.for("react.responder"):60118,w=n?Symbol.for("react.scope"):60119;function k(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case r:switch(e=e.type){case c:case f:case o:case l:case i:case p:return e;default:switch(e=e&&e.$$typeof){case s:case d:case g:case m:case u:return e;default:return t}}case a:return t}}}function A(e){return k(e)===f}t.AsyncMode=c,t.ConcurrentMode=f,t.ContextConsumer=s,t.ContextProvider=u,t.Element=r,t.ForwardRef=d,t.Fragment=o,t.Lazy=g,t.Memo=m,t.Portal=a,t.Profiler=l,t.StrictMode=i,t.Suspense=p,t.isAsyncMode=function(e){return A(e)||k(e)===c},t.isConcurrentMode=A,t.isContextConsumer=function(e){return k(e)===s},t.isContextProvider=function(e){return k(e)===u},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===r},t.isForwardRef=function(e){return k(e)===d},t.isFragment=function(e){return k(e)===o},t.isLazy=function(e){return k(e)===g},t.isMemo=function(e){return k(e)===m},t.isPortal=function(e){return k(e)===a},t.isProfiler=function(e){return k(e)===l},t.isStrictMode=function(e){return k(e)===i},t.isSuspense=function(e){return k(e)===p},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===o||e===f||e===l||e===i||e===p||e===h||"object"==typeof e&&null!==e&&(e.$$typeof===g||e.$$typeof===m||e.$$typeof===u||e.$$typeof===s||e.$$typeof===d||e.$$typeof===v||e.$$typeof===b||e.$$typeof===w||e.$$typeof===y)},t.typeOf=k},9864:(e,t,n)=>{"use strict";e.exports=n(9921)},3727:(e,t,n)=>{"use strict";n.d(t,{UT:()=>c});var r=n(5977),a=n(1788),o=n(7294),i=n(7531),l=(n(5697),n(2122)),u=n(9756),s=n(2177);o.Component;var c=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];return(t=e.call.apply(e,[this].concat(r))||this).history=(0,i.q_)(t.props),t}return(0,a.Z)(t,e),t.prototype.render=function(){return o.createElement(r.F0,{history:this.history,children:this.props.children})},t}(o.Component),f=function(e,t){return"function"==typeof e?e(t):e},d=function(e,t){return"string"==typeof e?(0,i.ob)(e,null,null,t):e},p=function(e){return e},h=o.forwardRef;void 0===h&&(h=p);var m=h((function(e,t){var n=e.innerRef,r=e.navigate,a=e.onClick,i=(0,u.Z)(e,["innerRef","navigate","onClick"]),s=i.target,c=(0,l.Z)({},i,{onClick:function(e){try{a&&a(e)}catch(t){throw e.preventDefault(),t}e.defaultPrevented||0!==e.button||s&&"_self"!==s||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),r())}});return c.ref=p!==h&&t||n,o.createElement("a",c)})),g=h((function(e,t){var n=e.component,a=void 0===n?m:n,i=e.replace,c=e.to,g=e.innerRef,y=(0,u.Z)(e,["component","replace","to","innerRef"]);return o.createElement(r.s6.Consumer,null,(function(e){e||(0,s.Z)(!1);var n=e.history,r=d(f(c,e.location),e.location),u=r?n.createHref(r):"",m=(0,l.Z)({},y,{href:u,navigate:function(){var t=f(c,e.location);(i?n.replace:n.push)(t)}});return p!==h?m.ref=t||g:m.innerRef=g,o.createElement(a,m)}))})),y=function(e){return e},v=o.forwardRef;void 0===v&&(v=y),v((function(e,t){var n=e["aria-current"],a=void 0===n?"page":n,i=e.activeClassName,c=void 0===i?"active":i,p=e.activeStyle,h=e.className,m=e.exact,b=e.isActive,w=e.location,k=e.sensitive,A=e.strict,C=e.style,E=e.to,S=e.innerRef,x=(0,u.Z)(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","sensitive","strict","style","to","innerRef"]);return o.createElement(r.s6.Consumer,null,(function(e){e||(0,s.Z)(!1);var n=w||e.location,i=d(f(E,n),n),u=i.pathname,P=u&&u.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),_=P?(0,r.LX)(n.pathname,{path:P,exact:m,sensitive:k,strict:A}):null,O=!!(b?b(_,n):_),B=O?function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter((function(e){return e})).join(" ")}(h,c):h,U=O?(0,l.Z)({},C,{},p):C,T=(0,l.Z)({"aria-current":O&&a||null,className:B,style:U,to:i},x);return y!==v?T.ref=t||S:T.innerRef=S,o.createElement(g,T)}))}))},5977:(e,t,n)=>{"use strict";n.d(t,{AW:()=>k,F0:()=>y,rs:()=>A,s6:()=>g,LX:()=>w,k6:()=>E});var r=n(1788),a=n(7294),o=n(5697),i=n.n(o),l=(n(7531),1073741823),u="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==n.g?n.g:{};function s(e){var t=[];return{on:function(e){t.push(e)},off:function(e){t=t.filter((function(t){return t!==e}))},get:function(){return e},set:function(n,r){e=n,t.forEach((function(t){return t(e,r)}))}}}const c=a.createContext||function(e,t){var n,o,c,f="__create-react-context-"+((u[c="__global_unique_id__"]=(u[c]||0)+1)+"__"),d=function(e){function n(){var t;return(t=e.apply(this,arguments)||this).emitter=s(t.props.value),t}(0,r.Z)(n,e);var a=n.prototype;return a.getChildContext=function(){var e;return(e={})[f]=this.emitter,e},a.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var n,r=this.props.value,a=e.value;((o=r)===(i=a)?0!==o||1/o==1/i:o!=o&&i!=i)?n=0:(n="function"==typeof t?t(r,a):l,0!=(n|=0)&&this.emitter.set(e.value,n))}var o,i},a.render=function(){return this.props.children},n}(a.Component);d.childContextTypes=((n={})[f]=i().object.isRequired,n);var p=function(t){function n(){var e;return(e=t.apply(this,arguments)||this).state={value:e.getValue()},e.onUpdate=function(t,n){0!=((0|e.observedBits)&n)&&e.setState({value:e.getValue()})},e}(0,r.Z)(n,t);var a=n.prototype;return a.componentWillReceiveProps=function(e){var t=e.observedBits;this.observedBits=null==t?l:t},a.componentDidMount=function(){this.context[f]&&this.context[f].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?l:e},a.componentWillUnmount=function(){this.context[f]&&this.context[f].off(this.onUpdate)},a.getValue=function(){return this.context[f]?this.context[f].get():e},a.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},n}(a.Component);return p.contextTypes=((o={})[f]=i().object,o),{Provider:d,Consumer:p}};var f=n(2177),d=n(2122),p=n(9658),h=n.n(p),m=(n(9864),n(9756),n(8679),function(e){var t=c();return t.displayName="Router-History",t}()),g=function(e){var t=c();return t.displayName="Router",t}(),y=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={location:t.history.location},n._isMounted=!1,n._pendingLocation=null,t.staticContext||(n.unlisten=t.history.listen((function(e){n._isMounted?n.setState({location:e}):n._pendingLocation=e}))),n}(0,r.Z)(t,e),t.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var n=t.prototype;return n.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},n.componentWillUnmount=function(){this.unlisten&&this.unlisten()},n.render=function(){return a.createElement(g.Provider,{value:{history:this.props.history,location:this.state.location,match:t.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}},a.createElement(m.Provider,{children:this.props.children||null,value:this.props.history}))},t}(a.Component);a.Component,a.Component;var v={},b=0;function w(e,t){void 0===t&&(t={}),("string"==typeof t||Array.isArray(t))&&(t={path:t});var n=t,r=n.path,a=n.exact,o=void 0!==a&&a,i=n.strict,l=void 0!==i&&i,u=n.sensitive,s=void 0!==u&&u;return[].concat(r).reduce((function(t,n){if(!n&&""!==n)return null;if(t)return t;var r=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=v[n]||(v[n]={});if(r[e])return r[e];var a=[],o={regexp:h()(e,a,t),keys:a};return b<1e4&&(r[e]=o,b++),o}(n,{end:o,strict:l,sensitive:s}),a=r.regexp,i=r.keys,u=a.exec(e);if(!u)return null;var c=u[0],f=u.slice(1),d=e===c;return o&&!d?null:{path:n,url:"/"===n&&""===c?"/":c,isExact:d,params:i.reduce((function(e,t,n){return e[t.name]=f[n],e}),{})}}),null)}var k=function(e){function t(){return e.apply(this,arguments)||this}return(0,r.Z)(t,e),t.prototype.render=function(){var e=this;return a.createElement(g.Consumer,null,(function(t){t||(0,f.Z)(!1);var n=e.props.location||t.location,r=e.props.computedMatch?e.props.computedMatch:e.props.path?w(n.pathname,e.props):t.match,o=(0,d.Z)({},t,{location:n,match:r}),i=e.props,l=i.children,u=i.component,s=i.render;return Array.isArray(l)&&0===l.length&&(l=null),a.createElement(g.Provider,{value:o},o.match?l?"function"==typeof l?l(o):l:u?a.createElement(u,o):s?s(o):null:"function"==typeof l?l(o):null)}))},t}(a.Component);a.Component;var A=function(e){function t(){return e.apply(this,arguments)||this}return(0,r.Z)(t,e),t.prototype.render=function(){var e=this;return a.createElement(g.Consumer,null,(function(t){t||(0,f.Z)(!1);var n,r,o=e.props.location||t.location;return a.Children.forEach(e.props.children,(function(e){if(null==r&&a.isValidElement(e)){n=e;var i=e.props.path||e.props.from;r=i?w(o.pathname,(0,d.Z)({},e.props,{path:i})):t.match}})),r?a.cloneElement(n,{location:o,computedMatch:r}):null}))},t}(a.Component),C=a.useContext;function E(){return C(m)}},6585:e=>{e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},9658:(e,t,n)=>{var r=n(6585);e.exports=function e(t,n,a){return r(n)||(a=n||a,n=[]),a=a||{},t instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return c(e,t)}(t,n):r(t)?function(t,n,r){for(var a=[],o=0;o<t.length;o++)a.push(e(t[o],n,r).source);return c(new RegExp("(?:"+a.join("|")+")",f(r)),n)}(t,n,a):function(e,t,n){return d(o(e,n),t,n)}(t,n,a)},e.exports.parse=o,e.exports.compile=function(e,t){return l(o(e,t),t)},e.exports.tokensToFunction=l,e.exports.tokensToRegExp=d;var a=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function o(e,t){for(var n,r=[],o=0,i=0,l="",c=t&&t.delimiter||"/";null!=(n=a.exec(e));){var f=n[0],d=n[1],p=n.index;if(l+=e.slice(i,p),i=p+f.length,d)l+=d[1];else{var h=e[i],m=n[2],g=n[3],y=n[4],v=n[5],b=n[6],w=n[7];l&&(r.push(l),l="");var k=null!=m&&null!=h&&h!==m,A="+"===b||"*"===b,C="?"===b||"*"===b,E=n[2]||c,S=y||v;r.push({name:g||o++,prefix:m||"",delimiter:E,optional:C,repeat:A,partial:k,asterisk:!!w,pattern:S?s(S):w?".*":"[^"+u(E)+"]+?"})}}return i<e.length&&(l+=e.substr(i)),l&&r.push(l),r}function i(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function l(e,t){for(var n=new Array(e.length),a=0;a<e.length;a++)"object"==typeof e[a]&&(n[a]=new RegExp("^(?:"+e[a].pattern+")$",f(t)));return function(t,a){for(var o="",l=t||{},u=(a||{}).pretty?i:encodeURIComponent,s=0;s<e.length;s++){var c=e[s];if("string"!=typeof c){var f,d=l[c.name];if(null==d){if(c.optional){c.partial&&(o+=c.prefix);continue}throw new TypeError('Expected "'+c.name+'" to be defined')}if(r(d)){if(!c.repeat)throw new TypeError('Expected "'+c.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(c.optional)continue;throw new TypeError('Expected "'+c.name+'" to not be empty')}for(var p=0;p<d.length;p++){if(f=u(d[p]),!n[s].test(f))throw new TypeError('Expected all "'+c.name+'" to match "'+c.pattern+'", but received `'+JSON.stringify(f)+"`");o+=(0===p?c.prefix:c.delimiter)+f}}else{if(f=c.asterisk?encodeURI(d).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):u(d),!n[s].test(f))throw new TypeError('Expected "'+c.name+'" to match "'+c.pattern+'", but received "'+f+'"');o+=c.prefix+f}}else o+=c}return o}}function u(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function s(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function c(e,t){return e.keys=t,e}function f(e){return e&&e.sensitive?"":"i"}function d(e,t,n){r(t)||(n=t||n,t=[]);for(var a=(n=n||{}).strict,o=!1!==n.end,i="",l=0;l<e.length;l++){var s=e[l];if("string"==typeof s)i+=u(s);else{var d=u(s.prefix),p="(?:"+s.pattern+")";t.push(s),s.repeat&&(p+="(?:"+d+p+")*"),i+=p=s.optional?s.partial?d+"("+p+")?":"(?:"+d+"("+p+"))?":d+"("+p+")"}}var h=u(n.delimiter||"/"),m=i.slice(-h.length)===h;return a||(i=(m?i.slice(0,-h.length):i)+"(?:"+h+"(?=$))?"),i+=o?"$":a&&m?"":"(?="+h+"|$)",c(new RegExp("^"+i,f(n)),t)}},2408:(e,t,n)=>{"use strict";var r=n(7418),a=60103,o=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var i=60109,l=60110,u=60112;t.Suspense=60113;var s=60115,c=60116;if("function"==typeof Symbol&&Symbol.for){var f=Symbol.for;a=f("react.element"),o=f("react.portal"),t.Fragment=f("react.fragment"),t.StrictMode=f("react.strict_mode"),t.Profiler=f("react.profiler"),i=f("react.provider"),l=f("react.context"),u=f("react.forward_ref"),t.Suspense=f("react.suspense"),s=f("react.memo"),c=f("react.lazy")}var d="function"==typeof Symbol&&Symbol.iterator;function p(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m={};function g(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||h}function y(){}function v(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||h}g.prototype.isReactComponent={},g.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(p(85));this.updater.enqueueSetState(this,e,t,"setState")},g.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},y.prototype=g.prototype;var b=v.prototype=new y;b.constructor=v,r(b,g.prototype),b.isPureReactComponent=!0;var w={current:null},k=Object.prototype.hasOwnProperty,A={key:!0,ref:!0,__self:!0,__source:!0};function C(e,t,n){var r,o={},i=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(i=""+t.key),t)k.call(t,r)&&!A.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var s=Array(u),c=0;c<u;c++)s[c]=arguments[c+2];o.children=s}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:a,type:e,key:i,ref:l,props:o,_owner:w.current}}function E(e){return"object"==typeof e&&null!==e&&e.$$typeof===a}var S=/\/+/g;function x(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function P(e,t,n,r,i){var l=typeof e;"undefined"!==l&&"boolean"!==l||(e=null);var u=!1;if(null===e)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case a:case o:u=!0}}if(u)return i=i(u=e),e=""===r?"."+x(u,0):r,Array.isArray(i)?(n="",null!=e&&(n=e.replace(S,"$&/")+"/"),P(i,t,n,"",(function(e){return e}))):null!=i&&(E(i)&&(i=function(e,t){return{$$typeof:a,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,n+(!i.key||u&&u.key===i.key?"":(""+i.key).replace(S,"$&/")+"/")+e)),t.push(i)),1;if(u=0,r=""===r?".":r+":",Array.isArray(e))for(var s=0;s<e.length;s++){var c=r+x(l=e[s],s);u+=P(l,t,n,c,i)}else if("function"==typeof(c=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e)))for(e=c.call(e),s=0;!(l=e.next()).done;)u+=P(l=l.value,t,n,c=r+x(l,s++),i);else if("object"===l)throw t=""+e,Error(p(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return u}function _(e,t,n){if(null==e)return e;var r=[],a=0;return P(e,r,"","",(function(e){return t.call(n,e,a++)})),r}function O(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var B={current:null};function U(){var e=B.current;if(null===e)throw Error(p(321));return e}var T={ReactCurrentDispatcher:B,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:w,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:_,forEach:function(e,t,n){_(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return _(e,(function(){t++})),t},toArray:function(e){return _(e,(function(e){return e}))||[]},only:function(e){if(!E(e))throw Error(p(143));return e}},t.Component=g,t.PureComponent=v,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=T,t.cloneElement=function(e,t,n){if(null==e)throw Error(p(267,e));var o=r({},e.props),i=e.key,l=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,u=w.current),void 0!==t.key&&(i=""+t.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(c in t)k.call(t,c)&&!A.hasOwnProperty(c)&&(o[c]=void 0===t[c]&&void 0!==s?s[c]:t[c])}var c=arguments.length-2;if(1===c)o.children=n;else if(1<c){s=Array(c);for(var f=0;f<c;f++)s[f]=arguments[f+2];o.children=s}return{$$typeof:a,type:e.type,key:i,ref:l,props:o,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:l,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},t.createElement=C,t.createFactory=function(e){var t=C.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=E,t.lazy=function(e){return{$$typeof:c,_payload:{_status:-1,_result:e},_init:O}},t.memo=function(e,t){return{$$typeof:s,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return U().useCallback(e,t)},t.useContext=function(e,t){return U().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return U().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return U().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return U().useLayoutEffect(e,t)},t.useMemo=function(e,t){return U().useMemo(e,t)},t.useReducer=function(e,t,n){return U().useReducer(e,t,n)},t.useRef=function(e){return U().useRef(e)},t.useState=function(e){return U().useState(e)},t.version="17.0.1"},7294:(e,t,n)=>{"use strict";e.exports=n(2408)},53:(e,t)=>{"use strict";var n,r,a,o;if("object"==typeof performance&&"function"==typeof performance.now){var i=performance;t.unstable_now=function(){return i.now()}}else{var l=Date,u=l.now();t.unstable_now=function(){return l.now()-u}}if("undefined"==typeof window||"function"!=typeof MessageChannel){var s=null,c=null,f=function(){if(null!==s)try{var e=t.unstable_now();s(!0,e),s=null}catch(e){throw setTimeout(f,0),e}};n=function(e){null!==s?setTimeout(n,0,e):(s=e,setTimeout(f,0))},r=function(e,t){c=setTimeout(e,t)},a=function(){clearTimeout(c)},t.unstable_shouldYield=function(){return!1},o=t.unstable_forceFrameRate=function(){}}else{var d=window.setTimeout,p=window.clearTimeout;if("undefined"!=typeof console){var h=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!=typeof h&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var m=!1,g=null,y=-1,v=5,b=0;t.unstable_shouldYield=function(){return t.unstable_now()>=b},o=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):v=0<e?Math.floor(1e3/e):5};var w=new MessageChannel,k=w.port2;w.port1.onmessage=function(){if(null!==g){var e=t.unstable_now();b=e+v;try{g(!0,e)?k.postMessage(null):(m=!1,g=null)}catch(e){throw k.postMessage(null),e}}else m=!1},n=function(e){g=e,m||(m=!0,k.postMessage(null))},r=function(e,n){y=d((function(){e(t.unstable_now())}),n)},a=function(){p(y),y=-1}}function A(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,a=e[r];if(!(void 0!==a&&0<S(a,t)))break e;e[r]=t,e[n]=a,n=r}}function C(e){return void 0===(e=e[0])?null:e}function E(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,a=e.length;r<a;){var o=2*(r+1)-1,i=e[o],l=o+1,u=e[l];if(void 0!==i&&0>S(i,n))void 0!==u&&0>S(u,i)?(e[r]=u,e[l]=n,r=l):(e[r]=i,e[o]=n,r=o);else{if(!(void 0!==u&&0>S(u,n)))break e;e[r]=u,e[l]=n,r=l}}}return t}return null}function S(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var x=[],P=[],_=1,O=null,B=3,U=!1,T=!1,F=!1;function N(e){for(var t=C(P);null!==t;){if(null===t.callback)E(P);else{if(!(t.startTime<=e))break;E(P),t.sortIndex=t.expirationTime,A(x,t)}t=C(P)}}function L(e){if(F=!1,N(e),!T)if(null!==C(x))T=!0,n(R);else{var t=C(P);null!==t&&r(L,t.startTime-e)}}function R(e,n){T=!1,F&&(F=!1,a()),U=!0;var o=B;try{for(N(n),O=C(x);null!==O&&(!(O.expirationTime>n)||e&&!t.unstable_shouldYield());){var i=O.callback;if("function"==typeof i){O.callback=null,B=O.priorityLevel;var l=i(O.expirationTime<=n);n=t.unstable_now(),"function"==typeof l?O.callback=l:O===C(x)&&E(x),N(n)}else E(x);O=C(x)}if(null!==O)var u=!0;else{var s=C(P);null!==s&&r(L,s.startTime-n),u=!1}return u}finally{O=null,B=o,U=!1}}var I=o;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){T||U||(T=!0,n(R))},t.unstable_getCurrentPriorityLevel=function(){return B},t.unstable_getFirstCallbackNode=function(){return C(x)},t.unstable_next=function(e){switch(B){case 1:case 2:case 3:var t=3;break;default:t=B}var n=B;B=t;try{return e()}finally{B=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=I,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=B;B=e;try{return t()}finally{B=n}},t.unstable_scheduleCallback=function(e,o,i){var l=t.unstable_now();switch(i="object"==typeof i&&null!==i&&"number"==typeof(i=i.delay)&&0<i?l+i:l,e){case 1:var u=-1;break;case 2:u=250;break;case 5:u=1073741823;break;case 4:u=1e4;break;default:u=5e3}return e={id:_++,callback:o,priorityLevel:e,startTime:i,expirationTime:u=i+u,sortIndex:-1},i>l?(e.sortIndex=i,A(P,e),null===C(x)&&e===C(P)&&(F?a():F=!0,r(L,i-l))):(e.sortIndex=u,A(x,e),T||U||(T=!0,n(R))),e},t.unstable_wrapCallback=function(e){var t=B;return function(){var n=B;B=t;try{return e.apply(this,arguments)}finally{B=n}}}},3840:(e,t,n)=>{"use strict";e.exports=n(53)},6774:e=>{e.exports=function(e,t,n,r){var a=n?n.call(r,e,t):void 0;if(void 0!==a)return!!a;if(e===t)return!0;if("object"!=typeof e||!e||"object"!=typeof t||!t)return!1;var o=Object.keys(e),i=Object.keys(t);if(o.length!==i.length)return!1;for(var l=Object.prototype.hasOwnProperty.bind(t),u=0;u<o.length;u++){var s=o[u];if(!l(s))return!1;var c=e[s],f=t[s];if(!1===(a=n?n.call(r,c,f,s):void 0)||void 0===a&&c!==f)return!1}return!0}},4794:(e,t,n)=>{"use strict";var r=n(3379),a=n.n(r),o=n(1261);a()(o.Z,{insert:"head",singleton:!1}),o.Z.locals},3379:(e,t,n)=>{"use strict";var r,a=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),o=[];function i(e){for(var t=-1,n=0;n<o.length;n++)if(o[n].identifier===e){t=n;break}return t}function l(e,t){for(var n={},r=[],a=0;a<e.length;a++){var l=e[a],u=t.base?l[0]+t.base:l[0],s=n[u]||0,c="".concat(u," ").concat(s);n[u]=s+1;var f=i(c),d={css:l[1],media:l[2],sourceMap:l[3]};-1!==f?(o[f].references++,o[f].updater(d)):o.push({identifier:c,updater:m(d,t),references:1}),r.push(c)}return r}function u(e){var t=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var o=n.nc;o&&(r.nonce=o)}if(Object.keys(r).forEach((function(e){t.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(t);else{var i=a(e.insert||"head");if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}return t}var s,c=(s=[],function(e,t){return s[e]=t,s.filter(Boolean).join("\n")});function f(e,t,n,r){var a=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=c(t,a);else{var o=document.createTextNode(a),i=e.childNodes;i[t]&&e.removeChild(i[t]),i.length?e.insertBefore(o,i[t]):e.appendChild(o)}}function d(e,t,n){var r=n.css,a=n.media,o=n.sourceMap;if(a?e.setAttribute("media",a):e.removeAttribute("media"),o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var p=null,h=0;function m(e,t){var n,r,a;if(t.singleton){var o=h++;n=p||(p=u(t)),r=f.bind(null,n,o,!1),a=f.bind(null,n,o,!0)}else n=u(t),r=d.bind(null,n,t),a=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else a()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=(void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r));var n=l(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<n.length;r++){var a=i(n[r]);o[a].references--}for(var u=l(e,t),s=0;s<n.length;s++){var c=i(n[s]);0===o[c].references&&(o[c].updater(),o.splice(c,1))}n=u}}}},9163:(e,t,n)=>{"use strict";n.d(t,{vJ:()=>Le,ZP:()=>Re});var r=n(9864),a=n(7294),o=n(6774),i=n.n(o);const l=function(e){function t(e,r,u,s,d){for(var p,h,m,g,w,A=0,C=0,E=0,S=0,x=0,T=0,N=m=p=0,R=0,I=0,z=0,M=0,D=u.length,j=D-1,$="",H="",V="",W="";R<D;){if(h=u.charCodeAt(R),R===j&&0!==C+S+E+A&&(0!==C&&(h=47===C?10:47),S=E=A=0,D++,j++),0===C+S+E+A){if(R===j&&(0<I&&($=$.replace(f,"")),0<$.trim().length)){switch(h){case 32:case 9:case 59:case 13:case 10:break;default:$+=u.charAt(R)}h=59}switch(h){case 123:for(p=($=$.trim()).charCodeAt(0),m=1,M=++R;R<D;){switch(h=u.charCodeAt(R)){case 123:m++;break;case 125:m--;break;case 47:switch(h=u.charCodeAt(R+1)){case 42:case 47:e:{for(N=R+1;N<j;++N)switch(u.charCodeAt(N)){case 47:if(42===h&&42===u.charCodeAt(N-1)&&R+2!==N){R=N+1;break e}break;case 10:if(47===h){R=N+1;break e}}R=N}}break;case 91:h++;case 40:h++;case 34:case 39:for(;R++<j&&u.charCodeAt(R)!==h;);}if(0===m)break;R++}switch(m=u.substring(M,R),0===p&&(p=($=$.replace(c,"").trim()).charCodeAt(0)),p){case 64:switch(0<I&&($=$.replace(f,"")),h=$.charCodeAt(1)){case 100:case 109:case 115:case 45:I=r;break;default:I=U}if(M=(m=t(r,I,m,h,d+1)).length,0<F&&(w=l(3,m,I=n(U,$,z),r,_,P,M,h,d,s),$=I.join(""),void 0!==w&&0===(M=(m=w.trim()).length)&&(h=0,m="")),0<M)switch(h){case 115:$=$.replace(k,i);case 100:case 109:case 45:m=$+"{"+m+"}";break;case 107:m=($=$.replace(y,"$1 $2"))+"{"+m+"}",m=1===B||2===B&&o("@"+m,3)?"@-webkit-"+m+"@"+m:"@"+m;break;default:m=$+m,112===s&&(H+=m,m="")}else m="";break;default:m=t(r,n(r,$,z),m,s,d+1)}V+=m,m=z=I=N=p=0,$="",h=u.charCodeAt(++R);break;case 125:case 59:if(1<(M=($=(0<I?$.replace(f,""):$).trim()).length))switch(0===N&&(p=$.charCodeAt(0),45===p||96<p&&123>p)&&(M=($=$.replace(" ",":")).length),0<F&&void 0!==(w=l(1,$,r,e,_,P,H.length,s,d,s))&&0===(M=($=w.trim()).length)&&($="\0\0"),p=$.charCodeAt(0),h=$.charCodeAt(1),p){case 0:break;case 64:if(105===h||99===h){W+=$+u.charAt(R);break}default:58!==$.charCodeAt(M-1)&&(H+=a($,p,h,$.charCodeAt(2)))}z=I=N=p=0,$="",h=u.charCodeAt(++R)}}switch(h){case 13:case 10:47===C?C=0:0===1+p&&107!==s&&0<$.length&&(I=1,$+="\0"),0<F*L&&l(0,$,r,e,_,P,H.length,s,d,s),P=1,_++;break;case 59:case 125:if(0===C+S+E+A){P++;break}default:switch(P++,g=u.charAt(R),h){case 9:case 32:if(0===S+A+C)switch(x){case 44:case 58:case 9:case 32:g="";break;default:32!==h&&(g=" ")}break;case 0:g="\\0";break;case 12:g="\\f";break;case 11:g="\\v";break;case 38:0===S+C+A&&(I=z=1,g="\f"+g);break;case 108:if(0===S+C+A+O&&0<N)switch(R-N){case 2:112===x&&58===u.charCodeAt(R-3)&&(O=x);case 8:111===T&&(O=T)}break;case 58:0===S+C+A&&(N=R);break;case 44:0===C+E+S+A&&(I=1,g+="\r");break;case 34:case 39:0===C&&(S=S===h?0:0===S?h:S);break;case 91:0===S+C+E&&A++;break;case 93:0===S+C+E&&A--;break;case 41:0===S+C+A&&E--;break;case 40:if(0===S+C+A){if(0===p)switch(2*x+3*T){case 533:break;default:p=1}E++}break;case 64:0===C+E+S+A+N+m&&(m=1);break;case 42:case 47:if(!(0<S+A+E))switch(C){case 0:switch(2*h+3*u.charCodeAt(R+1)){case 235:C=47;break;case 220:M=R,C=42}break;case 42:47===h&&42===x&&M+2!==R&&(33===u.charCodeAt(M+2)&&(H+=u.substring(M,R+1)),g="",C=0)}}0===C&&($+=g)}T=x,x=h,R++}if(0<(M=H.length)){if(I=r,0<F&&void 0!==(w=l(2,H,I,e,_,P,M,s,d,s))&&0===(H=w).length)return W+H+V;if(H=I.join(",")+"{"+H+"}",0!=B*O){switch(2!==B||o(H,2)||(O=0),O){case 111:H=H.replace(b,":-moz-$1")+H;break;case 112:H=H.replace(v,"::-webkit-input-$1")+H.replace(v,"::-moz-$1")+H.replace(v,":-ms-input-$1")+H}O=0}}return W+H+V}function n(e,t,n){var a=t.trim().split(m);t=a;var o=a.length,i=e.length;switch(i){case 0:case 1:var l=0;for(e=0===i?"":e[0]+" ";l<o;++l)t[l]=r(e,t[l],n).trim();break;default:var u=l=0;for(t=[];l<o;++l)for(var s=0;s<i;++s)t[u++]=r(e[s]+" ",a[l],n).trim()}return t}function r(e,t,n){var r=t.charCodeAt(0);switch(33>r&&(r=(t=t.trim()).charCodeAt(0)),r){case 38:return t.replace(g,"$1"+e.trim());case 58:return e.trim()+t.replace(g,"$1"+e.trim());default:if(0<1*n&&0<t.indexOf("\f"))return t.replace(g,(58===e.charCodeAt(0)?"":"$1")+e.trim())}return e+t}function a(e,t,n,r){var i=e+";",l=2*t+3*n+4*r;if(944===l){e=i.indexOf(":",9)+1;var u=i.substring(e,i.length-1).trim();return u=i.substring(0,e).trim()+u+";",1===B||2===B&&o(u,1)?"-webkit-"+u+u:u}if(0===B||2===B&&!o(i,1))return i;switch(l){case 1015:return 97===i.charCodeAt(10)?"-webkit-"+i+i:i;case 951:return 116===i.charCodeAt(3)?"-webkit-"+i+i:i;case 963:return 110===i.charCodeAt(5)?"-webkit-"+i+i:i;case 1009:if(100!==i.charCodeAt(4))break;case 969:case 942:return"-webkit-"+i+i;case 978:return"-webkit-"+i+"-moz-"+i+i;case 1019:case 983:return"-webkit-"+i+"-moz-"+i+"-ms-"+i+i;case 883:if(45===i.charCodeAt(8))return"-webkit-"+i+i;if(0<i.indexOf("image-set(",11))return i.replace(x,"$1-webkit-$2")+i;break;case 932:if(45===i.charCodeAt(4))switch(i.charCodeAt(5)){case 103:return"-webkit-box-"+i.replace("-grow","")+"-webkit-"+i+"-ms-"+i.replace("grow","positive")+i;case 115:return"-webkit-"+i+"-ms-"+i.replace("shrink","negative")+i;case 98:return"-webkit-"+i+"-ms-"+i.replace("basis","preferred-size")+i}return"-webkit-"+i+"-ms-"+i+i;case 964:return"-webkit-"+i+"-ms-flex-"+i+i;case 1023:if(99!==i.charCodeAt(8))break;return"-webkit-box-pack"+(u=i.substring(i.indexOf(":",15)).replace("flex-","").replace("space-between","justify"))+"-webkit-"+i+"-ms-flex-pack"+u+i;case 1005:return p.test(i)?i.replace(d,":-webkit-")+i.replace(d,":-moz-")+i:i;case 1e3:switch(t=(u=i.substring(13).trim()).indexOf("-")+1,u.charCodeAt(0)+u.charCodeAt(t)){case 226:u=i.replace(w,"tb");break;case 232:u=i.replace(w,"tb-rl");break;case 220:u=i.replace(w,"lr");break;default:return i}return"-webkit-"+i+"-ms-"+u+i;case 1017:if(-1===i.indexOf("sticky",9))break;case 975:switch(t=(i=e).length-10,l=(u=(33===i.charCodeAt(t)?i.substring(0,t):i).substring(e.indexOf(":",7)+1).trim()).charCodeAt(0)+(0|u.charCodeAt(7))){case 203:if(111>u.charCodeAt(8))break;case 115:i=i.replace(u,"-webkit-"+u)+";"+i;break;case 207:case 102:i=i.replace(u,"-webkit-"+(102<l?"inline-":"")+"box")+";"+i.replace(u,"-webkit-"+u)+";"+i.replace(u,"-ms-"+u+"box")+";"+i}return i+";";case 938:if(45===i.charCodeAt(5))switch(i.charCodeAt(6)){case 105:return u=i.replace("-items",""),"-webkit-"+i+"-webkit-box-"+u+"-ms-flex-"+u+i;case 115:return"-webkit-"+i+"-ms-flex-item-"+i.replace(C,"")+i;default:return"-webkit-"+i+"-ms-flex-line-pack"+i.replace("align-content","").replace(C,"")+i}break;case 973:case 989:if(45!==i.charCodeAt(3)||122===i.charCodeAt(4))break;case 931:case 953:if(!0===S.test(e))return 115===(u=e.substring(e.indexOf(":")+1)).charCodeAt(0)?a(e.replace("stretch","fill-available"),t,n,r).replace(":fill-available",":stretch"):i.replace(u,"-webkit-"+u)+i.replace(u,"-moz-"+u.replace("fill-",""))+i;break;case 962:if(i="-webkit-"+i+(102===i.charCodeAt(5)?"-ms-"+i:"")+i,211===n+r&&105===i.charCodeAt(13)&&0<i.indexOf("transform",10))return i.substring(0,i.indexOf(";",27)+1).replace(h,"$1-webkit-$2")+i}return i}function o(e,t){var n=e.indexOf(1===t?":":"{"),r=e.substring(0,3!==t?n:10);return n=e.substring(n+1,e.length-1),N(2!==t?r:r.replace(E,"$1"),n,t)}function i(e,t){var n=a(t,t.charCodeAt(0),t.charCodeAt(1),t.charCodeAt(2));return n!==t+";"?n.replace(A," or ($1)").substring(4):"("+t+")"}function l(e,t,n,r,a,o,i,l,u,c){for(var f,d=0,p=t;d<F;++d)switch(f=T[d].call(s,e,p,n,r,a,o,i,l,u,c)){case void 0:case!1:case!0:case null:break;default:p=f}if(p!==t)return p}function u(e){return void 0!==(e=e.prefix)&&(N=null,e?"function"!=typeof e?B=1:(B=2,N=e):B=0),u}function s(e,n){var r=e;if(33>r.charCodeAt(0)&&(r=r.trim()),r=[r],0<F){var a=l(-1,n,r,r,_,P,0,0,0,0);void 0!==a&&"string"==typeof a&&(n=a)}var o=t(U,r,n,0,0);return 0<F&&void 0!==(a=l(-2,o,r,r,_,P,o.length,0,0,0))&&(o=a),O=0,P=_=1,o}var c=/^\0+/g,f=/[\0\r\f]/g,d=/: */g,p=/zoo|gra/,h=/([,: ])(transform)/g,m=/,\r+?/g,g=/([\t\r\n ])*\f?&/g,y=/@(k\w+)\s*(\S*)\s*/,v=/::(place)/g,b=/:(read-only)/g,w=/[svh]\w+-[tblr]{2}/,k=/\(\s*(.*)\s*\)/g,A=/([\s\S]*?);/g,C=/-self|flex-/g,E=/[^]*?(:[rp][el]a[\w-]+)[^]*/,S=/stretch|:\s*\w+\-(?:conte|avail)/,x=/([^-])(image-set\()/,P=1,_=1,O=0,B=1,U=[],T=[],F=0,N=null,L=0;return s.use=function e(t){switch(t){case void 0:case null:F=T.length=0;break;default:if("function"==typeof t)T[F++]=t;else if("object"==typeof t)for(var n=0,r=t.length;n<r;++n)e(t[n]);else L=0|!!t}return e},s.set=u,void 0!==e&&u(e),s},u={animationIterationCount:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1};var s=/^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/;const c=(f={},function(e){return void 0===f[e]&&(f[e]=(t=e,s.test(t)||111===t.charCodeAt(0)&&110===t.charCodeAt(1)&&t.charCodeAt(2)<91)),f[e];var t});var f,d=n(8679),p=n.n(d);function h(){return(h=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var m=function(e,t){for(var n=[e[0]],r=0,a=t.length;r<a;r+=1)n.push(t[r],e[r+1]);return n},g=function(e){return null!==e&&"object"==typeof e&&"[object Object]"===(e.toString?e.toString():Object.prototype.toString.call(e))&&!(0,r.typeOf)(e)},y=Object.freeze([]),v=Object.freeze({});function b(e){return"function"==typeof e}function w(e){return e.displayName||e.name||"Component"}function k(e){return e&&"string"==typeof e.styledComponentId}var A="undefined"!=typeof process&&(process.env.REACT_APP_SC_ATTR||process.env.SC_ATTR)||"data-styled",C="undefined"!=typeof window&&"HTMLElement"in window,E=Boolean("boolean"==typeof SC_DISABLE_SPEEDY?SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!==process.env.REACT_APP_SC_DISABLE_SPEEDY&&""!==process.env.REACT_APP_SC_DISABLE_SPEEDY?"false"!==process.env.REACT_APP_SC_DISABLE_SPEEDY&&process.env.REACT_APP_SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!==process.env.SC_DISABLE_SPEEDY&&""!==process.env.SC_DISABLE_SPEEDY&&"false"!==process.env.SC_DISABLE_SPEEDY&&process.env.SC_DISABLE_SPEEDY),S={};function x(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];throw new Error("An error occurred. See https://git.io/JUIaE#"+e+" for more information."+(n.length>0?" Args: "+n.join(", "):""))}var P=function(){function e(e){this.groupSizes=new Uint32Array(512),this.length=512,this.tag=e}var t=e.prototype;return t.indexOfGroup=function(e){for(var t=0,n=0;n<e;n++)t+=this.groupSizes[n];return t},t.insertRules=function(e,t){if(e>=this.groupSizes.length){for(var n=this.groupSizes,r=n.length,a=r;e>=a;)(a<<=1)<0&&x(16,""+e);this.groupSizes=new Uint32Array(a),this.groupSizes.set(n),this.length=a;for(var o=r;o<a;o++)this.groupSizes[o]=0}for(var i=this.indexOfGroup(e+1),l=0,u=t.length;l<u;l++)this.tag.insertRule(i,t[l])&&(this.groupSizes[e]++,i++)},t.clearGroup=function(e){if(e<this.length){var t=this.groupSizes[e],n=this.indexOfGroup(e),r=n+t;this.groupSizes[e]=0;for(var a=n;a<r;a++)this.tag.deleteRule(n)}},t.getGroup=function(e){var t="";if(e>=this.length||0===this.groupSizes[e])return t;for(var n=this.groupSizes[e],r=this.indexOfGroup(e),a=r+n,o=r;o<a;o++)t+=this.tag.getRule(o)+"/*!sc*/\n";return t},e}(),_=new Map,O=new Map,B=1,U=function(e){if(_.has(e))return _.get(e);for(;O.has(B);)B++;var t=B++;return _.set(e,t),O.set(t,e),t},T=function(e){return O.get(e)},F=function(e,t){_.set(e,t),O.set(t,e)},N="style["+A+'][data-styled-version="5.2.1"]',L=new RegExp("^"+A+'\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)'),R=function(e,t,n){for(var r,a=n.split(","),o=0,i=a.length;o<i;o++)(r=a[o])&&e.registerName(t,r)},I=function(e,t){for(var n=t.innerHTML.split("/*!sc*/\n"),r=[],a=0,o=n.length;a<o;a++){var i=n[a].trim();if(i){var l=i.match(L);if(l){var u=0|parseInt(l[1],10),s=l[2];0!==u&&(F(s,u),R(e,s,l[3]),e.getTag().insertRules(u,r)),r.length=0}else r.push(i)}}},z=function(){return n.nc},M=function(e){var t=document.head,n=e||t,r=document.createElement("style"),a=function(e){for(var t=e.childNodes,n=t.length;n>=0;n--){var r=t[n];if(r&&1===r.nodeType&&r.hasAttribute(A))return r}}(n),o=void 0!==a?a.nextSibling:null;r.setAttribute(A,"active"),r.setAttribute("data-styled-version","5.2.1");var i=z();return i&&r.setAttribute("nonce",i),n.insertBefore(r,o),r},D=function(){function e(e){var t=this.element=M(e);t.appendChild(document.createTextNode("")),this.sheet=function(e){if(e.sheet)return e.sheet;for(var t=document.styleSheets,n=0,r=t.length;n<r;n++){var a=t[n];if(a.ownerNode===e)return a}x(17)}(t),this.length=0}var t=e.prototype;return t.insertRule=function(e,t){try{return this.sheet.insertRule(t,e),this.length++,!0}catch(e){return!1}},t.deleteRule=function(e){this.sheet.deleteRule(e),this.length--},t.getRule=function(e){var t=this.sheet.cssRules[e];return void 0!==t&&"string"==typeof t.cssText?t.cssText:""},e}(),j=function(){function e(e){var t=this.element=M(e);this.nodes=t.childNodes,this.length=0}var t=e.prototype;return t.insertRule=function(e,t){if(e<=this.length&&e>=0){var n=document.createTextNode(t),r=this.nodes[e];return this.element.insertBefore(n,r||null),this.length++,!0}return!1},t.deleteRule=function(e){this.element.removeChild(this.nodes[e]),this.length--},t.getRule=function(e){return e<this.length?this.nodes[e].textContent:""},e}(),$=function(){function e(e){this.rules=[],this.length=0}var t=e.prototype;return t.insertRule=function(e,t){return e<=this.length&&(this.rules.splice(e,0,t),this.length++,!0)},t.deleteRule=function(e){this.rules.splice(e,1),this.length--},t.getRule=function(e){return e<this.length?this.rules[e]:""},e}(),H=C,V={isServer:!C,useCSSOMInjection:!E},W=function(){function e(e,t,n){void 0===e&&(e=v),void 0===t&&(t={}),this.options=h({},V,{},e),this.gs=t,this.names=new Map(n),!this.options.isServer&&C&&H&&(H=!1,function(e){for(var t=document.querySelectorAll(N),n=0,r=t.length;n<r;n++){var a=t[n];a&&"active"!==a.getAttribute(A)&&(I(e,a),a.parentNode&&a.parentNode.removeChild(a))}}(this))}e.registerId=function(e){return U(e)};var t=e.prototype;return t.reconstructWithOptions=function(t,n){return void 0===n&&(n=!0),new e(h({},this.options,{},t),this.gs,n&&this.names||void 0)},t.allocateGSInstance=function(e){return this.gs[e]=(this.gs[e]||0)+1},t.getTag=function(){return this.tag||(this.tag=(n=(t=this.options).isServer,r=t.useCSSOMInjection,a=t.target,e=n?new $(a):r?new D(a):new j(a),new P(e)));var e,t,n,r,a},t.hasNameForId=function(e,t){return this.names.has(e)&&this.names.get(e).has(t)},t.registerName=function(e,t){if(U(e),this.names.has(e))this.names.get(e).add(t);else{var n=new Set;n.add(t),this.names.set(e,n)}},t.insertRules=function(e,t,n){this.registerName(e,t),this.getTag().insertRules(U(e),n)},t.clearNames=function(e){this.names.has(e)&&this.names.get(e).clear()},t.clearRules=function(e){this.getTag().clearGroup(U(e)),this.clearNames(e)},t.clearTag=function(){this.tag=void 0},t.toString=function(){return function(e){for(var t=e.getTag(),n=t.length,r="",a=0;a<n;a++){var o=T(a);if(void 0!==o){var i=e.names.get(o),l=t.getGroup(a);if(void 0!==i&&0!==l.length){var u=A+".g"+a+'[id="'+o+'"]',s="";void 0!==i&&i.forEach((function(e){e.length>0&&(s+=e+",")})),r+=""+l+u+'{content:"'+s+'"}/*!sc*/\n'}}}return r}(this)},e}(),q=/(a)(d)/gi,K=function(e){return String.fromCharCode(e+(e>25?39:97))};function Q(e){var t,n="";for(t=Math.abs(e);t>52;t=t/52|0)n=K(t%52)+n;return(K(t%52)+n).replace(q,"$1-$2")}var Z=function(e,t){for(var n=t.length;n;)e=33*e^t.charCodeAt(--n);return e},Y=function(e){return Z(5381,e)};function G(e){for(var t=0;t<e.length;t+=1){var n=e[t];if(b(n)&&!k(n))return!1}return!0}var X=Y("5.2.1"),J=function(){function e(e,t,n){this.rules=e,this.staticRulesId="",this.isStatic=(void 0===n||n.isStatic)&&G(e),this.componentId=t,this.baseHash=Z(X,t),this.baseStyle=n,W.registerId(t)}return e.prototype.generateAndInjectStyles=function(e,t,n){var r=this.componentId,a=[];if(this.baseStyle&&a.push(this.baseStyle.generateAndInjectStyles(e,t,n)),this.isStatic&&!n.hash)if(this.staticRulesId&&t.hasNameForId(r,this.staticRulesId))a.push(this.staticRulesId);else{var o=ye(this.rules,e,t,n).join(""),i=Q(Z(this.baseHash,o.length)>>>0);if(!t.hasNameForId(r,i)){var l=n(o,"."+i,void 0,r);t.insertRules(r,i,l)}a.push(i),this.staticRulesId=i}else{for(var u=this.rules.length,s=Z(this.baseHash,n.hash),c="",f=0;f<u;f++){var d=this.rules[f];if("string"==typeof d)c+=d;else if(d){var p=ye(d,e,t,n),h=Array.isArray(p)?p.join(""):p;s=Z(s,h+f),c+=h}}if(c){var m=Q(s>>>0);if(!t.hasNameForId(r,m)){var g=n(c,"."+m,void 0,r);t.insertRules(r,m,g)}a.push(m)}}return a.join(" ")},e}(),ee=/^\s*\/\/.*$/gm,te=[":","[",".","#"];function ne(e){var t,n,r,a,o=void 0===e?v:e,i=o.options,u=void 0===i?v:i,s=o.plugins,c=void 0===s?y:s,f=new l(u),d=[],p=function(e){function t(t){if(t)try{e(t+"}")}catch(e){}}return function(n,r,a,o,i,l,u,s,c,f){switch(n){case 1:if(0===c&&64===r.charCodeAt(0))return e(r+";"),"";break;case 2:if(0===s)return r+"/*|*/";break;case 3:switch(s){case 102:case 112:return e(a[0]+r),"";default:return r+(0===f?"/*|*/":"")}case-2:r.split("/*|*/}").forEach(t)}}}((function(e){d.push(e)})),h=function(e,r,o){return 0===r&&te.includes(o[n.length])||o.match(a)?e:"."+t};function m(e,o,i,l){void 0===l&&(l="&");var u=e.replace(ee,""),s=o&&i?i+" "+o+" { "+u+" }":u;return t=l,n=o,r=new RegExp("\\"+n+"\\b","g"),a=new RegExp("(\\"+n+"\\b){2,}"),f(i||!o?"":o,s)}return f.use([].concat(c,[function(e,t,a){2===e&&a.length&&a[0].lastIndexOf(n)>0&&(a[0]=a[0].replace(r,h))},p,function(e){if(-2===e){var t=d;return d=[],t}}])),m.hash=c.length?c.reduce((function(e,t){return t.name||x(15),Z(e,t.name)}),5381).toString():"",m}var re=a.createContext(),ae=(re.Consumer,a.createContext()),oe=(ae.Consumer,new W),ie=ne();function le(){return(0,a.useContext)(re)||oe}function ue(){return(0,a.useContext)(ae)||ie}function se(e){var t=(0,a.useState)(e.stylisPlugins),n=t[0],r=t[1],o=le(),l=(0,a.useMemo)((function(){var t=o;return e.sheet?t=e.sheet:e.target&&(t=t.reconstructWithOptions({target:e.target},!1)),e.disableCSSOMInjection&&(t=t.reconstructWithOptions({useCSSOMInjection:!1})),t}),[e.disableCSSOMInjection,e.sheet,e.target]),u=(0,a.useMemo)((function(){return ne({options:{prefix:!e.disableVendorPrefixes},plugins:n})}),[e.disableVendorPrefixes,n]);return(0,a.useEffect)((function(){i()(n,e.stylisPlugins)||r(e.stylisPlugins)}),[e.stylisPlugins]),a.createElement(re.Provider,{value:l},a.createElement(ae.Provider,{value:u},e.children))}var ce=function(){function e(e,t){var n=this;this.inject=function(e,t){void 0===t&&(t=ie);var r=n.name+t.hash;e.hasNameForId(n.id,r)||e.insertRules(n.id,r,t(n.rules,r,"@keyframes"))},this.toString=function(){return x(12,String(n.name))},this.name=e,this.id="sc-keyframes-"+e,this.rules=t}return e.prototype.getName=function(e){return void 0===e&&(e=ie),this.name+e.hash},e}(),fe=/([A-Z])/,de=/([A-Z])/g,pe=/^ms-/,he=function(e){return"-"+e.toLowerCase()};function me(e){return fe.test(e)?e.replace(de,he).replace(pe,"-ms-"):e}var ge=function(e){return null==e||!1===e||""===e};function ye(e,t,n,r){if(Array.isArray(e)){for(var a,o=[],i=0,l=e.length;i<l;i+=1)""!==(a=ye(e[i],t,n,r))&&(Array.isArray(a)?o.push.apply(o,a):o.push(a));return o}return ge(e)?"":k(e)?"."+e.styledComponentId:b(e)?"function"!=typeof(s=e)||s.prototype&&s.prototype.isReactComponent||!t?e:ye(e(t),t,n,r):e instanceof ce?n?(e.inject(n,r),e.getName(r)):e:g(e)?function e(t,n){var r,a,o=[];for(var i in t)t.hasOwnProperty(i)&&!ge(t[i])&&(g(t[i])?o.push.apply(o,e(t[i],i)):b(t[i])?o.push(me(i)+":",t[i],";"):o.push(me(i)+": "+(r=i,(null==(a=t[i])||"boolean"==typeof a||""===a?"":"number"!=typeof a||0===a||r in u?String(a).trim():a+"px")+";")));return n?[n+" {"].concat(o,["}"]):o}(e):e.toString();var s}function ve(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];return b(e)||g(e)?ye(m(y,[e].concat(n))):0===n.length&&1===e.length&&"string"==typeof e[0]?e:ye(m(e,n))}new Set;var be=function(e,t,n){return void 0===n&&(n=v),e.theme!==n.theme&&e.theme||t||n.theme},we=/[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g,ke=/(^-|-$)/g;function Ae(e){return e.replace(we,"-").replace(ke,"")}var Ce=function(e){return Q(Y(e)>>>0)};function Ee(e){return"string"==typeof e&&!0}var Se=function(e){return"function"==typeof e||"object"==typeof e&&null!==e&&!Array.isArray(e)},xe=function(e){return"__proto__"!==e&&"constructor"!==e&&"prototype"!==e};function Pe(e,t,n){var r=e[n];Se(t)&&Se(r)?_e(r,t):e[n]=t}function _e(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];for(var a=0,o=n;a<o.length;a++){var i=o[a];if(Se(i))for(var l in i)xe(l)&&Pe(e,i[l],l)}return e}var Oe=a.createContext();Oe.Consumer;var Be={};function Ue(e,t,n){var r=k(e),o=!Ee(e),i=t.attrs,l=void 0===i?y:i,u=t.componentId,s=void 0===u?function(e,t){var n="string"!=typeof e?"sc":Ae(e);Be[n]=(Be[n]||0)+1;var r=n+"-"+Ce("5.2.1"+n+Be[n]);return t?t+"-"+r:r}(t.displayName,t.parentComponentId):u,f=t.displayName,d=void 0===f?function(e){return Ee(e)?"styled."+e:"Styled("+w(e)+")"}(e):f,m=t.displayName&&t.componentId?Ae(t.displayName)+"-"+t.componentId:t.componentId||s,g=r&&e.attrs?Array.prototype.concat(e.attrs,l).filter(Boolean):l,A=t.shouldForwardProp;r&&e.shouldForwardProp&&(A=t.shouldForwardProp?function(n,r){return e.shouldForwardProp(n,r)&&t.shouldForwardProp(n,r)}:e.shouldForwardProp);var C,E=new J(n,m,r?e.componentStyle:void 0),S=E.isStatic&&0===l.length,x=function(e,t){return function(e,t,n,r){var o=e.attrs,i=e.componentStyle,l=e.defaultProps,u=e.foldedComponentIds,s=e.shouldForwardProp,f=e.styledComponentId,d=e.target,p=function(e,t,n){void 0===e&&(e=v);var r=h({},t,{theme:e}),a={};return n.forEach((function(e){var t,n,o,i=e;for(t in b(i)&&(i=i(r)),i)r[t]=a[t]="className"===t?(n=a[t],o=i[t],n&&o?n+" "+o:n||o):i[t]})),[r,a]}(be(t,(0,a.useContext)(Oe),l)||v,t,o),m=p[0],g=p[1],y=function(e,t,n,r){var a=le(),o=ue();return t?e.generateAndInjectStyles(v,a,o):e.generateAndInjectStyles(n,a,o)}(i,r,m),w=n,k=g.$as||t.$as||g.as||t.as||d,A=Ee(k),C=g!==t?h({},t,{},g):t,E={};for(var S in C)"$"!==S[0]&&"as"!==S&&("forwardedAs"===S?E.as=C[S]:(s?s(S,c):!A||c(S))&&(E[S]=C[S]));return t.style&&g.style!==t.style&&(E.style=h({},t.style,{},g.style)),E.className=Array.prototype.concat(u,f,y!==f?y:null,t.className,g.className).filter(Boolean).join(" "),E.ref=w,(0,a.createElement)(k,E)}(C,e,t,S)};return x.displayName=d,(C=a.forwardRef(x)).attrs=g,C.componentStyle=E,C.displayName=d,C.shouldForwardProp=A,C.foldedComponentIds=r?Array.prototype.concat(e.foldedComponentIds,e.styledComponentId):y,C.styledComponentId=m,C.target=r?e.target:e,C.withComponent=function(e){var r=t.componentId,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(t,["componentId"]),o=r&&r+"-"+(Ee(e)?e:Ae(w(e)));return Ue(e,h({},a,{attrs:g,componentId:o}),n)},Object.defineProperty(C,"defaultProps",{get:function(){return this._foldedDefaultProps},set:function(t){this._foldedDefaultProps=r?_e({},e.defaultProps,t):t}}),C.toString=function(){return"."+C.styledComponentId},o&&p()(C,e,{attrs:!0,componentStyle:!0,displayName:!0,foldedComponentIds:!0,shouldForwardProp:!0,styledComponentId:!0,target:!0,withComponent:!0}),C}var Te=function(e){return function e(t,n,a){if(void 0===a&&(a=v),!(0,r.isValidElementType)(n))return x(1,String(n));var o=function(){return t(n,a,ve.apply(void 0,arguments))};return o.withConfig=function(r){return e(t,n,h({},a,{},r))},o.attrs=function(r){return e(t,n,h({},a,{attrs:Array.prototype.concat(a.attrs,r).filter(Boolean)}))},o}(Ue,e)};["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","marquee","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","marker","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","tspan"].forEach((function(e){Te[e]=Te(e)}));var Fe,Ne=function(){function e(e,t){this.rules=e,this.componentId=t,this.isStatic=G(e),W.registerId(this.componentId+1)}var t=e.prototype;return t.createStyles=function(e,t,n,r){var a=r(ye(this.rules,t,n,r).join(""),""),o=this.componentId+e;n.insertRules(o,o,a)},t.removeStyles=function(e,t){t.clearRules(this.componentId+e)},t.renderStyles=function(e,t,n,r){e>2&&W.registerId(this.componentId+e),this.removeStyles(e,n),this.createStyles(e,t,n,r)},e}();function Le(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];var o=ve.apply(void 0,[e].concat(n)),i="sc-global-"+Ce(JSON.stringify(o)),l=new Ne(o,i);function u(e){var t=le(),n=ue(),r=(0,a.useContext)(Oe),o=(0,a.useRef)(t.allocateGSInstance(i)).current;return(0,a.useLayoutEffect)((function(){return s(o,e,t,r,n),function(){return l.removeStyles(o,t)}}),[o,e,t,r,n]),null}function s(e,t,n,r,a){if(l.isStatic)l.renderStyles(e,S,n,a);else{var o=h({},t,{theme:be(t,r,u.defaultProps)});l.renderStyles(e,o,n,a)}}return a.memo(u)}(Fe=function(){var e=this;this._emitSheetCSS=function(){var t=e.instance.toString(),n=z();return"<style "+[n&&'nonce="'+n+'"',A+'="true"','data-styled-version="5.2.1"'].filter(Boolean).join(" ")+">"+t+"</style>"},this.getStyleTags=function(){return e.sealed?x(2):e._emitSheetCSS()},this.getStyleElement=function(){var t;if(e.sealed)return x(2);var n=((t={})[A]="",t["data-styled-version"]="5.2.1",t.dangerouslySetInnerHTML={__html:e.instance.toString()},t),r=z();return r&&(n.nonce=r),[a.createElement("style",h({},n,{key:"sc-0-0"}))]},this.seal=function(){e.sealed=!0},this.instance=new W({isServer:!0}),this.sealed=!1}.prototype).collectStyles=function(e){return this.sealed?x(2):a.createElement(se,{sheet:this.instance},e)},Fe.interleaveWithNodeStream=function(e){return x(3)};const Re=Te},2177:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=function(e,t){if(!e)throw new Error("Invariant failed")}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdGF0aWMtc2l0ZS10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzLmpzIiwid2VicGFjazovL3N0YXRpYy1zaXRlLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2UuanMiLCJ3ZWJwYWNrOi8vc3RhdGljLXNpdGUtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZS5qcyIsIndlYnBhY2s6Ly9zdGF0aWMtc2l0ZS10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9mb250c291cmNlLW9wZW4tc2Fucy9pbmRleC5jc3MiLCJ3ZWJwYWNrOi8vc3RhdGljLXNpdGUtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL3N0YXRpYy1zaXRlLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2Nzc1dpdGhNYXBwaW5nVG9TdHJpbmcuanMiLCJ3ZWJwYWNrOi8vc3RhdGljLXNpdGUtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvZ2V0VXJsLmpzIiwid2VicGFjazovL3N0YXRpYy1zaXRlLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL3Jlc29sdmUtcGF0aG5hbWUvZXNtL3Jlc29sdmUtcGF0aG5hbWUuanMiLCJ3ZWJwYWNrOi8vc3RhdGljLXNpdGUtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvaGlzdG9yeS9lc20vaGlzdG9yeS5qcyIsIndlYnBhY2s6Ly9zdGF0aWMtc2l0ZS10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy9kaXN0L2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzLmNqcy5qcyIsIndlYnBhY2s6Ly9zdGF0aWMtc2l0ZS10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9vYmplY3QtYXNzaWduL2luZGV4LmpzIiwid2VicGFjazovL3N0YXRpYy1zaXRlLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zLmpzIiwid2VicGFjazovL3N0YXRpYy1zaXRlLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vc3RhdGljLXNpdGUtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanMiLCJ3ZWJwYWNrOi8vc3RhdGljLXNpdGUtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vc3RhdGljLXNpdGUtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2luZGV4LmpzIiwid2VicGFjazovL3N0YXRpYy1zaXRlLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL2hvdGtleXMtanMvZGlzdC9ob3RrZXlzLmVzbS5qcyIsIndlYnBhY2s6Ly9zdGF0aWMtc2l0ZS10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9yZWFjdC1ob3RrZXlzLWhvb2svZGlzdC9yZWFjdC1ob3RrZXlzLWhvb2suZXNtLmpzIiwid2VicGFjazovL3N0YXRpYy1zaXRlLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2Nqcy9yZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly9zdGF0aWMtc2l0ZS10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9yZWFjdC1pcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9zdGF0aWMtc2l0ZS10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2VzbS9yZWFjdC1yb3V0ZXItZG9tLmpzIiwid2VicGFjazovL3N0YXRpYy1zaXRlLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL21pbmktY3JlYXRlLXJlYWN0LWNvbnRleHQvZGlzdC9lc20vaW5kZXguanMiLCJ3ZWJwYWNrOi8vc3RhdGljLXNpdGUtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL2VzbS9yZWFjdC1yb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vc3RhdGljLXNpdGUtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL25vZGVfbW9kdWxlcy9pc2FycmF5L2luZGV4LmpzIiwid2VicGFjazovL3N0YXRpYy1zaXRlLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9ub2RlX21vZHVsZXMvcGF0aC10by1yZWdleHAvaW5kZXguanMiLCJ3ZWJwYWNrOi8vc3RhdGljLXNpdGUtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvcmVhY3QvY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovL3N0YXRpYy1zaXRlLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovL3N0YXRpYy1zaXRlLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovL3N0YXRpYy1zaXRlLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9pbmRleC5qcyIsIndlYnBhY2s6Ly9zdGF0aWMtc2l0ZS10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9zaGFsbG93ZXF1YWwvaW5kZXguanMiLCJ3ZWJwYWNrOi8vc3RhdGljLXNpdGUtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvZm9udHNvdXJjZS1vcGVuLXNhbnMvaW5kZXguY3NzPzVhYjEiLCJ3ZWJwYWNrOi8vc3RhdGljLXNpdGUtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vc3RhdGljLXNpdGUtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vc3R5bGlzL2Rpc3Qvc3R5bGlzLmJyb3dzZXIuZXNtLmpzIiwid2VicGFjazovL3N0YXRpYy1zaXRlLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL3VuaXRsZXNzL2Rpc3QvdW5pdGxlc3MuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vc3RhdGljLXNpdGUtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vaXMtcHJvcC12YWxpZC9kaXN0L2lzLXByb3AtdmFsaWQuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vc3RhdGljLXNpdGUtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vbWVtb2l6ZS9kaXN0L21lbW9pemUuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vc3RhdGljLXNpdGUtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvc3R5bGVkLWNvbXBvbmVudHMvZGlzdC9zdHlsZWQtY29tcG9uZW50cy5icm93c2VyLmVzbS5qcyIsIndlYnBhY2s6Ly9zdGF0aWMtc2l0ZS10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy90aW55LWludmFyaWFudC9kaXN0L3RpbnktaW52YXJpYW50LmVzbS5qcyJdLCJuYW1lcyI6WyJfZXh0ZW5kcyIsIk9iamVjdCIsImFzc2lnbiIsInRhcmdldCIsImkiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJzb3VyY2UiLCJrZXkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJhcHBseSIsInRoaXMiLCJfaW5oZXJpdHNMb29zZSIsInN1YkNsYXNzIiwic3VwZXJDbGFzcyIsImNyZWF0ZSIsImNvbnN0cnVjdG9yIiwiX19wcm90b19fIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UiLCJleGNsdWRlZCIsInNvdXJjZUtleXMiLCJrZXlzIiwiaW5kZXhPZiIsIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzFfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8yX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfM19fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzRfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF81X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNl9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzdfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF84X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfOV9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzEwX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTFfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xMl9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzEzX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTRfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xNV9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJjb25jYXQiLCJqb2luIiwibW9kdWxlcyIsIm1lZGlhUXVlcnkiLCJkZWR1cGUiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiX2kiLCJfYXJyYXlMaWtlVG9BcnJheSIsImFyciIsImxlbiIsImFycjIiLCJBcnJheSIsIl9pdGVtIiwiaXNBcnJheSIsIl9hcnJheVdpdGhIb2xlcyIsIlN5bWJvbCIsIml0ZXJhdG9yIiwiX2FyciIsIl9uIiwiX2QiLCJfZSIsInVuZGVmaW5lZCIsIl9zIiwibmV4dCIsImRvbmUiLCJ2YWx1ZSIsImVyciIsIl9pdGVyYWJsZVRvQXJyYXlMaW1pdCIsIm8iLCJtaW5MZW4iLCJuIiwic2xpY2UiLCJuYW1lIiwiZnJvbSIsInRlc3QiLCJfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkiLCJUeXBlRXJyb3IiLCJfbm9uSXRlcmFibGVSZXN0IiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInNvdXJjZVVSTHMiLCJzb3VyY2VzIiwic291cmNlUm9vdCIsInVybCIsIm9wdGlvbnMiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImhhc2giLCJuZWVkUXVvdGVzIiwicmVwbGFjZSIsImlzQWJzb2x1dGUiLCJwYXRobmFtZSIsImNoYXJBdCIsInNwbGljZU9uZSIsImluZGV4IiwiayIsInBvcCIsImFkZExlYWRpbmdTbGFzaCIsInBhdGgiLCJzdHJpcExlYWRpbmdTbGFzaCIsInN1YnN0ciIsInN0cmlwQmFzZW5hbWUiLCJwcmVmaXgiLCJ0b0xvd2VyQ2FzZSIsImhhc0Jhc2VuYW1lIiwic3RyaXBUcmFpbGluZ1NsYXNoIiwiY3JlYXRlUGF0aCIsImxvY2F0aW9uIiwic2VhcmNoIiwiY3JlYXRlTG9jYXRpb24iLCJzdGF0ZSIsImN1cnJlbnRMb2NhdGlvbiIsImhhc2hJbmRleCIsInNlYXJjaEluZGV4IiwicGFyc2VQYXRoIiwiZGVjb2RlVVJJIiwiZSIsIlVSSUVycm9yIiwidG8iLCJoYXNUcmFpbGluZ1NsYXNoIiwidG9QYXJ0cyIsInNwbGl0IiwiZnJvbVBhcnRzIiwiaXNUb0FicyIsImlzRnJvbUFicyIsIm11c3RFbmRBYnMiLCJsYXN0IiwidXAiLCJwYXJ0IiwidW5zaGlmdCIsInJlc3VsdCIsImNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyIiwicHJvbXB0IiwibGlzdGVuZXJzIiwic2V0UHJvbXB0IiwibmV4dFByb21wdCIsImNvbmZpcm1UcmFuc2l0aW9uVG8iLCJhY3Rpb24iLCJnZXRVc2VyQ29uZmlybWF0aW9uIiwiY2FsbGJhY2siLCJhcHBlbmRMaXN0ZW5lciIsImZuIiwiaXNBY3RpdmUiLCJsaXN0ZW5lciIsImZpbHRlciIsIm5vdGlmeUxpc3RlbmVycyIsIl9sZW4iLCJhcmdzIiwiX2tleSIsImZvckVhY2giLCJjYW5Vc2VET00iLCJ3aW5kb3ciLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJnZXRDb25maXJtYXRpb24iLCJtZXNzYWdlIiwiY29uZmlybSIsIlBvcFN0YXRlRXZlbnQiLCJIYXNoQ2hhbmdlRXZlbnQiLCJnZXRIaXN0b3J5U3RhdGUiLCJoaXN0b3J5IiwiY3JlYXRlQnJvd3Nlckhpc3RvcnkiLCJwcm9wcyIsInVhIiwiZ2xvYmFsSGlzdG9yeSIsImNhblVzZUhpc3RvcnkiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lciIsIl9wcm9wcyIsIl9wcm9wcyRmb3JjZVJlZnJlc2giLCJmb3JjZVJlZnJlc2giLCJfcHJvcHMkZ2V0VXNlckNvbmZpcm0iLCJfcHJvcHMka2V5TGVuZ3RoIiwia2V5TGVuZ3RoIiwiYmFzZW5hbWUiLCJnZXRET01Mb2NhdGlvbiIsImhpc3RvcnlTdGF0ZSIsIl9yZWYiLCJfd2luZG93JGxvY2F0aW9uIiwiY3JlYXRlS2V5IiwiTWF0aCIsInJhbmRvbSIsInRyYW5zaXRpb25NYW5hZ2VyIiwic2V0U3RhdGUiLCJuZXh0U3RhdGUiLCJoYW5kbGVQb3BTdGF0ZSIsImV2ZW50IiwiaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudCIsImhhbmRsZVBvcCIsImhhbmRsZUhhc2hDaGFuZ2UiLCJmb3JjZU5leHRQb3AiLCJvayIsImZyb21Mb2NhdGlvbiIsInRvTG9jYXRpb24iLCJ0b0luZGV4IiwiYWxsS2V5cyIsImZyb21JbmRleCIsImRlbHRhIiwiZ28iLCJyZXZlcnRQb3AiLCJpbml0aWFsTG9jYXRpb24iLCJjcmVhdGVIcmVmIiwibGlzdGVuZXJDb3VudCIsImNoZWNrRE9NTGlzdGVuZXJzIiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJpc0Jsb2NrZWQiLCJocmVmIiwicHVzaFN0YXRlIiwicHJldkluZGV4IiwibmV4dEtleXMiLCJyZXBsYWNlU3RhdGUiLCJnb0JhY2siLCJnb0ZvcndhcmQiLCJibG9jayIsInVuYmxvY2siLCJsaXN0ZW4iLCJ1bmxpc3RlbiIsIkhhc2hDaGFuZ2VFdmVudCQxIiwiSGFzaFBhdGhDb2RlcnMiLCJoYXNoYmFuZyIsImVuY29kZVBhdGgiLCJkZWNvZGVQYXRoIiwibm9zbGFzaCIsInNsYXNoIiwic3RyaXBIYXNoIiwiZ2V0SGFzaFBhdGgiLCJzdWJzdHJpbmciLCJyZXBsYWNlSGFzaFBhdGgiLCJjcmVhdGVIYXNoSGlzdG9yeSIsIl9wcm9wcyRoYXNoVHlwZSIsImhhc2hUeXBlIiwiX0hhc2hQYXRoQ29kZXJzJGhhc2hUIiwiaWdub3JlUGF0aCIsImEiLCJiIiwiZW5jb2RlZFBhdGgiLCJwcmV2TG9jYXRpb24iLCJhbGxQYXRocyIsImxhc3RJbmRleE9mIiwiYmFzZVRhZyIsInF1ZXJ5U2VsZWN0b3IiLCJnZXRBdHRyaWJ1dGUiLCJwdXNoSGFzaFBhdGgiLCJuZXh0UGF0aHMiLCJjbGFtcCIsImxvd2VyQm91bmQiLCJ1cHBlckJvdW5kIiwibWluIiwibWF4IiwiY3JlYXRlTWVtb3J5SGlzdG9yeSIsIl9wcm9wcyRpbml0aWFsRW50cmllcyIsImluaXRpYWxFbnRyaWVzIiwiX3Byb3BzJGluaXRpYWxJbmRleCIsImluaXRpYWxJbmRleCIsImVudHJpZXMiLCJlbnRyeSIsIm5leHRJbmRleCIsIm5leHRFbnRyaWVzIiwic3BsaWNlIiwiY2FuR28iLCJyZWFjdElzIiwiUkVBQ1RfU1RBVElDUyIsImNoaWxkQ29udGV4dFR5cGVzIiwiY29udGV4dFR5cGUiLCJjb250ZXh0VHlwZXMiLCJkZWZhdWx0UHJvcHMiLCJkaXNwbGF5TmFtZSIsImdldERlZmF1bHRQcm9wcyIsImdldERlcml2ZWRTdGF0ZUZyb21FcnJvciIsImdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyIsIm1peGlucyIsInByb3BUeXBlcyIsInR5cGUiLCJLTk9XTl9TVEFUSUNTIiwiY2FsbGVyIiwiY2FsbGVlIiwiYXJpdHkiLCJNRU1PX1NUQVRJQ1MiLCJjb21wYXJlIiwiVFlQRV9TVEFUSUNTIiwiZ2V0U3RhdGljcyIsImNvbXBvbmVudCIsImlzTWVtbyIsIkZvcndhcmRSZWYiLCJyZW5kZXIiLCJNZW1vIiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZ2V0UHJvdG90eXBlT2YiLCJvYmplY3RQcm90b3R5cGUiLCJob2lzdE5vblJlYWN0U3RhdGljcyIsInRhcmdldENvbXBvbmVudCIsInNvdXJjZUNvbXBvbmVudCIsImJsYWNrbGlzdCIsImluaGVyaXRlZENvbXBvbmVudCIsInRhcmdldFN0YXRpY3MiLCJzb3VyY2VTdGF0aWNzIiwiZGVzY3JpcHRvciIsInByb3BJc0VudW1lcmFibGUiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsInRvT2JqZWN0IiwidmFsIiwidGVzdDEiLCJTdHJpbmciLCJ0ZXN0MiIsImZyb21DaGFyQ29kZSIsInRlc3QzIiwibGV0dGVyIiwic2hvdWxkVXNlTmF0aXZlIiwic3ltYm9scyIsInMiLCJSZWFjdFByb3BUeXBlc1NlY3JldCIsImVtcHR5RnVuY3Rpb24iLCJlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0IiwicmVzZXRXYXJuaW5nQ2FjaGUiLCJzaGltIiwicHJvcE5hbWUiLCJjb21wb25lbnROYW1lIiwicHJvcEZ1bGxOYW1lIiwic2VjcmV0IiwiRXJyb3IiLCJnZXRTaGltIiwiaXNSZXF1aXJlZCIsIlJlYWN0UHJvcFR5cGVzIiwiYXJyYXkiLCJib29sIiwiZnVuYyIsIm51bWJlciIsIm9iamVjdCIsInN0cmluZyIsInN5bWJvbCIsImFueSIsImFycmF5T2YiLCJlbGVtZW50IiwiZWxlbWVudFR5cGUiLCJpbnN0YW5jZU9mIiwibm9kZSIsIm9iamVjdE9mIiwib25lT2YiLCJvbmVPZlR5cGUiLCJzaGFwZSIsImV4YWN0IiwiY2hlY2tQcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJhYSIsIm0iLCJyIiwieSIsImMiLCJiYSIsIlNldCIsImNhIiwiZGEiLCJlYSIsImFkZCIsImZhIiwiaGEiLCJpYSIsImphIiwia2EiLCJCIiwiZCIsImYiLCJnIiwiYWNjZXB0c0Jvb2xlYW5zIiwiYXR0cmlidXRlTmFtZSIsImF0dHJpYnV0ZU5hbWVzcGFjZSIsIm11c3RVc2VQcm9wZXJ0eSIsInByb3BlcnR5TmFtZSIsInNhbml0aXplVVJMIiwicmVtb3ZlRW1wdHlTdHJpbmciLCJEIiwib2EiLCJwYSIsInRvVXBwZXJDYXNlIiwicWEiLCJtYSIsImlzTmFOIiwibmEiLCJsYSIsInJlbW92ZUF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZU5TIiwieGxpbmtIcmVmIiwicmEiLCJfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCIsInNhIiwidGEiLCJ3YSIsInhhIiwieWEiLCJ6YSIsIkFhIiwiQmEiLCJDYSIsIkRhIiwiRWEiLCJGYSIsIkdhIiwiSGEiLCJJYSIsIkphIiwiZm9yIiwiRSIsIk1hIiwiS2EiLCJMYSIsIk5hIiwic3RhY2siLCJ0cmltIiwibWF0Y2giLCJPYSIsIlBhIiwicHJlcGFyZVN0YWNrVHJhY2UiLCJzZXQiLCJSZWZsZWN0IiwiY29uc3RydWN0IiwiaCIsIlFhIiwidGFnIiwiX3JlbmRlciIsIlJhIiwiJCR0eXBlb2YiLCJfY29udGV4dCIsIl9wYXlsb2FkIiwiX2luaXQiLCJTYSIsIlRhIiwibm9kZU5hbWUiLCJWYSIsIl92YWx1ZVRyYWNrZXIiLCJnZXQiLCJjb25maWd1cmFibGUiLCJlbnVtZXJhYmxlIiwiZ2V0VmFsdWUiLCJzZXRWYWx1ZSIsInN0b3BUcmFja2luZyIsIlVhIiwiV2EiLCJjaGVja2VkIiwiWGEiLCJhY3RpdmVFbGVtZW50IiwiYm9keSIsIllhIiwiZGVmYXVsdENoZWNrZWQiLCJkZWZhdWx0VmFsdWUiLCJfd3JhcHBlclN0YXRlIiwiaW5pdGlhbENoZWNrZWQiLCJaYSIsImluaXRpYWxWYWx1ZSIsImNvbnRyb2xsZWQiLCIkYSIsImFiIiwiYmIiLCJjYiIsIm93bmVyRG9jdW1lbnQiLCJlYiIsImNoaWxkcmVuIiwiQ2hpbGRyZW4iLCJkYiIsImZiIiwic2VsZWN0ZWQiLCJkZWZhdWx0U2VsZWN0ZWQiLCJkaXNhYmxlZCIsImdiIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJoYiIsImliIiwiamIiLCJ0ZXh0Q29udGVudCIsImtiIiwibGIiLCJtYiIsIm5iIiwib2IiLCJuYW1lc3BhY2VVUkkiLCJpbm5lckhUTUwiLCJ2YWx1ZU9mIiwiZmlyc3RDaGlsZCIsInJlbW92ZUNoaWxkIiwiYXBwZW5kQ2hpbGQiLCJNU0FwcCIsImV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uIiwicGIiLCJsYXN0Q2hpbGQiLCJub2RlVHlwZSIsIm5vZGVWYWx1ZSIsInFiIiwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQiLCJib3JkZXJJbWFnZU91dHNldCIsImJvcmRlckltYWdlU2xpY2UiLCJib3JkZXJJbWFnZVdpZHRoIiwiYm94RmxleCIsImJveEZsZXhHcm91cCIsImJveE9yZGluYWxHcm91cCIsImNvbHVtbkNvdW50IiwiY29sdW1ucyIsImZsZXgiLCJmbGV4R3JvdyIsImZsZXhQb3NpdGl2ZSIsImZsZXhTaHJpbmsiLCJmbGV4TmVnYXRpdmUiLCJmbGV4T3JkZXIiLCJncmlkQXJlYSIsImdyaWRSb3ciLCJncmlkUm93RW5kIiwiZ3JpZFJvd1NwYW4iLCJncmlkUm93U3RhcnQiLCJncmlkQ29sdW1uIiwiZ3JpZENvbHVtbkVuZCIsImdyaWRDb2x1bW5TcGFuIiwiZ3JpZENvbHVtblN0YXJ0IiwiZm9udFdlaWdodCIsImxpbmVDbGFtcCIsImxpbmVIZWlnaHQiLCJvcGFjaXR5Iiwib3JkZXIiLCJvcnBoYW5zIiwidGFiU2l6ZSIsIndpZG93cyIsInpJbmRleCIsInpvb20iLCJmaWxsT3BhY2l0eSIsImZsb29kT3BhY2l0eSIsInN0b3BPcGFjaXR5Iiwic3Ryb2tlRGFzaGFycmF5Iiwic3Ryb2tlRGFzaG9mZnNldCIsInN0cm9rZU1pdGVybGltaXQiLCJzdHJva2VPcGFjaXR5Iiwic3Ryb2tlV2lkdGgiLCJyYiIsInNiIiwidGIiLCJzdHlsZSIsInNldFByb3BlcnR5IiwidWIiLCJtZW51aXRlbSIsImFyZWEiLCJiYXNlIiwiYnIiLCJjb2wiLCJlbWJlZCIsImhyIiwiaW1nIiwiaW5wdXQiLCJrZXlnZW4iLCJsaW5rIiwibWV0YSIsInBhcmFtIiwidHJhY2siLCJ3YnIiLCJ2YiIsIndiIiwiaXMiLCJ4YiIsInNyY0VsZW1lbnQiLCJjb3JyZXNwb25kaW5nVXNlRWxlbWVudCIsInBhcmVudE5vZGUiLCJ5YiIsInpiIiwiQWIiLCJCYiIsIkNiIiwic3RhdGVOb2RlIiwiRGIiLCJFYiIsIkZiIiwiR2IiLCJIYiIsIkliIiwiSmIiLCJLYiIsIkxiIiwiTWIiLCJPYiIsIlBiIiwiUWIiLCJSYiIsImwiLCJvbkVycm9yIiwiU2IiLCJUYiIsIlViIiwiVmIiLCJXYiIsIlhiIiwiWmIiLCJhbHRlcm5hdGUiLCJyZXR1cm4iLCJmbGFncyIsIiRiIiwibWVtb2l6ZWRTdGF0ZSIsImRlaHlkcmF0ZWQiLCJhYyIsImRjIiwiZWMiLCJmYyIsImdjIiwiaGMiLCJpYyIsImpjIiwia2MiLCJsYyIsIm1jIiwibmMiLCJNYXAiLCJvYyIsInBjIiwicWMiLCJyYyIsImJsb2NrZWRPbiIsImRvbUV2ZW50TmFtZSIsImV2ZW50U3lzdGVtRmxhZ3MiLCJuYXRpdmVFdmVudCIsInRhcmdldENvbnRhaW5lcnMiLCJzYyIsImRlbGV0ZSIsInBvaW50ZXJJZCIsInRjIiwidmMiLCJ3YyIsImxhbmVQcmlvcml0eSIsInVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSIsInByaW9yaXR5IiwiaHlkcmF0ZSIsImNvbnRhaW5lckluZm8iLCJ4YyIsInljIiwic2hpZnQiLCJ6YyIsIkFjIiwiQmMiLCJ1bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrIiwidW5zdGFibGVfTm9ybWFsUHJpb3JpdHkiLCJDYyIsIkRjIiwiRWMiLCJhbmltYXRpb25lbmQiLCJhbmltYXRpb25pdGVyYXRpb24iLCJhbmltYXRpb25zdGFydCIsInRyYW5zaXRpb25lbmQiLCJGYyIsIkdjIiwiSGMiLCJhbmltYXRpb24iLCJ0cmFuc2l0aW9uIiwiSWMiLCJKYyIsIktjIiwiTGMiLCJNYyIsIk5jIiwiT2MiLCJQYyIsIlFjIiwidW5zdGFibGVfbm93IiwiRiIsIlJjIiwiVWMiLCJwZW5kaW5nTGFuZXMiLCJleHBpcmVkTGFuZXMiLCJzdXNwZW5kZWRMYW5lcyIsInBpbmdlZExhbmVzIiwiVmMiLCJlbnRhbmdsZWRMYW5lcyIsImVudGFuZ2xlbWVudHMiLCJXYyIsIlhjIiwiWWMiLCJaYyIsIiRjIiwiZXZlbnRUaW1lcyIsImNsejMyIiwiYmQiLCJjZCIsImxvZyIsIkxOMiIsImRkIiwidW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHkiLCJlZCIsImZkIiwiZ2QiLCJoZCIsImJpbmQiLCJ1YyIsImpkIiwia2QiLCJsZCIsIm1kIiwibmQiLCJvZCIsImtleUNvZGUiLCJjaGFyQ29kZSIsInBkIiwicWQiLCJyZCIsIl9yZWFjdE5hbWUiLCJfdGFyZ2V0SW5zdCIsImN1cnJlbnRUYXJnZXQiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJkZWZhdWx0UHJldmVudGVkIiwicmV0dXJuVmFsdWUiLCJpc1Byb3BhZ2F0aW9uU3RvcHBlZCIsInByZXZlbnREZWZhdWx0Iiwic3RvcFByb3BhZ2F0aW9uIiwiY2FuY2VsQnViYmxlIiwicGVyc2lzdCIsImlzUGVyc2lzdGVudCIsIndkIiwieGQiLCJ5ZCIsInNkIiwiZXZlbnRQaGFzZSIsImJ1YmJsZXMiLCJjYW5jZWxhYmxlIiwidGltZVN0YW1wIiwiRGF0ZSIsIm5vdyIsImlzVHJ1c3RlZCIsInRkIiwidWQiLCJ2aWV3IiwiZGV0YWlsIiwidmQiLCJBZCIsInNjcmVlblgiLCJzY3JlZW5ZIiwiY2xpZW50WCIsImNsaWVudFkiLCJwYWdlWCIsInBhZ2VZIiwiY3RybEtleSIsInNoaWZ0S2V5IiwiYWx0S2V5IiwibWV0YUtleSIsImdldE1vZGlmaWVyU3RhdGUiLCJ6ZCIsImJ1dHRvbiIsImJ1dHRvbnMiLCJyZWxhdGVkVGFyZ2V0IiwiZnJvbUVsZW1lbnQiLCJ0b0VsZW1lbnQiLCJtb3ZlbWVudFgiLCJtb3ZlbWVudFkiLCJCZCIsIkRkIiwiZGF0YVRyYW5zZmVyIiwiRmQiLCJIZCIsImFuaW1hdGlvbk5hbWUiLCJlbGFwc2VkVGltZSIsInBzZXVkb0VsZW1lbnQiLCJKZCIsImNsaXBib2FyZERhdGEiLCJMZCIsIk1kIiwiRXNjIiwiU3BhY2ViYXIiLCJMZWZ0IiwiVXAiLCJSaWdodCIsIkRvd24iLCJEZWwiLCJXaW4iLCJNZW51IiwiQXBwcyIsIlNjcm9sbCIsIk1velByaW50YWJsZUtleSIsIk5kIiwiOCIsIjkiLCIxMiIsIjEzIiwiMTYiLCIxNyIsIjE4IiwiMTkiLCIyMCIsIjI3IiwiMzIiLCIzMyIsIjM0IiwiMzUiLCIzNiIsIjM3IiwiMzgiLCIzOSIsIjQwIiwiNDUiLCI0NiIsIjExMiIsIjExMyIsIjExNCIsIjExNSIsIjExNiIsIjExNyIsIjExOCIsIjExOSIsIjEyMCIsIjEyMSIsIjEyMiIsIjEyMyIsIjE0NCIsIjE0NSIsIjIyNCIsIk9kIiwiQWx0IiwiQ29udHJvbCIsIk1ldGEiLCJTaGlmdCIsIlBkIiwiUmQiLCJjb2RlIiwicmVwZWF0IiwibG9jYWxlIiwid2hpY2giLCJUZCIsIndpZHRoIiwiaGVpZ2h0IiwicHJlc3N1cmUiLCJ0YW5nZW50aWFsUHJlc3N1cmUiLCJ0aWx0WCIsInRpbHRZIiwidHdpc3QiLCJwb2ludGVyVHlwZSIsImlzUHJpbWFyeSIsIlZkIiwidG91Y2hlcyIsInRhcmdldFRvdWNoZXMiLCJjaGFuZ2VkVG91Y2hlcyIsIlhkIiwiWmQiLCJkZWx0YVgiLCJ3aGVlbERlbHRhWCIsImRlbHRhWSIsIndoZWVsRGVsdGFZIiwid2hlZWxEZWx0YSIsImRlbHRhWiIsImRlbHRhTW9kZSIsIiRkIiwiYWUiLCJiZSIsImRvY3VtZW50TW9kZSIsImNlIiwiZGUiLCJlZSIsImZlIiwiZ2UiLCJoZSIsImllIiwibGUiLCJjb2xvciIsImRhdGUiLCJkYXRldGltZSIsImVtYWlsIiwibW9udGgiLCJwYXNzd29yZCIsInJhbmdlIiwidGVsIiwidGV4dCIsInRpbWUiLCJ3ZWVrIiwibWUiLCJuZSIsIm9lIiwicGUiLCJxZSIsInJlIiwic2UiLCJ0ZSIsInVlIiwidmUiLCJ3ZSIsInhlIiwieWUiLCJ6ZSIsIm9uaW5wdXQiLCJBZSIsImRldGFjaEV2ZW50IiwiQmUiLCJDZSIsImF0dGFjaEV2ZW50IiwiRGUiLCJFZSIsIkZlIiwiSGUiLCJJZSIsIkplIiwiS2UiLCJMZSIsIm9mZnNldCIsIm5leHRTaWJsaW5nIiwiTWUiLCJjb250YWlucyIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwiTmUiLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnRXaW5kb3ciLCJPZSIsImNvbnRlbnRFZGl0YWJsZSIsIlBlIiwiUWUiLCJSZSIsIlNlIiwiVGUiLCJVZSIsInN0YXJ0Iiwic2VsZWN0aW9uU3RhcnQiLCJlbmQiLCJzZWxlY3Rpb25FbmQiLCJhbmNob3JOb2RlIiwiZGVmYXVsdFZpZXciLCJnZXRTZWxlY3Rpb24iLCJhbmNob3JPZmZzZXQiLCJmb2N1c05vZGUiLCJmb2N1c09mZnNldCIsIlZlIiwiV2UiLCJYZSIsIlllIiwiWmUiLCJZYiIsImluc3RhbmNlIiwiRyIsIiRlIiwiaGFzIiwiYWYiLCJiZiIsImNmIiwiZGYiLCJjYXB0dXJlIiwicGFzc2l2ZSIsIk5iIiwieCIsInciLCJ6IiwidSIsInEiLCJ0IiwidiIsImVmIiwiZmYiLCJwYXJlbnRXaW5kb3ciLCJnZiIsImhmIiwiSiIsIksiLCJRIiwiTCIsImplIiwiY2hhciIsImtlIiwiamYiLCJrZiIsImxmIiwibWYiLCJhdXRvRm9jdXMiLCJuZiIsIl9faHRtbCIsIm9mIiwic2V0VGltZW91dCIsInBmIiwiY2xlYXJUaW1lb3V0IiwicWYiLCJyZiIsInNmIiwicHJldmlvdXNTaWJsaW5nIiwidGYiLCJ2ZiIsIndmIiwieGYiLCJ5ZiIsImNoaWxkIiwiemYiLCJBZiIsIkJmIiwiY3VycmVudCIsIkgiLCJJIiwiQ2YiLCJNIiwiTiIsIkRmIiwiRWYiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0IiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQiLCJGZiIsIkdmIiwiSGYiLCJJZiIsImdldENoaWxkQ29udGV4dCIsIkpmIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQiLCJLZiIsIkxmIiwiTWYiLCJOZiIsIk9mIiwiUGYiLCJ1bnN0YWJsZV9jYW5jZWxDYWxsYmFjayIsIlFmIiwidW5zdGFibGVfc2hvdWxkWWllbGQiLCJSZiIsInVuc3RhYmxlX3JlcXVlc3RQYWludCIsIlNmIiwiVGYiLCJ1bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCIsIlVmIiwidW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHkiLCJWZiIsIldmIiwiWGYiLCJ1bnN0YWJsZV9Mb3dQcmlvcml0eSIsIllmIiwidW5zdGFibGVfSWRsZVByaW9yaXR5IiwiWmYiLCIkZiIsImFnIiwiYmciLCJjZyIsImRnIiwiTyIsImVnIiwiZmciLCJnZyIsImhnIiwiaWciLCJqZyIsImtnIiwiUmVhY3RDdXJyZW50QmF0Y2hDb25maWciLCJsZyIsIm1nIiwibmciLCJvZyIsInBnIiwicWciLCJyZyIsIl9jdXJyZW50VmFsdWUiLCJzZyIsImNoaWxkTGFuZXMiLCJ0ZyIsImRlcGVuZGVuY2llcyIsImZpcnN0Q29udGV4dCIsImxhbmVzIiwidWciLCJ2ZyIsImNvbnRleHQiLCJvYnNlcnZlZEJpdHMiLCJyZXNwb25kZXJzIiwid2ciLCJ4ZyIsInVwZGF0ZVF1ZXVlIiwiYmFzZVN0YXRlIiwiZmlyc3RCYXNlVXBkYXRlIiwibGFzdEJhc2VVcGRhdGUiLCJzaGFyZWQiLCJwZW5kaW5nIiwiZWZmZWN0cyIsInlnIiwiemciLCJldmVudFRpbWUiLCJsYW5lIiwicGF5bG9hZCIsIkFnIiwiQmciLCJDZyIsIkEiLCJwIiwiQyIsIkRnIiwiRWciLCJGZyIsIkNvbXBvbmVudCIsInJlZnMiLCJHZyIsIktnIiwiaXNNb3VudGVkIiwiX3JlYWN0SW50ZXJuYWxzIiwiZW5xdWV1ZVNldFN0YXRlIiwiSGciLCJJZyIsIkpnIiwiZW5xdWV1ZVJlcGxhY2VTdGF0ZSIsImVucXVldWVGb3JjZVVwZGF0ZSIsIkxnIiwic2hvdWxkQ29tcG9uZW50VXBkYXRlIiwiaXNQdXJlUmVhY3RDb21wb25lbnQiLCJNZyIsInVwZGF0ZXIiLCJOZyIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIk9nIiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50RGlkTW91bnQiLCJQZyIsIlFnIiwicmVmIiwiX293bmVyIiwiX3N0cmluZ1JlZiIsIlJnIiwiU2ciLCJsYXN0RWZmZWN0IiwibmV4dEVmZmVjdCIsImZpcnN0RWZmZWN0Iiwic2libGluZyIsIlRnIiwiVWciLCJtb2RlIiwiVmciLCJpbXBsZW1lbnRhdGlvbiIsIldnIiwiWGciLCJZZyIsIlpnIiwiJGciLCJhaCIsImJoIiwiY2giLCJkaCIsImVoIiwiZG9jdW1lbnRFbGVtZW50IiwidGFnTmFtZSIsImZoIiwiZ2giLCJoaCIsIlAiLCJpaCIsIm1lbW9pemVkUHJvcHMiLCJyZXZlYWxPcmRlciIsImpoIiwia2giLCJsaCIsIm1oIiwibmgiLCJvaCIsInBlbmRpbmdQcm9wcyIsInBoIiwicWgiLCJyaCIsInNoIiwidGgiLCJ1aCIsIl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5IiwidmgiLCJSZWFjdEN1cnJlbnREaXNwYXRjaGVyIiwid2giLCJ4aCIsIlIiLCJTIiwiVCIsInloIiwiemgiLCJBaCIsIkJoIiwiQ2giLCJEaCIsIkVoIiwiRmgiLCJHaCIsIkhoIiwiYmFzZVF1ZXVlIiwicXVldWUiLCJJaCIsIkpoIiwiS2giLCJsYXN0UmVuZGVyZWRSZWR1Y2VyIiwiZWFnZXJSZWR1Y2VyIiwiZWFnZXJTdGF0ZSIsImxhc3RSZW5kZXJlZFN0YXRlIiwiZGlzcGF0Y2giLCJMaCIsIk1oIiwiX2dldFZlcnNpb24iLCJfc291cmNlIiwibXV0YWJsZVJlYWRMYW5lcyIsIk5oIiwiVSIsInVzZVN0YXRlIiwiZ2V0U25hcHNob3QiLCJzdWJzY3JpYmUiLCJ1c2VFZmZlY3QiLCJzZXRTbmFwc2hvdCIsIk9oIiwiUGgiLCJRaCIsIlJoIiwiZGVzdHJveSIsImRlcHMiLCJTaCIsIlRoIiwiVWgiLCJWaCIsIldoIiwiWGgiLCJZaCIsIlpoIiwiJGgiLCJhaSIsImJpIiwiY2kiLCJkaSIsInJlYWRDb250ZXh0IiwidXNlQ2FsbGJhY2siLCJ1c2VDb250ZXh0IiwidXNlSW1wZXJhdGl2ZUhhbmRsZSIsInVzZUxheW91dEVmZmVjdCIsInVzZU1lbW8iLCJ1c2VSZWR1Y2VyIiwidXNlUmVmIiwidXNlRGVidWdWYWx1ZSIsInVzZURlZmVycmVkVmFsdWUiLCJ1c2VUcmFuc2l0aW9uIiwidXNlTXV0YWJsZVNvdXJjZSIsInVzZU9wYXF1ZUlkZW50aWZpZXIiLCJ1bnN0YWJsZV9pc05ld1JlY29uY2lsZXIiLCJ1ZiIsImVpIiwiUmVhY3RDdXJyZW50T3duZXIiLCJmaSIsImdpIiwiaGkiLCJpaSIsImppIiwia2kiLCJsaSIsIm1pIiwiYmFzZUxhbmVzIiwibmkiLCJvaSIsInBpIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50RGlkVXBkYXRlIiwicWkiLCJyaSIsInBlbmRpbmdDb250ZXh0IiwiQmkiLCJEaSIsIkVpIiwic2kiLCJyZXRyeUxhbmUiLCJ0aSIsImZhbGxiYWNrIiwidW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2siLCJ1aSIsInVuc3RhYmxlX2V4cGVjdGVkTG9hZFRpbWUiLCJ2aSIsIndpIiwieGkiLCJ5aSIsInppIiwiaXNCYWNrd2FyZHMiLCJyZW5kZXJpbmciLCJyZW5kZXJpbmdTdGFydFRpbWUiLCJ0YWlsIiwidGFpbE1vZGUiLCJBaSIsIkZpIiwiR2kiLCJ3YXNNdWx0aXBsZSIsIm11bHRpcGxlIiwib25DbGljayIsIm9uY2xpY2siLCJzaXplIiwiY3JlYXRlRWxlbWVudE5TIiwiY3JlYXRlVGV4dE5vZGUiLCJWIiwiSGkiLCJJaSIsIlciLCJKaSIsIktpIiwiTGkiLCJNaSIsIk5pIiwiY29uc29sZSIsImVycm9yIiwiT2kiLCJXZWFrTWFwIiwiUGkiLCJRaSIsIlJpIiwiU2kiLCJjb21wb25lbnREaWRDYXRjaCIsIlRpIiwiY29tcG9uZW50U3RhY2siLCJVaSIsIldlYWtTZXQiLCJWaSIsIldpIiwiWGkiLCJfX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIllpIiwiWmkiLCIkaSIsImZvY3VzIiwiYWoiLCJkaXNwbGF5IiwiYmoiLCJvbkNvbW1pdEZpYmVyVW5tb3VudCIsImNvbXBvbmVudFdpbGxVbm1vdW50IiwiY2oiLCJkaiIsImVqIiwiZmoiLCJnaiIsImhqIiwiaW5zZXJ0QmVmb3JlIiwiX3JlYWN0Um9vdENvbnRhaW5lciIsImlqIiwiamoiLCJraiIsImxqIiwidGhlbiIsIm1qIiwibmoiLCJjZWlsIiwib2oiLCJwaiIsIlgiLCJZIiwicWoiLCJyaiIsInNqIiwidGoiLCJ1aiIsInZqIiwiSW5maW5pdHkiLCJ3aiIsImNrIiwiWiIsInhqIiwieWoiLCJ6aiIsIkFqIiwiQmoiLCJDaiIsIkRqIiwiRWoiLCJGaiIsIkdqIiwiSGoiLCJJaiIsIkpqIiwiU2MiLCJLaiIsIkxqIiwiTWoiLCJjYWxsYmFja05vZGUiLCJleHBpcmF0aW9uVGltZXMiLCJjYWxsYmFja1ByaW9yaXR5IiwiVGMiLCJOaiIsIk9qIiwiUGoiLCJRaiIsIlJqIiwiU2oiLCJUaiIsImZpbmlzaGVkV29yayIsImZpbmlzaGVkTGFuZXMiLCJVaiIsInRpbWVvdXRIYW5kbGUiLCJwaW5nQ2FjaGUiLCJZaiIsIlpqIiwidmEiLCJhayIsImJrIiwiZGsiLCJyYW5nZUNvdW50IiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsImVrIiwiZXh0ZW5kIiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwic2V0RW5kIiwibGVmdCIsInNjcm9sbExlZnQiLCJ0b3AiLCJzY3JvbGxUb3AiLCJvbkNvbW1pdEZpYmVyUm9vdCIsImZrIiwiZ2siLCJpayIsImlzUmVhY3RDb21wb25lbnQiLCJwZW5kaW5nQ2hpbGRyZW4iLCJqayIsIm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGEiLCJsayIsIm1rIiwibmsiLCJxayIsImh5ZHJhdGlvbk9wdGlvbnMiLCJtdXRhYmxlU291cmNlcyIsIl9pbnRlcm5hbFJvb3QiLCJyayIsInRrIiwiaGFzQXR0cmlidXRlIiwic2siLCJYaiIsImhrIiwiX2NhbGN1bGF0ZUNoYW5nZWRCaXRzIiwidW5zdGFibGVfb2JzZXJ2ZWRCaXRzIiwidW5tb3VudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JtIiwiVmoiLCJ3ayIsImZpbmRGaWJlckJ5SG9zdEluc3RhbmNlIiwiYnVuZGxlVHlwZSIsInZlcnNpb24iLCJyZW5kZXJlclBhY2thZ2VOYW1lIiwieGsiLCJyZW5kZXJlckNvbmZpZyIsIm92ZXJyaWRlSG9va1N0YXRlIiwib3ZlcnJpZGVIb29rU3RhdGVEZWxldGVQYXRoIiwib3ZlcnJpZGVIb29rU3RhdGVSZW5hbWVQYXRoIiwib3ZlcnJpZGVQcm9wcyIsIm92ZXJyaWRlUHJvcHNEZWxldGVQYXRoIiwib3ZlcnJpZGVQcm9wc1JlbmFtZVBhdGgiLCJzZXRTdXNwZW5zZUhhbmRsZXIiLCJzY2hlZHVsZVVwZGF0ZSIsImN1cnJlbnREaXNwYXRjaGVyUmVmIiwiZmluZEhvc3RJbnN0YW5jZUJ5RmliZXIiLCJiYyIsImNjIiwiZmluZEhvc3RJbnN0YW5jZXNGb3JSZWZyZXNoIiwic2NoZWR1bGVSZWZyZXNoIiwic2NoZWR1bGVSb290Iiwic2V0UmVmcmVzaEhhbmRsZXIiLCJnZXRDdXJyZW50RmliZXIiLCJfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18iLCJ5ayIsImlzRGlzYWJsZWQiLCJzdXBwb3J0c0ZpYmVyIiwiaW5qZWN0IiwiY2hlY2tEQ0UiLCJpc2ZmIiwiYWRkRXZlbnQiLCJtZXRob2QiLCJnZXRNb2RzIiwibW9kaWZpZXIiLCJtb2RzIiwiZ2V0S2V5cyIsIl9rZXlNYXAiLCJiYWNrc3BhY2UiLCJ0YWIiLCJjbGVhciIsImVudGVyIiwiZXNjIiwiZXNjYXBlIiwic3BhY2UiLCJyaWdodCIsImRvd24iLCJkZWwiLCJpbnMiLCJpbnNlcnQiLCJob21lIiwicGFnZXVwIiwicGFnZWRvd24iLCJjYXBzbG9jayIsIiciLCJfbW9kaWZpZXIiLCJhbHQiLCJvcHRpb24iLCJjdHJsIiwiY29udHJvbCIsImNtZCIsImNvbW1hbmQiLCJtb2RpZmllck1hcCIsIjkxIiwiX21vZHMiLCJfaGFuZGxlcnMiLCJfZG93bktleXMiLCJfc2NvcGUiLCJlbGVtZW50SGFzQmluZEV2ZW50IiwiY2hhckNvZGVBdCIsInNldFNjb3BlIiwic2NvcGUiLCJnZXRTY29wZSIsImVhY2hVbmJpbmQiLCJfcmVmJHNwbGl0S2V5Iiwic3BsaXRLZXkiLCJvcmlnaW5LZXkiLCJ1bmJpbmRLZXlzIiwibGFzdEtleSIsInJlY29yZCIsImExIiwiYTIiLCJhcnIxIiwiaXNJbmRleCIsImNvbXBhcmVBcnJheSIsImV2ZW50SGFuZGxlciIsImhhbmRsZXIiLCJtb2RpZmllcnNNYXRjaCIsInNob3J0Y3V0IiwiYXN0ZXJpc2siLCJrZXlOYW1lIiwia2V5TnVtIiwia2V5ZG93biIsImtleXVwIiwia2V5U2hvcnRjdXQiLCJfZG93bktleXNDdXJyZW50Iiwic29ydCIsImlzRWxlbWVudEJpbmQiLCJjbGVhck1vZGlmaWVyIiwiX2FwaSIsImRlbGV0ZVNjb3BlIiwibmV3U2NvcGUiLCJoYW5kbGVycyIsImdldFByZXNzZWRLZXlDb2RlcyIsImlzUHJlc3NlZCIsImZsYWciLCJpc0NvbnRlbnRFZGl0YWJsZSIsInJlYWRPbmx5IiwidW5iaW5kIiwia2V5c0luZm8iLCJpbmZvIiwiX2hvdGtleXMiLCJob3RrZXlzIiwibm9Db25mbGljdCIsImRlZXAiLCJ0YWdGaWx0ZXIiLCJlbmFibGVPblRhZ3MiLCJ0YXJnZXRUYWdOYW1lIiwiQm9vbGVhbiIsImluY2x1ZGVzIiwidXNlSG90a2V5cyIsIl9yZWYyIiwibWVtb2lzZWRDYWxsYmFjayIsImtleWJvYXJkRXZlbnQiLCJob3RrZXlzRXZlbnQiLCJBc3luY01vZGUiLCJDb25jdXJyZW50TW9kZSIsIkNvbnRleHRDb25zdW1lciIsIkNvbnRleHRQcm92aWRlciIsIkVsZW1lbnQiLCJGcmFnbWVudCIsIkxhenkiLCJQb3J0YWwiLCJQcm9maWxlciIsIlN0cmljdE1vZGUiLCJTdXNwZW5zZSIsImlzQXN5bmNNb2RlIiwiaXNDb25jdXJyZW50TW9kZSIsImlzQ29udGV4dENvbnN1bWVyIiwiaXNDb250ZXh0UHJvdmlkZXIiLCJpc0VsZW1lbnQiLCJpc0ZvcndhcmRSZWYiLCJpc0ZyYWdtZW50IiwiaXNMYXp5IiwiaXNQb3J0YWwiLCJpc1Byb2ZpbGVyIiwiaXNTdHJpY3RNb2RlIiwiaXNTdXNwZW5zZSIsImlzVmFsaWRFbGVtZW50VHlwZSIsInR5cGVPZiIsIkhhc2hSb3V0ZXIiLCJfUmVhY3QkQ29tcG9uZW50IiwiX3RoaXMiLCJyZXNvbHZlVG9Mb2NhdGlvbiIsIm5vcm1hbGl6ZVRvTG9jYXRpb24iLCJmb3J3YXJkUmVmU2hpbSIsImZvcndhcmRSZWYiLCJMaW5rQW5jaG9yIiwiZm9yd2FyZGVkUmVmIiwiaW5uZXJSZWYiLCJuYXZpZ2F0ZSIsIl9vbkNsaWNrIiwicmVzdCIsImV4IiwiaXNNb2RpZmllZEV2ZW50IiwiTGluayIsIl9yZWYyJGNvbXBvbmVudCIsImZvcndhcmRSZWZTaGltJDEiLCJmb3J3YXJkUmVmJDEiLCJfcmVmJGFyaWFDdXJyZW50IiwiYXJpYUN1cnJlbnQiLCJfcmVmJGFjdGl2ZUNsYXNzTmFtZSIsImFjdGl2ZUNsYXNzTmFtZSIsImFjdGl2ZVN0eWxlIiwiY2xhc3NOYW1lUHJvcCIsImNsYXNzTmFtZSIsImlzQWN0aXZlUHJvcCIsImxvY2F0aW9uUHJvcCIsInNlbnNpdGl2ZSIsInN0cmljdCIsInN0eWxlUHJvcCIsImVzY2FwZWRQYXRoIiwiY2xhc3NuYW1lcyIsImpvaW5DbGFzc25hbWVzIiwiTUFYX1NJR05FRF8zMV9CSVRfSU5UIiwiY29tbW9uanNHbG9iYWwiLCJnbG9iYWxUaGlzIiwiY3JlYXRlRXZlbnRFbWl0dGVyIiwib24iLCJvZmYiLCJuZXdWYWx1ZSIsImNoYW5nZWRCaXRzIiwiY2FsY3VsYXRlQ2hhbmdlZEJpdHMiLCJfUHJvdmlkZXIkY2hpbGRDb250ZXgiLCJfQ29uc3VtZXIkY29udGV4dFR5cGUiLCJjb250ZXh0UHJvcCIsIlByb3ZpZGVyIiwiX0NvbXBvbmVudCIsImVtaXR0ZXIiLCJfcHJvdG8iLCJuZXh0UHJvcHMiLCJvbGRWYWx1ZSIsIkNvbnN1bWVyIiwiX0NvbXBvbmVudDIiLCJfdGhpczIiLCJvblVwZGF0ZSIsIl9wcm90bzIiLCJoaXN0b3J5Q29udGV4dCIsImNyZWF0ZU5hbWVkQ29udGV4dCIsImNyZWF0ZU5hbWVkQ29udGV4dCQxIiwiUm91dGVyIiwiX2lzTW91bnRlZCIsIl9wZW5kaW5nTG9jYXRpb24iLCJzdGF0aWNDb250ZXh0IiwiY29tcHV0ZVJvb3RNYXRjaCIsInBhcmFtcyIsImlzRXhhY3QiLCJjYWNoZSQxIiwiY2FjaGVDb3VudCQxIiwibWF0Y2hQYXRoIiwiX29wdGlvbnMiLCJfb3B0aW9ucyRleGFjdCIsIl9vcHRpb25zJHN0cmljdCIsIl9vcHRpb25zJHNlbnNpdGl2ZSIsInJlZHVjZSIsIm1hdGNoZWQiLCJfY29tcGlsZVBhdGgiLCJjYWNoZUtleSIsInBhdGhDYWNoZSIsInJlZ2V4cCIsImNvbXBpbGVQYXRoJDEiLCJleGVjIiwidmFsdWVzIiwibWVtbyIsIlJvdXRlIiwiY29udGV4dCQxIiwiY29tcHV0ZWRNYXRjaCIsIl90aGlzJHByb3BzIiwiU3dpdGNoIiwidXNlSGlzdG9yeSIsImlzYXJyYXkiLCJwYXRoVG9SZWdleHAiLCJSZWdFeHAiLCJncm91cHMiLCJkZWxpbWl0ZXIiLCJvcHRpb25hbCIsInBhcnRpYWwiLCJwYXR0ZXJuIiwiYXR0YWNoS2V5cyIsInJlZ2V4cFRvUmVnZXhwIiwicGFydHMiLCJhcnJheVRvUmVnZXhwIiwidG9rZW5zVG9SZWdFeHAiLCJwYXJzZSIsInN0cmluZ1RvUmVnZXhwIiwiY29tcGlsZSIsInN0ciIsInRva2Vuc1RvRnVuY3Rpb24iLCJQQVRIX1JFR0VYUCIsInJlcyIsInRva2VucyIsImRlZmF1bHREZWxpbWl0ZXIiLCJlc2NhcGVkIiwiZ3JvdXAiLCJlc2NhcGVHcm91cCIsImVzY2FwZVN0cmluZyIsImVuY29kZVVSSUNvbXBvbmVudFByZXR0eSIsImVuY29kZVVSSSIsIm1hdGNoZXMiLCJvYmoiLCJvcHRzIiwiZW5jb2RlIiwicHJldHR5IiwidG9rZW4iLCJzZWdtZW50IiwiaiIsInJvdXRlIiwiZW5kc1dpdGhEZWxpbWl0ZXIiLCJmb3JjZVVwZGF0ZSIsIl9fc2VsZiIsIl9fc291cmNlIiwiX3N0YXR1cyIsIl9yZXN1bHQiLCJJc1NvbWVSZW5kZXJlckFjdGluZyIsImNvdW50IiwidG9BcnJheSIsIm9ubHkiLCJQdXJlQ29tcG9uZW50IiwiY2xvbmVFbGVtZW50IiwiY3JlYXRlQ29udGV4dCIsIl9jdXJyZW50VmFsdWUyIiwiX3RocmVhZENvdW50IiwiY3JlYXRlRmFjdG9yeSIsImNyZWF0ZVJlZiIsImlzVmFsaWRFbGVtZW50IiwibGF6eSIsInBlcmZvcm1hbmNlIiwiTWVzc2FnZUNoYW5uZWwiLCJ1bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZSIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiZmxvb3IiLCJwb3J0MiIsInBvcnQxIiwib25tZXNzYWdlIiwicG9zdE1lc3NhZ2UiLCJzb3J0SW5kZXgiLCJzdGFydFRpbWUiLCJleHBpcmF0aW9uVGltZSIsInByaW9yaXR5TGV2ZWwiLCJ1bnN0YWJsZV9Qcm9maWxpbmciLCJ1bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbiIsInVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlIiwidW5zdGFibGVfbmV4dCIsInVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uIiwiZGVsYXkiLCJ1bnN0YWJsZV93cmFwQ2FsbGJhY2siLCJvYmpBIiwib2JqQiIsImNvbXBhcmVDb250ZXh0IiwicmV0Iiwia2V5c0EiLCJrZXlzQiIsImJIYXNPd25Qcm9wZXJ0eSIsImlkeCIsInZhbHVlQSIsInZhbHVlQiIsImdldFRhcmdldCIsInN0eWxlVGFyZ2V0IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsInN0eWxlc0luRG9tIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwibW9kdWxlc1RvRG9tIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiY3NzIiwibWVkaWEiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwiYWRkU3R5bGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJhdHRyaWJ1dGVzIiwibm9uY2UiLCJ0ZXh0U3RvcmUiLCJyZXBsYWNlVGV4dCIsInJlcGxhY2VtZW50IiwiYXBwbHlUb1NpbmdsZXRvblRhZyIsInJlbW92ZSIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiY3NzTm9kZSIsImNoaWxkTm9kZXMiLCJhcHBseVRvVGFnIiwic2luZ2xldG9uIiwic2luZ2xldG9uQ291bnRlciIsInVwZGF0ZSIsInN0eWxlSW5kZXgiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJuZXdPYmoiLCJhbGwiLCJhdG9iIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pbmRleCIsInVzZSIsIm1zR3JpZFJvdyIsIm1zR3JpZFJvd1NwYW4iLCJtc0dyaWRDb2x1bW4iLCJtc0dyaWRDb2x1bW5TcGFuIiwiV2Via2l0TGluZUNsYW1wIiwicmVhY3RQcm9wc1JlZ2V4IiwiY2FjaGUiLCJhcmciLCJwcm9wIiwiZnJlZXplIiwiXyIsInN0eWxlZENvbXBvbmVudElkIiwicHJvY2VzcyIsImVudiIsIlJFQUNUX0FQUF9TQ19BVFRSIiwiU0NfQVRUUiIsIlNDX0RJU0FCTEVfU1BFRURZIiwiUkVBQ1RfQVBQX1NDX0RJU0FCTEVfU1BFRURZIiwiZ3JvdXBTaXplcyIsIlVpbnQzMkFycmF5IiwiaW5kZXhPZkdyb3VwIiwiaW5zZXJ0UnVsZXMiLCJpbnNlcnRSdWxlIiwiY2xlYXJHcm91cCIsImRlbGV0ZVJ1bGUiLCJnZXRHcm91cCIsImdldFJ1bGUiLCJyZWdpc3Rlck5hbWUiLCJwYXJzZUludCIsImdldFRhZyIsIiQiLCJzaGVldCIsInN0eWxlU2hlZXRzIiwib3duZXJOb2RlIiwiY3NzUnVsZXMiLCJub2RlcyIsInJ1bGVzIiwiaXNTZXJ2ZXIiLCJ1c2VDU1NPTUluamVjdGlvbiIsImdzIiwibmFtZXMiLCJyZWdpc3RlcklkIiwicmVjb25zdHJ1Y3RXaXRoT3B0aW9ucyIsImFsbG9jYXRlR1NJbnN0YW5jZSIsImhhc05hbWVGb3JJZCIsImNsZWFyTmFtZXMiLCJjbGVhclJ1bGVzIiwiY2xlYXJUYWciLCJhYnMiLCJzdGF0aWNSdWxlc0lkIiwiaXNTdGF0aWMiLCJjb21wb25lbnRJZCIsImJhc2VIYXNoIiwiYmFzZVN0eWxlIiwiZ2VuZXJhdGVBbmRJbmplY3RTdHlsZXMiLCJwbHVnaW5zIiwic3R5bGlzUGx1Z2lucyIsImRpc2FibGVDU1NPTUluamVjdGlvbiIsImRpc2FibGVWZW5kb3JQcmVmaXhlcyIsImdldE5hbWUiLCJ0aGVtZSIsImF0dHJzIiwicGFyZW50Q29tcG9uZW50SWQiLCJzaG91bGRGb3J3YXJkUHJvcCIsImNvbXBvbmVudFN0eWxlIiwiZm9sZGVkQ29tcG9uZW50SWRzIiwiJGFzIiwiYXMiLCJ3aXRoQ29tcG9uZW50IiwiX2ZvbGRlZERlZmF1bHRQcm9wcyIsIndpdGhDb25maWciLCJjcmVhdGVTdHlsZXMiLCJyZW1vdmVTdHlsZXMiLCJyZW5kZXJTdHlsZXMiLCJfZW1pdFNoZWV0Q1NTIiwiZ2V0U3R5bGVUYWdzIiwic2VhbGVkIiwiZ2V0U3R5bGVFbGVtZW50Iiwic2VhbCIsImNvbGxlY3RTdHlsZXMiLCJpbnRlcmxlYXZlV2l0aE5vZGVTdHJlYW0iLCJjb25kaXRpb24iXSwibWFwcGluZ3MiOiI7MkhBQWUsU0FBU0EsSUFldEIsT0FkQUEsRUFBV0MsT0FBT0MsUUFBVSxTQUFVQyxHQUNwQyxJQUFLLElBQUlDLEVBQUksRUFBR0EsRUFBSUMsVUFBVUMsT0FBUUYsSUFBSyxDQUN6QyxJQUFJRyxFQUFTRixVQUFVRCxHQUV2QixJQUFLLElBQUlJLEtBQU9ELEVBQ1ZOLE9BQU9RLFVBQVVDLGVBQWVDLEtBQUtKLEVBQVFDLEtBQy9DTCxFQUFPSyxHQUFPRCxFQUFPQyxJQUszQixPQUFPTCxJQUdPUyxNQUFNQyxLQUFNUixXLDhDQ2ZmLFNBQVNTLEVBQWVDLEVBQVVDLEdBQy9DRCxFQUFTTixVQUFZUixPQUFPZ0IsT0FBT0QsRUFBV1AsV0FDOUNNLEVBQVNOLFVBQVVTLFlBQWNILEVBQ2pDQSxFQUFTSSxVQUFZSCxFLDhDQ0hSLFNBQVNJLEVBQThCYixFQUFRYyxHQUM1RCxHQUFjLE1BQVZkLEVBQWdCLE1BQU8sR0FDM0IsSUFFSUMsRUFBS0osRUFGTEQsRUFBUyxHQUNUbUIsRUFBYXJCLE9BQU9zQixLQUFLaEIsR0FHN0IsSUFBS0gsRUFBSSxFQUFHQSxFQUFJa0IsRUFBV2hCLE9BQVFGLElBQ2pDSSxFQUFNYyxFQUFXbEIsR0FDYmlCLEVBQVNHLFFBQVFoQixJQUFRLElBQzdCTCxFQUFPSyxHQUFPRCxFQUFPQyxJQUd2QixPQUFPTCxFLDBSQ1FMc0IsRUFBMEIsSUFBNEIsS0FDdERDLEVBQXFDLElBQWdDLEdBQ3JFQyxFQUFxQyxJQUFnQyxHQUNyRUMsRUFBcUMsSUFBZ0MsR0FDckVDLEVBQXFDLElBQWdDLEdBQ3JFQyxFQUFx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Qix5QkFBeUIsU0FBU3R0RCxHQUFHLE9BQU95aUQsRUFBRSxJQUFvMEMsYSw2Q0NZbGp6QixRQVZBLFNBQW1COEssRUFBV2hyRCxHQUMxQixJQUFJZ3JELEVBSUEsTUFBTSxJQUFJdmdELE1BTkwiLCJmaWxlIjoidmVuZG9ycy5kODc4MDAyNTA5YWUwNjk5MGI3Zi5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9leHRlbmRzKCkge1xuICBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkge1xuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldO1xuXG4gICAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7XG4gICAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXQ7XG4gIH07XG5cbiAgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2luaGVyaXRzTG9vc2Uoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzLnByb3RvdHlwZSk7XG4gIHN1YkNsYXNzLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IHN1YkNsYXNzO1xuICBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHNvdXJjZSwgZXhjbHVkZWQpIHtcbiAgaWYgKHNvdXJjZSA9PSBudWxsKSByZXR1cm4ge307XG4gIHZhciB0YXJnZXQgPSB7fTtcbiAgdmFyIHNvdXJjZUtleXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpO1xuICB2YXIga2V5LCBpO1xuXG4gIGZvciAoaSA9IDA7IGkgPCBzb3VyY2VLZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAga2V5ID0gc291cmNlS2V5c1tpXTtcbiAgICBpZiAoZXhjbHVkZWQuaW5kZXhPZihrZXkpID49IDApIGNvbnRpbnVlO1xuICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0O1xufSIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9jc3NXaXRoTWFwcGluZ1RvU3RyaW5nLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fIGZyb20gXCIuLi9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyBmcm9tIFwiLi9maWxlcy9vcGVuLXNhbnMtY3lyaWxsaWMtZXh0LTQwMC1pdGFsaWMud29mZjJcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMV9fXyBmcm9tIFwiLi9maWxlcy9vcGVuLXNhbnMtYWxsLTQwMC1pdGFsaWMud29mZlwiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yX19fIGZyb20gXCIuL2ZpbGVzL29wZW4tc2Fucy1jeXJpbGxpYy00MDAtaXRhbGljLndvZmYyXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzNfX18gZnJvbSBcIi4vZmlsZXMvb3Blbi1zYW5zLWdyZWVrLWV4dC00MDAtaXRhbGljLndvZmYyXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzRfX18gZnJvbSBcIi4vZmlsZXMvb3Blbi1zYW5zLWdyZWVrLTQwMC1pdGFsaWMud29mZjJcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNV9fXyBmcm9tIFwiLi9maWxlcy9vcGVuLXNhbnMtdmlldG5hbWVzZS00MDAtaXRhbGljLndvZmYyXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzZfX18gZnJvbSBcIi4vZmlsZXMvb3Blbi1zYW5zLWxhdGluLWV4dC00MDAtaXRhbGljLndvZmYyXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzdfX18gZnJvbSBcIi4vZmlsZXMvb3Blbi1zYW5zLWxhdGluLTQwMC1pdGFsaWMud29mZjJcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfOF9fXyBmcm9tIFwiLi9maWxlcy9vcGVuLXNhbnMtY3lyaWxsaWMtZXh0LTQwMC1ub3JtYWwud29mZjJcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfOV9fXyBmcm9tIFwiLi9maWxlcy9vcGVuLXNhbnMtYWxsLTQwMC1ub3JtYWwud29mZlwiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xMF9fXyBmcm9tIFwiLi9maWxlcy9vcGVuLXNhbnMtY3lyaWxsaWMtNDAwLW5vcm1hbC53b2ZmMlwiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xMV9fXyBmcm9tIFwiLi9maWxlcy9vcGVuLXNhbnMtZ3JlZWstZXh0LTQwMC1ub3JtYWwud29mZjJcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTJfX18gZnJvbSBcIi4vZmlsZXMvb3Blbi1zYW5zLWdyZWVrLTQwMC1ub3JtYWwud29mZjJcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTNfX18gZnJvbSBcIi4vZmlsZXMvb3Blbi1zYW5zLXZpZXRuYW1lc2UtNDAwLW5vcm1hbC53b2ZmMlwiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xNF9fXyBmcm9tIFwiLi9maWxlcy9vcGVuLXNhbnMtbGF0aW4tZXh0LTQwMC1ub3JtYWwud29mZjJcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTVfX18gZnJvbSBcIi4vZmlsZXMvb3Blbi1zYW5zLWxhdGluLTQwMC1ub3JtYWwud29mZjJcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMV9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzFfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzJfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfM19fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzRfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzVfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF81X19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF82X19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNl9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfN19fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzdfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzhfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF84X19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF85X19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfOV9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTBfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xMF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTFfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xMV9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTJfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xMl9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTNfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xM19fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTRfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xNF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTVfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xNV9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIvKiBvcGVuLXNhbnMtY3lyaWxsaWMtZXh0LTQwMC1pdGFsaWMqL1xcbkBmb250LWZhY2Uge1xcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xcbiAgZm9udC1zdHlsZTogaXRhbGljO1xcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xcbiAgZm9udC13ZWlnaHQ6IDQwMDtcXG4gIHNyYzogdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyArIFwiKSBmb3JtYXQoJ3dvZmYyJyksIHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzFfX18gKyBcIikgZm9ybWF0KCd3b2ZmJyk7XFxuICB1bmljb2RlLXJhbmdlOiBVKzA0NjAtMDUyRiwgVSsxQzgwLTFDODgsIFUrMjBCNCwgVSsyREUwLTJERkYsIFUrQTY0MC1BNjlGLCBVK0ZFMkUtRkUyRjtcXG59XFxuLyogb3Blbi1zYW5zLWN5cmlsbGljLTQwMC1pdGFsaWMqL1xcbkBmb250LWZhY2Uge1xcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xcbiAgZm9udC1zdHlsZTogaXRhbGljO1xcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xcbiAgZm9udC13ZWlnaHQ6IDQwMDtcXG4gIHNyYzogdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMl9fXyArIFwiKSBmb3JtYXQoJ3dvZmYyJyksIHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzFfX18gKyBcIikgZm9ybWF0KCd3b2ZmJyk7XFxuICB1bmljb2RlLXJhbmdlOiBVKzA0MDAtMDQ1RiwgVSswNDkwLTA0OTEsIFUrMDRCMC0wNEIxLCBVKzIxMTY7XFxufVxcbi8qIG9wZW4tc2Fucy1ncmVlay1leHQtNDAwLWl0YWxpYyovXFxuQGZvbnQtZmFjZSB7XFxuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XFxuICBmb250LXN0eWxlOiBpdGFsaWM7XFxuICBmb250LWRpc3BsYXk6IHN3YXA7XFxuICBmb250LXdlaWdodDogNDAwO1xcbiAgc3JjOiB1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zX19fICsgXCIpIGZvcm1hdCgnd29mZjInKSwgdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMV9fXyArIFwiKSBmb3JtYXQoJ3dvZmYnKTtcXG4gIHVuaWNvZGUtcmFuZ2U6IFUrMUYwMC0xRkZGO1xcbn1cXG4vKiBvcGVuLXNhbnMtZ3JlZWstNDAwLWl0YWxpYyovXFxuQGZvbnQtZmFjZSB7XFxuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XFxuICBmb250LXN0eWxlOiBpdGFsaWM7XFxuICBmb250LWRpc3BsYXk6IHN3YXA7XFxuICBmb250LXdlaWdodDogNDAwO1xcbiAgc3JjOiB1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF80X19fICsgXCIpIGZvcm1hdCgnd29mZjInKSwgdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMV9fXyArIFwiKSBmb3JtYXQoJ3dvZmYnKTtcXG4gIHVuaWNvZGUtcmFuZ2U6IFUrMDM3MC0wM0ZGO1xcbn1cXG4vKiBvcGVuLXNhbnMtdmlldG5hbWVzZS00MDAtaXRhbGljKi9cXG5AZm9udC1mYWNlIHtcXG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcXG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcXG4gIGZvbnQtZGlzcGxheTogc3dhcDtcXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XFxuICBzcmM6IHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzVfX18gKyBcIikgZm9ybWF0KCd3b2ZmMicpLCB1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xX19fICsgXCIpIGZvcm1hdCgnd29mZicpO1xcbiAgdW5pY29kZS1yYW5nZTogVSswMTAyLTAxMDMsIFUrMDExMC0wMTExLCBVKzAxMjgtMDEyOSwgVSswMTY4LTAxNjksIFUrMDFBMC0wMUExLCBVKzAxQUYtMDFCMCwgVSsxRUEwLTFFRjksIFUrMjBBQjtcXG59XFxuLyogb3Blbi1zYW5zLWxhdGluLWV4dC00MDAtaXRhbGljKi9cXG5AZm9udC1mYWNlIHtcXG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcXG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcXG4gIGZvbnQtZGlzcGxheTogc3dhcDtcXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XFxuICBzcmM6IHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzZfX18gKyBcIikgZm9ybWF0KCd3b2ZmMicpLCB1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xX19fICsgXCIpIGZvcm1hdCgnd29mZicpO1xcbiAgdW5pY29kZS1yYW5nZTogVSswMTAwLTAyNEYsIFUrMDI1OSwgVSsxRTAwLTFFRkYsIFUrMjAyMCwgVSsyMEEwLTIwQUIsIFUrMjBBRC0yMENGLCBVKzIxMTMsIFUrMkM2MC0yQzdGLCBVK0E3MjAtQTdGRjtcXG59XFxuLyogb3Blbi1zYW5zLWxhdGluLTQwMC1pdGFsaWMqL1xcbkBmb250LWZhY2Uge1xcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xcbiAgZm9udC1zdHlsZTogaXRhbGljO1xcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xcbiAgZm9udC13ZWlnaHQ6IDQwMDtcXG4gIHNyYzogdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfN19fXyArIFwiKSBmb3JtYXQoJ3dvZmYyJyksIHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzFfX18gKyBcIikgZm9ybWF0KCd3b2ZmJyk7XFxuICB1bmljb2RlLXJhbmdlOiBVKzAwMDAtMDBGRiwgVSswMTMxLCBVKzAxNTItMDE1MywgVSswMkJCLTAyQkMsIFUrMDJDNiwgVSswMkRBLCBVKzAyREMsIFUrMjAwMC0yMDZGLCBVKzIwNzQsIFUrMjBBQywgVSsyMTIyLCBVKzIxOTEsIFUrMjE5MywgVSsyMjEyLCBVKzIyMTUsIFUrRkVGRiwgVStGRkZEO1xcbn1cXG4vKiBvcGVuLXNhbnMtY3lyaWxsaWMtZXh0LTQwMC1ub3JtYWwqL1xcbkBmb250LWZhY2Uge1xcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xcbiAgZm9udC13ZWlnaHQ6IDQwMDtcXG4gIHNyYzogdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfOF9fXyArIFwiKSBmb3JtYXQoJ3dvZmYyJyksIHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzlfX18gKyBcIikgZm9ybWF0KCd3b2ZmJyk7XFxuICB1bmljb2RlLXJhbmdlOiBVKzA0NjAtMDUyRiwgVSsxQzgwLTFDODgsIFUrMjBCNCwgVSsyREUwLTJERkYsIFUrQTY0MC1BNjlGLCBVK0ZFMkUtRkUyRjtcXG59XFxuLyogb3Blbi1zYW5zLWN5cmlsbGljLTQwMC1ub3JtYWwqL1xcbkBmb250LWZhY2Uge1xcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xcbiAgZm9udC13ZWlnaHQ6IDQwMDtcXG4gIHNyYzogdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTBfX18gKyBcIikgZm9ybWF0KCd3b2ZmMicpLCB1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF85X19fICsgXCIpIGZvcm1hdCgnd29mZicpO1xcbiAgdW5pY29kZS1yYW5nZTogVSswNDAwLTA0NUYsIFUrMDQ5MC0wNDkxLCBVKzA0QjAtMDRCMSwgVSsyMTE2O1xcbn1cXG4vKiBvcGVuLXNhbnMtZ3JlZWstZXh0LTQwMC1ub3JtYWwqL1xcbkBmb250LWZhY2Uge1xcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xcbiAgZm9udC13ZWlnaHQ6IDQwMDtcXG4gIHNyYzogdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMTFfX18gKyBcIikgZm9ybWF0KCd3b2ZmMicpLCB1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF85X19fICsgXCIpIGZvcm1hdCgnd29mZicpO1xcbiAgdW5pY29kZS1yYW5nZTogVSsxRjAwLTFGRkY7XFxufVxcbi8qIG9wZW4tc2Fucy1ncmVlay00MDAtbm9ybWFsKi9cXG5AZm9udC1mYWNlIHtcXG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcXG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcXG4gIGZvbnQtZGlzcGxheTogc3dhcDtcXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XFxuICBzcmM6IHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzEyX19fICsgXCIpIGZvcm1hdCgnd29mZjInKSwgdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfOV9fXyArIFwiKSBmb3JtYXQoJ3dvZmYnKTtcXG4gIHVuaWNvZGUtcmFuZ2U6IFUrMDM3MC0wM0ZGO1xcbn1cXG4vKiBvcGVuLXNhbnMtdmlldG5hbWVzZS00MDAtbm9ybWFsKi9cXG5AZm9udC1mYWNlIHtcXG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcXG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcXG4gIGZvbnQtZGlzcGxheTogc3dhcDtcXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XFxuICBzcmM6IHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzEzX19fICsgXCIpIGZvcm1hdCgnd29mZjInKSwgdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfOV9fXyArIFwiKSBmb3JtYXQoJ3dvZmYnKTtcXG4gIHVuaWNvZGUtcmFuZ2U6IFUrMDEwMi0wMTAzLCBVKzAxMTAtMDExMSwgVSswMTI4LTAxMjksIFUrMDE2OC0wMTY5LCBVKzAxQTAtMDFBMSwgVSswMUFGLTAxQjAsIFUrMUVBMC0xRUY5LCBVKzIwQUI7XFxufVxcbi8qIG9wZW4tc2Fucy1sYXRpbi1leHQtNDAwLW5vcm1hbCovXFxuQGZvbnQtZmFjZSB7XFxuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XFxuICBmb250LXN0eWxlOiBub3JtYWw7XFxuICBmb250LWRpc3BsYXk6IHN3YXA7XFxuICBmb250LXdlaWdodDogNDAwO1xcbiAgc3JjOiB1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xNF9fXyArIFwiKSBmb3JtYXQoJ3dvZmYyJyksIHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzlfX18gKyBcIikgZm9ybWF0KCd3b2ZmJyk7XFxuICB1bmljb2RlLXJhbmdlOiBVKzAxMDAtMDI0RiwgVSswMjU5LCBVKzFFMDAtMUVGRiwgVSsyMDIwLCBVKzIwQTAtMjBBQiwgVSsyMEFELTIwQ0YsIFUrMjExMywgVSsyQzYwLTJDN0YsIFUrQTcyMC1BN0ZGO1xcbn1cXG4vKiBvcGVuLXNhbnMtbGF0aW4tNDAwLW5vcm1hbCovXFxuQGZvbnQtZmFjZSB7XFxuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XFxuICBmb250LXN0eWxlOiBub3JtYWw7XFxuICBmb250LWRpc3BsYXk6IHN3YXA7XFxuICBmb250LXdlaWdodDogNDAwO1xcbiAgc3JjOiB1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xNV9fXyArIFwiKSBmb3JtYXQoJ3dvZmYyJyksIHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzlfX18gKyBcIikgZm9ybWF0KCd3b2ZmJyk7XFxuICB1bmljb2RlLXJhbmdlOiBVKzAwMDAtMDBGRiwgVSswMTMxLCBVKzAxNTItMDE1MywgVSswMkJCLTAyQkMsIFUrMDJDNiwgVSswMkRBLCBVKzAyREMsIFUrMjAwMC0yMDZGLCBVKzIwNzQsIFUrMjBBQywgVSsyMTIyLCBVKzIxOTEsIFUrMjE5MywgVSsyMjEyLCBVKzIyMTUsIFUrRkVGRiwgVStGRkZEO1xcbn1cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9ub2RlX21vZHVsZXMvZm9udHNvdXJjZS1vcGVuLXNhbnMvaW5kZXguY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBLHFDQUFxQztBQUNyQztFQUNFLHdCQUF3QjtFQUN4QixrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixvSEFBd0k7RUFDeEksc0ZBQXNGO0FBQ3hGO0FBQ0EsaUNBQWlDO0FBQ2pDO0VBQ0Usd0JBQXdCO0VBQ3hCLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLG9IQUFvSTtFQUNwSSw0REFBNEQ7QUFDOUQ7QUFDQSxrQ0FBa0M7QUFDbEM7RUFDRSx3QkFBd0I7RUFDeEIsa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsb0hBQXFJO0VBQ3JJLDBCQUEwQjtBQUM1QjtBQUNBLDhCQUE4QjtBQUM5QjtFQUNFLHdCQUF3QjtFQUN4QixrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixvSEFBaUk7RUFDakksMEJBQTBCO0FBQzVCO0FBQ0EsbUNBQW1DO0FBQ25DO0VBQ0Usd0JBQXdCO0VBQ3hCLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLG9IQUFzSTtFQUN0SSxnSEFBZ0g7QUFDbEg7QUFDQSxrQ0FBa0M7QUFDbEM7RUFDRSx3QkFBd0I7RUFDeEIsa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsb0hBQXFJO0VBQ3JJLG1IQUFtSDtBQUNySDtBQUNBLDhCQUE4QjtBQUM5QjtFQUNFLHdCQUF3QjtFQUN4QixrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixvSEFBaUk7RUFDakkseUtBQXlLO0FBQzNLO0FBQ0EscUNBQXFDO0FBQ3JDO0VBQ0Usd0JBQXdCO0VBQ3hCLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLG9IQUF3STtFQUN4SSxzRkFBc0Y7QUFDeEY7QUFDQSxpQ0FBaUM7QUFDakM7RUFDRSx3QkFBd0I7RUFDeEIsa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIscUhBQW9JO0VBQ3BJLDREQUE0RDtBQUM5RDtBQUNBLGtDQUFrQztBQUNsQztFQUNFLHdCQUF3QjtFQUN4QixrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixxSEFBcUk7RUFDckksMEJBQTBCO0FBQzVCO0FBQ0EsOEJBQThCO0FBQzlCO0VBQ0Usd0JBQXdCO0VBQ3hCLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLHFIQUFpSTtFQUNqSSwwQkFBMEI7QUFDNUI7QUFDQSxtQ0FBbUM7QUFDbkM7RUFDRSx3QkFBd0I7RUFDeEIsa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIscUhBQXNJO0VBQ3RJLGdIQUFnSDtBQUNsSDtBQUNBLGtDQUFrQztBQUNsQztFQUNFLHdCQUF3QjtFQUN4QixrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixxSEFBcUk7RUFDckksbUhBQW1IO0FBQ3JIO0FBQ0EsOEJBQThCO0FBQzlCO0VBQ0Usd0JBQXdCO0VBQ3hCLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLHFIQUFpSTtFQUNqSSx5S0FBeUs7QUFDM0tcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLyogb3Blbi1zYW5zLWN5cmlsbGljLWV4dC00MDAtaXRhbGljKi9cXG5AZm9udC1mYWNlIHtcXG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcXG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcXG4gIGZvbnQtZGlzcGxheTogc3dhcDtcXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XFxuICBzcmM6IHVybCgnLi9maWxlcy9vcGVuLXNhbnMtY3lyaWxsaWMtZXh0LTQwMC1pdGFsaWMud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksIHVybCgnLi9maWxlcy9vcGVuLXNhbnMtYWxsLTQwMC1pdGFsaWMud29mZicpIGZvcm1hdCgnd29mZicpO1xcbiAgdW5pY29kZS1yYW5nZTogVSswNDYwLTA1MkYsIFUrMUM4MC0xQzg4LCBVKzIwQjQsIFUrMkRFMC0yREZGLCBVK0E2NDAtQTY5RiwgVStGRTJFLUZFMkY7XFxufVxcbi8qIG9wZW4tc2Fucy1jeXJpbGxpYy00MDAtaXRhbGljKi9cXG5AZm9udC1mYWNlIHtcXG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcXG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcXG4gIGZvbnQtZGlzcGxheTogc3dhcDtcXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XFxuICBzcmM6IHVybCgnLi9maWxlcy9vcGVuLXNhbnMtY3lyaWxsaWMtNDAwLWl0YWxpYy53b2ZmMicpIGZvcm1hdCgnd29mZjInKSwgdXJsKCcuL2ZpbGVzL29wZW4tc2Fucy1hbGwtNDAwLWl0YWxpYy53b2ZmJykgZm9ybWF0KCd3b2ZmJyk7XFxuICB1bmljb2RlLXJhbmdlOiBVKzA0MDAtMDQ1RiwgVSswNDkwLTA0OTEsIFUrMDRCMC0wNEIxLCBVKzIxMTY7XFxufVxcbi8qIG9wZW4tc2Fucy1ncmVlay1leHQtNDAwLWl0YWxpYyovXFxuQGZvbnQtZmFjZSB7XFxuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XFxuICBmb250LXN0eWxlOiBpdGFsaWM7XFxuICBmb250LWRpc3BsYXk6IHN3YXA7XFxuICBmb250LXdlaWdodDogNDAwO1xcbiAgc3JjOiB1cmwoJy4vZmlsZXMvb3Blbi1zYW5zLWdyZWVrLWV4dC00MDAtaXRhbGljLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLCB1cmwoJy4vZmlsZXMvb3Blbi1zYW5zLWFsbC00MDAtaXRhbGljLndvZmYnKSBmb3JtYXQoJ3dvZmYnKTtcXG4gIHVuaWNvZGUtcmFuZ2U6IFUrMUYwMC0xRkZGO1xcbn1cXG4vKiBvcGVuLXNhbnMtZ3JlZWstNDAwLWl0YWxpYyovXFxuQGZvbnQtZmFjZSB7XFxuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XFxuICBmb250LXN0eWxlOiBpdGFsaWM7XFxuICBmb250LWRpc3BsYXk6IHN3YXA7XFxuICBmb250LXdlaWdodDogNDAwO1xcbiAgc3JjOiB1cmwoJy4vZmlsZXMvb3Blbi1zYW5zLWdyZWVrLTQwMC1pdGFsaWMud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksIHVybCgnLi9maWxlcy9vcGVuLXNhbnMtYWxsLTQwMC1pdGFsaWMud29mZicpIGZvcm1hdCgnd29mZicpO1xcbiAgdW5pY29kZS1yYW5nZTogVSswMzcwLTAzRkY7XFxufVxcbi8qIG9wZW4tc2Fucy12aWV0bmFtZXNlLTQwMC1pdGFsaWMqL1xcbkBmb250LWZhY2Uge1xcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xcbiAgZm9udC1zdHlsZTogaXRhbGljO1xcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xcbiAgZm9udC13ZWlnaHQ6IDQwMDtcXG4gIHNyYzogdXJsKCcuL2ZpbGVzL29wZW4tc2Fucy12aWV0bmFtZXNlLTQwMC1pdGFsaWMud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksIHVybCgnLi9maWxlcy9vcGVuLXNhbnMtYWxsLTQwMC1pdGFsaWMud29mZicpIGZvcm1hdCgnd29mZicpO1xcbiAgdW5pY29kZS1yYW5nZTogVSswMTAyLTAxMDMsIFUrMDExMC0wMTExLCBVKzAxMjgtMDEyOSwgVSswMTY4LTAxNjksIFUrMDFBMC0wMUExLCBVKzAxQUYtMDFCMCwgVSsxRUEwLTFFRjksIFUrMjBBQjtcXG59XFxuLyogb3Blbi1zYW5zLWxhdGluLWV4dC00MDAtaXRhbGljKi9cXG5AZm9udC1mYWNlIHtcXG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcXG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcXG4gIGZvbnQtZGlzcGxheTogc3dhcDtcXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XFxuICBzcmM6IHVybCgnLi9maWxlcy9vcGVuLXNhbnMtbGF0aW4tZXh0LTQwMC1pdGFsaWMud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksIHVybCgnLi9maWxlcy9vcGVuLXNhbnMtYWxsLTQwMC1pdGFsaWMud29mZicpIGZvcm1hdCgnd29mZicpO1xcbiAgdW5pY29kZS1yYW5nZTogVSswMTAwLTAyNEYsIFUrMDI1OSwgVSsxRTAwLTFFRkYsIFUrMjAyMCwgVSsyMEEwLTIwQUIsIFUrMjBBRC0yMENGLCBVKzIxMTMsIFUrMkM2MC0yQzdGLCBVK0E3MjAtQTdGRjtcXG59XFxuLyogb3Blbi1zYW5zLWxhdGluLTQwMC1pdGFsaWMqL1xcbkBmb250LWZhY2Uge1xcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xcbiAgZm9udC1zdHlsZTogaXRhbGljO1xcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xcbiAgZm9udC13ZWlnaHQ6IDQwMDtcXG4gIHNyYzogdXJsKCcuL2ZpbGVzL29wZW4tc2Fucy1sYXRpbi00MDAtaXRhbGljLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLCB1cmwoJy4vZmlsZXMvb3Blbi1zYW5zLWFsbC00MDAtaXRhbGljLndvZmYnKSBmb3JtYXQoJ3dvZmYnKTtcXG4gIHVuaWNvZGUtcmFuZ2U6IFUrMDAwMC0wMEZGLCBVKzAxMzEsIFUrMDE1Mi0wMTUzLCBVKzAyQkItMDJCQywgVSswMkM2LCBVKzAyREEsIFUrMDJEQywgVSsyMDAwLTIwNkYsIFUrMjA3NCwgVSsyMEFDLCBVKzIxMjIsIFUrMjE5MSwgVSsyMTkzLCBVKzIyMTIsIFUrMjIxNSwgVStGRUZGLCBVK0ZGRkQ7XFxufVxcbi8qIG9wZW4tc2Fucy1jeXJpbGxpYy1leHQtNDAwLW5vcm1hbCovXFxuQGZvbnQtZmFjZSB7XFxuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XFxuICBmb250LXN0eWxlOiBub3JtYWw7XFxuICBmb250LWRpc3BsYXk6IHN3YXA7XFxuICBmb250LXdlaWdodDogNDAwO1xcbiAgc3JjOiB1cmwoJy4vZmlsZXMvb3Blbi1zYW5zLWN5cmlsbGljLWV4dC00MDAtbm9ybWFsLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLCB1cmwoJy4vZmlsZXMvb3Blbi1zYW5zLWFsbC00MDAtbm9ybWFsLndvZmYnKSBmb3JtYXQoJ3dvZmYnKTtcXG4gIHVuaWNvZGUtcmFuZ2U6IFUrMDQ2MC0wNTJGLCBVKzFDODAtMUM4OCwgVSsyMEI0LCBVKzJERTAtMkRGRiwgVStBNjQwLUE2OUYsIFUrRkUyRS1GRTJGO1xcbn1cXG4vKiBvcGVuLXNhbnMtY3lyaWxsaWMtNDAwLW5vcm1hbCovXFxuQGZvbnQtZmFjZSB7XFxuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XFxuICBmb250LXN0eWxlOiBub3JtYWw7XFxuICBmb250LWRpc3BsYXk6IHN3YXA7XFxuICBmb250LXdlaWdodDogNDAwO1xcbiAgc3JjOiB1cmwoJy4vZmlsZXMvb3Blbi1zYW5zLWN5cmlsbGljLTQwMC1ub3JtYWwud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksIHVybCgnLi9maWxlcy9vcGVuLXNhbnMtYWxsLTQwMC1ub3JtYWwud29mZicpIGZvcm1hdCgnd29mZicpO1xcbiAgdW5pY29kZS1yYW5nZTogVSswNDAwLTA0NUYsIFUrMDQ5MC0wNDkxLCBVKzA0QjAtMDRCMSwgVSsyMTE2O1xcbn1cXG4vKiBvcGVuLXNhbnMtZ3JlZWstZXh0LTQwMC1ub3JtYWwqL1xcbkBmb250LWZhY2Uge1xcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xcbiAgZm9udC13ZWlnaHQ6IDQwMDtcXG4gIHNyYzogdXJsKCcuL2ZpbGVzL29wZW4tc2Fucy1ncmVlay1leHQtNDAwLW5vcm1hbC53b2ZmMicpIGZvcm1hdCgnd29mZjInKSwgdXJsKCcuL2ZpbGVzL29wZW4tc2Fucy1hbGwtNDAwLW5vcm1hbC53b2ZmJykgZm9ybWF0KCd3b2ZmJyk7XFxuICB1bmljb2RlLXJhbmdlOiBVKzFGMDAtMUZGRjtcXG59XFxuLyogb3Blbi1zYW5zLWdyZWVrLTQwMC1ub3JtYWwqL1xcbkBmb250LWZhY2Uge1xcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xcbiAgZm9udC13ZWlnaHQ6IDQwMDtcXG4gIHNyYzogdXJsKCcuL2ZpbGVzL29wZW4tc2Fucy1ncmVlay00MDAtbm9ybWFsLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLCB1cmwoJy4vZmlsZXMvb3Blbi1zYW5zLWFsbC00MDAtbm9ybWFsLndvZmYnKSBmb3JtYXQoJ3dvZmYnKTtcXG4gIHVuaWNvZGUtcmFuZ2U6IFUrMDM3MC0wM0ZGO1xcbn1cXG4vKiBvcGVuLXNhbnMtdmlldG5hbWVzZS00MDAtbm9ybWFsKi9cXG5AZm9udC1mYWNlIHtcXG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcXG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcXG4gIGZvbnQtZGlzcGxheTogc3dhcDtcXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XFxuICBzcmM6IHVybCgnLi9maWxlcy9vcGVuLXNhbnMtdmlldG5hbWVzZS00MDAtbm9ybWFsLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLCB1cmwoJy4vZmlsZXMvb3Blbi1zYW5zLWFsbC00MDAtbm9ybWFsLndvZmYnKSBmb3JtYXQoJ3dvZmYnKTtcXG4gIHVuaWNvZGUtcmFuZ2U6IFUrMDEwMi0wMTAzLCBVKzAxMTAtMDExMSwgVSswMTI4LTAxMjksIFUrMDE2OC0wMTY5LCBVKzAxQTAtMDFBMSwgVSswMUFGLTAxQjAsIFUrMUVBMC0xRUY5LCBVKzIwQUI7XFxufVxcbi8qIG9wZW4tc2Fucy1sYXRpbi1leHQtNDAwLW5vcm1hbCovXFxuQGZvbnQtZmFjZSB7XFxuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XFxuICBmb250LXN0eWxlOiBub3JtYWw7XFxuICBmb250LWRpc3BsYXk6IHN3YXA7XFxuICBmb250LXdlaWdodDogNDAwO1xcbiAgc3JjOiB1cmwoJy4vZmlsZXMvb3Blbi1zYW5zLWxhdGluLWV4dC00MDAtbm9ybWFsLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLCB1cmwoJy4vZmlsZXMvb3Blbi1zYW5zLWFsbC00MDAtbm9ybWFsLndvZmYnKSBmb3JtYXQoJ3dvZmYnKTtcXG4gIHVuaWNvZGUtcmFuZ2U6IFUrMDEwMC0wMjRGLCBVKzAyNTksIFUrMUUwMC0xRUZGLCBVKzIwMjAsIFUrMjBBMC0yMEFCLCBVKzIwQUQtMjBDRiwgVSsyMTEzLCBVKzJDNjAtMkM3RiwgVStBNzIwLUE3RkY7XFxufVxcbi8qIG9wZW4tc2Fucy1sYXRpbi00MDAtbm9ybWFsKi9cXG5AZm9udC1mYWNlIHtcXG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcXG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcXG4gIGZvbnQtZGlzcGxheTogc3dhcDtcXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XFxuICBzcmM6IHVybCgnLi9maWxlcy9vcGVuLXNhbnMtbGF0aW4tNDAwLW5vcm1hbC53b2ZmMicpIGZvcm1hdCgnd29mZjInKSwgdXJsKCcuL2ZpbGVzL29wZW4tc2Fucy1hbGwtNDAwLW5vcm1hbC53b2ZmJykgZm9ybWF0KCd3b2ZmJyk7XFxuICB1bmljb2RlLXJhbmdlOiBVKzAwMDAtMDBGRiwgVSswMTMxLCBVKzAxNTItMDE1MywgVSswMkJCLTAyQkMsIFUrMDJDNiwgVSswMkRBLCBVKzAyREMsIFUrMjAwMC0yMDZGLCBVKzIwNzQsIFUrMjBBQywgVSsyMTIyLCBVKzIxOTEsIFUrMjE5MywgVSsyMjEyLCBVKzIyMTUsIFUrRkVGRiwgVStGRkZEO1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG4vLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTsgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgcmV0dXJuIFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChjb250ZW50LCBcIn1cIik7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oJycpO1xuICB9OyAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuXG5cbiAgbGlzdC5pID0gZnVuY3Rpb24gKG1vZHVsZXMsIG1lZGlhUXVlcnksIGRlZHVwZSkge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gJ3N0cmluZycpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgJyddXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItZGVzdHJ1Y3R1cmluZ1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2ldWzBdO1xuXG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IG1vZHVsZXMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19pXSk7XG5cbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29udGludWVcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGlmIChtZWRpYVF1ZXJ5KSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYVF1ZXJ5O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMl0gPSBcIlwiLmNvbmNhdChtZWRpYVF1ZXJ5LCBcIiBhbmQgXCIpLmNvbmNhdChpdGVtWzJdKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7IHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyLCBpKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7IH1cblxuZnVuY3Rpb24gX25vbkl0ZXJhYmxlUmVzdCgpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKTsgfVxuXG5mdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7IGlmICghbykgcmV0dXJuOyBpZiAodHlwZW9mIG8gPT09IFwic3RyaW5nXCIpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7IGlmIChuID09PSBcIk9iamVjdFwiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7IGlmIChuID09PSBcIk1hcFwiIHx8IG4gPT09IFwiU2V0XCIpIHJldHVybiBBcnJheS5mcm9tKG8pOyBpZiAobiA9PT0gXCJBcmd1bWVudHNcIiB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSkgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IH1cblxuZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHsgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykgeyBhcnIyW2ldID0gYXJyW2ldOyB9IHJldHVybiBhcnIyOyB9XG5cbmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHsgaWYgKHR5cGVvZiBTeW1ib2wgPT09IFwidW5kZWZpbmVkXCIgfHwgIShTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGFycikpKSByZXR1cm47IHZhciBfYXJyID0gW107IHZhciBfbiA9IHRydWU7IHZhciBfZCA9IGZhbHNlOyB2YXIgX2UgPSB1bmRlZmluZWQ7IHRyeSB7IGZvciAodmFyIF9pID0gYXJyW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3M7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsgX2Fyci5wdXNoKF9zLnZhbHVlKTsgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrOyB9IH0gY2F0Y2ggKGVycikgeyBfZCA9IHRydWU7IF9lID0gZXJyOyB9IGZpbmFsbHkgeyB0cnkgeyBpZiAoIV9uICYmIF9pW1wicmV0dXJuXCJdICE9IG51bGwpIF9pW1wicmV0dXJuXCJdKCk7IH0gZmluYWxseSB7IGlmIChfZCkgdGhyb3cgX2U7IH0gfSByZXR1cm4gX2FycjsgfVxuXG5mdW5jdGlvbiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnI7IH1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pIHtcbiAgdmFyIF9pdGVtID0gX3NsaWNlZFRvQXJyYXkoaXRlbSwgNCksXG4gICAgICBjb250ZW50ID0gX2l0ZW1bMV0sXG4gICAgICBjc3NNYXBwaW5nID0gX2l0ZW1bM107XG5cbiAgaWYgKHR5cGVvZiBidG9hID09PSAnZnVuY3Rpb24nKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8ICcnKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICB9KTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKCdcXG4nKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbignXFxuJyk7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh1cmwsIG9wdGlvbnMpIHtcbiAgaWYgKCFvcHRpb25zKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgb3B0aW9ucyA9IHt9O1xuICB9IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlcnNjb3JlLWRhbmdsZSwgbm8tcGFyYW0tcmVhc3NpZ25cblxuXG4gIHVybCA9IHVybCAmJiB1cmwuX19lc01vZHVsZSA/IHVybC5kZWZhdWx0IDogdXJsO1xuXG4gIGlmICh0eXBlb2YgdXJsICE9PSAnc3RyaW5nJykge1xuICAgIHJldHVybiB1cmw7XG4gIH0gLy8gSWYgdXJsIGlzIGFscmVhZHkgd3JhcHBlZCBpbiBxdW90ZXMsIHJlbW92ZSB0aGVtXG5cblxuICBpZiAoL15bJ1wiXS4qWydcIl0kLy50ZXN0KHVybCkpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICB1cmwgPSB1cmwuc2xpY2UoMSwgLTEpO1xuICB9XG5cbiAgaWYgKG9wdGlvbnMuaGFzaCkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgIHVybCArPSBvcHRpb25zLmhhc2g7XG4gIH0gLy8gU2hvdWxkIHVybCBiZSB3cmFwcGVkP1xuICAvLyBTZWUgaHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL2Nzcy12YWx1ZXMtMy8jdXJsc1xuXG5cbiAgaWYgKC9bXCInKCkgXFx0XFxuXS8udGVzdCh1cmwpIHx8IG9wdGlvbnMubmVlZFF1b3Rlcykge1xuICAgIHJldHVybiBcIlxcXCJcIi5jb25jYXQodXJsLnJlcGxhY2UoL1wiL2csICdcXFxcXCInKS5yZXBsYWNlKC9cXG4vZywgJ1xcXFxuJyksIFwiXFxcIlwiKTtcbiAgfVxuXG4gIHJldHVybiB1cmw7XG59OyIsImZ1bmN0aW9uIGlzQWJzb2x1dGUocGF0aG5hbWUpIHtcbiAgcmV0dXJuIHBhdGhuYW1lLmNoYXJBdCgwKSA9PT0gJy8nO1xufVxuXG4vLyBBYm91dCAxLjV4IGZhc3RlciB0aGFuIHRoZSB0d28tYXJnIHZlcnNpb24gb2YgQXJyYXkjc3BsaWNlKClcbmZ1bmN0aW9uIHNwbGljZU9uZShsaXN0LCBpbmRleCkge1xuICBmb3IgKHZhciBpID0gaW5kZXgsIGsgPSBpICsgMSwgbiA9IGxpc3QubGVuZ3RoOyBrIDwgbjsgaSArPSAxLCBrICs9IDEpIHtcbiAgICBsaXN0W2ldID0gbGlzdFtrXTtcbiAgfVxuXG4gIGxpc3QucG9wKCk7XG59XG5cbi8vIFRoaXMgaW1wbGVtZW50YXRpb24gaXMgYmFzZWQgaGVhdmlseSBvbiBub2RlJ3MgdXJsLnBhcnNlXG5mdW5jdGlvbiByZXNvbHZlUGF0aG5hbWUodG8sIGZyb20pIHtcbiAgaWYgKGZyb20gPT09IHVuZGVmaW5lZCkgZnJvbSA9ICcnO1xuXG4gIHZhciB0b1BhcnRzID0gKHRvICYmIHRvLnNwbGl0KCcvJykpIHx8IFtdO1xuICB2YXIgZnJvbVBhcnRzID0gKGZyb20gJiYgZnJvbS5zcGxpdCgnLycpKSB8fCBbXTtcblxuICB2YXIgaXNUb0FicyA9IHRvICYmIGlzQWJzb2x1dGUodG8pO1xuICB2YXIgaXNGcm9tQWJzID0gZnJvbSAmJiBpc0Fic29sdXRlKGZyb20pO1xuICB2YXIgbXVzdEVuZEFicyA9IGlzVG9BYnMgfHwgaXNGcm9tQWJzO1xuXG4gIGlmICh0byAmJiBpc0Fic29sdXRlKHRvKSkge1xuICAgIC8vIHRvIGlzIGFic29sdXRlXG4gICAgZnJvbVBhcnRzID0gdG9QYXJ0cztcbiAgfSBlbHNlIGlmICh0b1BhcnRzLmxlbmd0aCkge1xuICAgIC8vIHRvIGlzIHJlbGF0aXZlLCBkcm9wIHRoZSBmaWxlbmFtZVxuICAgIGZyb21QYXJ0cy5wb3AoKTtcbiAgICBmcm9tUGFydHMgPSBmcm9tUGFydHMuY29uY2F0KHRvUGFydHMpO1xuICB9XG5cbiAgaWYgKCFmcm9tUGFydHMubGVuZ3RoKSByZXR1cm4gJy8nO1xuXG4gIHZhciBoYXNUcmFpbGluZ1NsYXNoO1xuICBpZiAoZnJvbVBhcnRzLmxlbmd0aCkge1xuICAgIHZhciBsYXN0ID0gZnJvbVBhcnRzW2Zyb21QYXJ0cy5sZW5ndGggLSAxXTtcbiAgICBoYXNUcmFpbGluZ1NsYXNoID0gbGFzdCA9PT0gJy4nIHx8IGxhc3QgPT09ICcuLicgfHwgbGFzdCA9PT0gJyc7XG4gIH0gZWxzZSB7XG4gICAgaGFzVHJhaWxpbmdTbGFzaCA9IGZhbHNlO1xuICB9XG5cbiAgdmFyIHVwID0gMDtcbiAgZm9yICh2YXIgaSA9IGZyb21QYXJ0cy5sZW5ndGg7IGkgPj0gMDsgaS0tKSB7XG4gICAgdmFyIHBhcnQgPSBmcm9tUGFydHNbaV07XG5cbiAgICBpZiAocGFydCA9PT0gJy4nKSB7XG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcbiAgICB9IGVsc2UgaWYgKHBhcnQgPT09ICcuLicpIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgICAgdXArKztcbiAgICB9IGVsc2UgaWYgKHVwKSB7XG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcbiAgICAgIHVwLS07XG4gICAgfVxuICB9XG5cbiAgaWYgKCFtdXN0RW5kQWJzKSBmb3IgKDsgdXAtLTsgdXApIGZyb21QYXJ0cy51bnNoaWZ0KCcuLicpO1xuXG4gIGlmIChcbiAgICBtdXN0RW5kQWJzICYmXG4gICAgZnJvbVBhcnRzWzBdICE9PSAnJyAmJlxuICAgICghZnJvbVBhcnRzWzBdIHx8ICFpc0Fic29sdXRlKGZyb21QYXJ0c1swXSkpXG4gIClcbiAgICBmcm9tUGFydHMudW5zaGlmdCgnJyk7XG5cbiAgdmFyIHJlc3VsdCA9IGZyb21QYXJ0cy5qb2luKCcvJyk7XG5cbiAgaWYgKGhhc1RyYWlsaW5nU2xhc2ggJiYgcmVzdWx0LnN1YnN0cigtMSkgIT09ICcvJykgcmVzdWx0ICs9ICcvJztcblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgZGVmYXVsdCByZXNvbHZlUGF0aG5hbWU7XG4iLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyc7XG5pbXBvcnQgcmVzb2x2ZVBhdGhuYW1lIGZyb20gJ3Jlc29sdmUtcGF0aG5hbWUnO1xuaW1wb3J0IHZhbHVlRXF1YWwgZnJvbSAndmFsdWUtZXF1YWwnO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSAndGlueS13YXJuaW5nJztcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAndGlueS1pbnZhcmlhbnQnO1xuXG5mdW5jdGlvbiBhZGRMZWFkaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICcvJyA/IHBhdGggOiAnLycgKyBwYXRoO1xufVxuZnVuY3Rpb24gc3RyaXBMZWFkaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICcvJyA/IHBhdGguc3Vic3RyKDEpIDogcGF0aDtcbn1cbmZ1bmN0aW9uIGhhc0Jhc2VuYW1lKHBhdGgsIHByZWZpeCkge1xuICByZXR1cm4gcGF0aC50b0xvd2VyQ2FzZSgpLmluZGV4T2YocHJlZml4LnRvTG93ZXJDYXNlKCkpID09PSAwICYmICcvPyMnLmluZGV4T2YocGF0aC5jaGFyQXQocHJlZml4Lmxlbmd0aCkpICE9PSAtMTtcbn1cbmZ1bmN0aW9uIHN0cmlwQmFzZW5hbWUocGF0aCwgcHJlZml4KSB7XG4gIHJldHVybiBoYXNCYXNlbmFtZShwYXRoLCBwcmVmaXgpID8gcGF0aC5zdWJzdHIocHJlZml4Lmxlbmd0aCkgOiBwYXRoO1xufVxuZnVuY3Rpb24gc3RyaXBUcmFpbGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KHBhdGgubGVuZ3RoIC0gMSkgPT09ICcvJyA/IHBhdGguc2xpY2UoMCwgLTEpIDogcGF0aDtcbn1cbmZ1bmN0aW9uIHBhcnNlUGF0aChwYXRoKSB7XG4gIHZhciBwYXRobmFtZSA9IHBhdGggfHwgJy8nO1xuICB2YXIgc2VhcmNoID0gJyc7XG4gIHZhciBoYXNoID0gJyc7XG4gIHZhciBoYXNoSW5kZXggPSBwYXRobmFtZS5pbmRleE9mKCcjJyk7XG5cbiAgaWYgKGhhc2hJbmRleCAhPT0gLTEpIHtcbiAgICBoYXNoID0gcGF0aG5hbWUuc3Vic3RyKGhhc2hJbmRleCk7XG4gICAgcGF0aG5hbWUgPSBwYXRobmFtZS5zdWJzdHIoMCwgaGFzaEluZGV4KTtcbiAgfVxuXG4gIHZhciBzZWFyY2hJbmRleCA9IHBhdGhuYW1lLmluZGV4T2YoJz8nKTtcblxuICBpZiAoc2VhcmNoSW5kZXggIT09IC0xKSB7XG4gICAgc2VhcmNoID0gcGF0aG5hbWUuc3Vic3RyKHNlYXJjaEluZGV4KTtcbiAgICBwYXRobmFtZSA9IHBhdGhuYW1lLnN1YnN0cigwLCBzZWFyY2hJbmRleCk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHBhdGhuYW1lOiBwYXRobmFtZSxcbiAgICBzZWFyY2g6IHNlYXJjaCA9PT0gJz8nID8gJycgOiBzZWFyY2gsXG4gICAgaGFzaDogaGFzaCA9PT0gJyMnID8gJycgOiBoYXNoXG4gIH07XG59XG5mdW5jdGlvbiBjcmVhdGVQYXRoKGxvY2F0aW9uKSB7XG4gIHZhciBwYXRobmFtZSA9IGxvY2F0aW9uLnBhdGhuYW1lLFxuICAgICAgc2VhcmNoID0gbG9jYXRpb24uc2VhcmNoLFxuICAgICAgaGFzaCA9IGxvY2F0aW9uLmhhc2g7XG4gIHZhciBwYXRoID0gcGF0aG5hbWUgfHwgJy8nO1xuICBpZiAoc2VhcmNoICYmIHNlYXJjaCAhPT0gJz8nKSBwYXRoICs9IHNlYXJjaC5jaGFyQXQoMCkgPT09ICc/JyA/IHNlYXJjaCA6IFwiP1wiICsgc2VhcmNoO1xuICBpZiAoaGFzaCAmJiBoYXNoICE9PSAnIycpIHBhdGggKz0gaGFzaC5jaGFyQXQoMCkgPT09ICcjJyA/IGhhc2ggOiBcIiNcIiArIGhhc2g7XG4gIHJldHVybiBwYXRoO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwga2V5LCBjdXJyZW50TG9jYXRpb24pIHtcbiAgdmFyIGxvY2F0aW9uO1xuXG4gIGlmICh0eXBlb2YgcGF0aCA9PT0gJ3N0cmluZycpIHtcbiAgICAvLyBUd28tYXJnIGZvcm06IHB1c2gocGF0aCwgc3RhdGUpXG4gICAgbG9jYXRpb24gPSBwYXJzZVBhdGgocGF0aCk7XG4gICAgbG9jYXRpb24uc3RhdGUgPSBzdGF0ZTtcbiAgfSBlbHNlIHtcbiAgICAvLyBPbmUtYXJnIGZvcm06IHB1c2gobG9jYXRpb24pXG4gICAgbG9jYXRpb24gPSBfZXh0ZW5kcyh7fSwgcGF0aCk7XG4gICAgaWYgKGxvY2F0aW9uLnBhdGhuYW1lID09PSB1bmRlZmluZWQpIGxvY2F0aW9uLnBhdGhuYW1lID0gJyc7XG5cbiAgICBpZiAobG9jYXRpb24uc2VhcmNoKSB7XG4gICAgICBpZiAobG9jYXRpb24uc2VhcmNoLmNoYXJBdCgwKSAhPT0gJz8nKSBsb2NhdGlvbi5zZWFyY2ggPSAnPycgKyBsb2NhdGlvbi5zZWFyY2g7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxvY2F0aW9uLnNlYXJjaCA9ICcnO1xuICAgIH1cblxuICAgIGlmIChsb2NhdGlvbi5oYXNoKSB7XG4gICAgICBpZiAobG9jYXRpb24uaGFzaC5jaGFyQXQoMCkgIT09ICcjJykgbG9jYXRpb24uaGFzaCA9ICcjJyArIGxvY2F0aW9uLmhhc2g7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxvY2F0aW9uLmhhc2ggPSAnJztcbiAgICB9XG5cbiAgICBpZiAoc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBsb2NhdGlvbi5zdGF0ZSA9PT0gdW5kZWZpbmVkKSBsb2NhdGlvbi5zdGF0ZSA9IHN0YXRlO1xuICB9XG5cbiAgdHJ5IHtcbiAgICBsb2NhdGlvbi5wYXRobmFtZSA9IGRlY29kZVVSSShsb2NhdGlvbi5wYXRobmFtZSk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBpZiAoZSBpbnN0YW5jZW9mIFVSSUVycm9yKSB7XG4gICAgICB0aHJvdyBuZXcgVVJJRXJyb3IoJ1BhdGhuYW1lIFwiJyArIGxvY2F0aW9uLnBhdGhuYW1lICsgJ1wiIGNvdWxkIG5vdCBiZSBkZWNvZGVkLiAnICsgJ1RoaXMgaXMgbGlrZWx5IGNhdXNlZCBieSBhbiBpbnZhbGlkIHBlcmNlbnQtZW5jb2RpbmcuJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IGU7XG4gICAgfVxuICB9XG5cbiAgaWYgKGtleSkgbG9jYXRpb24ua2V5ID0ga2V5O1xuXG4gIGlmIChjdXJyZW50TG9jYXRpb24pIHtcbiAgICAvLyBSZXNvbHZlIGluY29tcGxldGUvcmVsYXRpdmUgcGF0aG5hbWUgcmVsYXRpdmUgdG8gY3VycmVudCBsb2NhdGlvbi5cbiAgICBpZiAoIWxvY2F0aW9uLnBhdGhuYW1lKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9IGN1cnJlbnRMb2NhdGlvbi5wYXRobmFtZTtcbiAgICB9IGVsc2UgaWYgKGxvY2F0aW9uLnBhdGhuYW1lLmNoYXJBdCgwKSAhPT0gJy8nKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9IHJlc29sdmVQYXRobmFtZShsb2NhdGlvbi5wYXRobmFtZSwgY3VycmVudExvY2F0aW9uLnBhdGhuYW1lKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgLy8gV2hlbiB0aGVyZSBpcyBubyBwcmlvciBsb2NhdGlvbiBhbmQgcGF0aG5hbWUgaXMgZW1wdHksIHNldCBpdCB0byAvXG4gICAgaWYgKCFsb2NhdGlvbi5wYXRobmFtZSkge1xuICAgICAgbG9jYXRpb24ucGF0aG5hbWUgPSAnLyc7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGxvY2F0aW9uO1xufVxuZnVuY3Rpb24gbG9jYXRpb25zQXJlRXF1YWwoYSwgYikge1xuICByZXR1cm4gYS5wYXRobmFtZSA9PT0gYi5wYXRobmFtZSAmJiBhLnNlYXJjaCA9PT0gYi5zZWFyY2ggJiYgYS5oYXNoID09PSBiLmhhc2ggJiYgYS5rZXkgPT09IGIua2V5ICYmIHZhbHVlRXF1YWwoYS5zdGF0ZSwgYi5zdGF0ZSk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCkge1xuICB2YXIgcHJvbXB0ID0gbnVsbDtcblxuICBmdW5jdGlvbiBzZXRQcm9tcHQobmV4dFByb21wdCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcocHJvbXB0ID09IG51bGwsICdBIGhpc3Rvcnkgc3VwcG9ydHMgb25seSBvbmUgcHJvbXB0IGF0IGEgdGltZScpIDogdm9pZCAwO1xuICAgIHByb21wdCA9IG5leHRQcm9tcHQ7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChwcm9tcHQgPT09IG5leHRQcm9tcHQpIHByb21wdCA9IG51bGw7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgY2FsbGJhY2spIHtcbiAgICAvLyBUT0RPOiBJZiBhbm90aGVyIHRyYW5zaXRpb24gc3RhcnRzIHdoaWxlIHdlJ3JlIHN0aWxsIGNvbmZpcm1pbmdcbiAgICAvLyB0aGUgcHJldmlvdXMgb25lLCB3ZSBtYXkgZW5kIHVwIGluIGEgd2VpcmQgc3RhdGUuIEZpZ3VyZSBvdXQgdGhlXG4gICAgLy8gYmVzdCB3YXkgdG8gaGFuZGxlIHRoaXMuXG4gICAgaWYgKHByb21wdCAhPSBudWxsKSB7XG4gICAgICB2YXIgcmVzdWx0ID0gdHlwZW9mIHByb21wdCA9PT0gJ2Z1bmN0aW9uJyA/IHByb21wdChsb2NhdGlvbiwgYWN0aW9uKSA6IHByb21wdDtcblxuICAgICAgaWYgKHR5cGVvZiByZXN1bHQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGlmICh0eXBlb2YgZ2V0VXNlckNvbmZpcm1hdGlvbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgIGdldFVzZXJDb25maXJtYXRpb24ocmVzdWx0LCBjYWxsYmFjayk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhmYWxzZSwgJ0EgaGlzdG9yeSBuZWVkcyBhIGdldFVzZXJDb25maXJtYXRpb24gZnVuY3Rpb24gaW4gb3JkZXIgdG8gdXNlIGEgcHJvbXB0IG1lc3NhZ2UnKSA6IHZvaWQgMDtcbiAgICAgICAgICBjYWxsYmFjayh0cnVlKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gUmV0dXJuIGZhbHNlIGZyb20gYSB0cmFuc2l0aW9uIGhvb2sgdG8gY2FuY2VsIHRoZSB0cmFuc2l0aW9uLlxuICAgICAgICBjYWxsYmFjayhyZXN1bHQgIT09IGZhbHNlKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgY2FsbGJhY2sodHJ1ZSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGxpc3RlbmVycyA9IFtdO1xuXG4gIGZ1bmN0aW9uIGFwcGVuZExpc3RlbmVyKGZuKSB7XG4gICAgdmFyIGlzQWN0aXZlID0gdHJ1ZTtcblxuICAgIGZ1bmN0aW9uIGxpc3RlbmVyKCkge1xuICAgICAgaWYgKGlzQWN0aXZlKSBmbi5hcHBseSh2b2lkIDAsIGFyZ3VtZW50cyk7XG4gICAgfVxuXG4gICAgbGlzdGVuZXJzLnB1c2gobGlzdGVuZXIpO1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpc0FjdGl2ZSA9IGZhbHNlO1xuICAgICAgbGlzdGVuZXJzID0gbGlzdGVuZXJzLmZpbHRlcihmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICByZXR1cm4gaXRlbSAhPT0gbGlzdGVuZXI7XG4gICAgICB9KTtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gbm90aWZ5TGlzdGVuZXJzKCkge1xuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBsaXN0ZW5lcnMuZm9yRWFjaChmdW5jdGlvbiAobGlzdGVuZXIpIHtcbiAgICAgIHJldHVybiBsaXN0ZW5lci5hcHBseSh2b2lkIDAsIGFyZ3MpO1xuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBzZXRQcm9tcHQ6IHNldFByb21wdCxcbiAgICBjb25maXJtVHJhbnNpdGlvblRvOiBjb25maXJtVHJhbnNpdGlvblRvLFxuICAgIGFwcGVuZExpc3RlbmVyOiBhcHBlbmRMaXN0ZW5lcixcbiAgICBub3RpZnlMaXN0ZW5lcnM6IG5vdGlmeUxpc3RlbmVyc1xuICB9O1xufVxuXG52YXIgY2FuVXNlRE9NID0gISEodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LmRvY3VtZW50ICYmIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KTtcbmZ1bmN0aW9uIGdldENvbmZpcm1hdGlvbihtZXNzYWdlLCBjYWxsYmFjaykge1xuICBjYWxsYmFjayh3aW5kb3cuY29uZmlybShtZXNzYWdlKSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tYWxlcnRcbn1cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIHRoZSBIVE1MNSBoaXN0b3J5IEFQSSBpcyBzdXBwb3J0ZWQuIFRha2VuIGZyb20gTW9kZXJuaXpyLlxuICpcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9Nb2Rlcm5penIvTW9kZXJuaXpyL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9Nb2Rlcm5penIvTW9kZXJuaXpyL2Jsb2IvbWFzdGVyL2ZlYXR1cmUtZGV0ZWN0cy9oaXN0b3J5LmpzXG4gKiBjaGFuZ2VkIHRvIGF2b2lkIGZhbHNlIG5lZ2F0aXZlcyBmb3IgV2luZG93cyBQaG9uZXM6IGh0dHBzOi8vZ2l0aHViLmNvbS9yZWFjdGpzL3JlYWN0LXJvdXRlci9pc3N1ZXMvNTg2XG4gKi9cblxuZnVuY3Rpb24gc3VwcG9ydHNIaXN0b3J5KCkge1xuICB2YXIgdWEgPSB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudDtcbiAgaWYgKCh1YS5pbmRleE9mKCdBbmRyb2lkIDIuJykgIT09IC0xIHx8IHVhLmluZGV4T2YoJ0FuZHJvaWQgNC4wJykgIT09IC0xKSAmJiB1YS5pbmRleE9mKCdNb2JpbGUgU2FmYXJpJykgIT09IC0xICYmIHVhLmluZGV4T2YoJ0Nocm9tZScpID09PSAtMSAmJiB1YS5pbmRleE9mKCdXaW5kb3dzIFBob25lJykgPT09IC0xKSByZXR1cm4gZmFsc2U7XG4gIHJldHVybiB3aW5kb3cuaGlzdG9yeSAmJiAncHVzaFN0YXRlJyBpbiB3aW5kb3cuaGlzdG9yeTtcbn1cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIGJyb3dzZXIgZmlyZXMgcG9wc3RhdGUgb24gaGFzaCBjaGFuZ2UuXG4gKiBJRTEwIGFuZCBJRTExIGRvIG5vdC5cbiAqL1xuXG5mdW5jdGlvbiBzdXBwb3J0c1BvcFN0YXRlT25IYXNoQ2hhbmdlKCkge1xuICByZXR1cm4gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignVHJpZGVudCcpID09PSAtMTtcbn1cbi8qKlxuICogUmV0dXJucyBmYWxzZSBpZiB1c2luZyBnbyhuKSB3aXRoIGhhc2ggaGlzdG9yeSBjYXVzZXMgYSBmdWxsIHBhZ2UgcmVsb2FkLlxuICovXG5cbmZ1bmN0aW9uIHN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoKCkge1xuICByZXR1cm4gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignRmlyZWZveCcpID09PSAtMTtcbn1cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIGEgZ2l2ZW4gcG9wc3RhdGUgZXZlbnQgaXMgYW4gZXh0cmFuZW91cyBXZWJLaXQgZXZlbnQuXG4gKiBBY2NvdW50cyBmb3IgdGhlIGZhY3QgdGhhdCBDaHJvbWUgb24gaU9TIGZpcmVzIHJlYWwgcG9wc3RhdGUgZXZlbnRzXG4gKiBjb250YWluaW5nIHVuZGVmaW5lZCBzdGF0ZSB3aGVuIHByZXNzaW5nIHRoZSBiYWNrIGJ1dHRvbi5cbiAqL1xuXG5mdW5jdGlvbiBpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50KGV2ZW50KSB7XG4gIHJldHVybiBldmVudC5zdGF0ZSA9PT0gdW5kZWZpbmVkICYmIG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignQ3JpT1MnKSA9PT0gLTE7XG59XG5cbnZhciBQb3BTdGF0ZUV2ZW50ID0gJ3BvcHN0YXRlJztcbnZhciBIYXNoQ2hhbmdlRXZlbnQgPSAnaGFzaGNoYW5nZSc7XG5cbmZ1bmN0aW9uIGdldEhpc3RvcnlTdGF0ZSgpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gd2luZG93Lmhpc3Rvcnkuc3RhdGUgfHwge307XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICAvLyBJRSAxMSBzb21ldGltZXMgdGhyb3dzIHdoZW4gYWNjZXNzaW5nIHdpbmRvdy5oaXN0b3J5LnN0YXRlXG4gICAgLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9SZWFjdFRyYWluaW5nL2hpc3RvcnkvcHVsbC8yODlcbiAgICByZXR1cm4ge307XG4gIH1cbn1cbi8qKlxuICogQ3JlYXRlcyBhIGhpc3Rvcnkgb2JqZWN0IHRoYXQgdXNlcyB0aGUgSFRNTDUgaGlzdG9yeSBBUEkgaW5jbHVkaW5nXG4gKiBwdXNoU3RhdGUsIHJlcGxhY2VTdGF0ZSwgYW5kIHRoZSBwb3BzdGF0ZSBldmVudC5cbiAqL1xuXG5cbmZ1bmN0aW9uIGNyZWF0ZUJyb3dzZXJIaXN0b3J5KHByb3BzKSB7XG4gIGlmIChwcm9wcyA9PT0gdm9pZCAwKSB7XG4gICAgcHJvcHMgPSB7fTtcbiAgfVxuXG4gICFjYW5Vc2VET00gPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsICdCcm93c2VyIGhpc3RvcnkgbmVlZHMgYSBET00nKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIHZhciBnbG9iYWxIaXN0b3J5ID0gd2luZG93Lmhpc3Rvcnk7XG4gIHZhciBjYW5Vc2VIaXN0b3J5ID0gc3VwcG9ydHNIaXN0b3J5KCk7XG4gIHZhciBuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lciA9ICFzdXBwb3J0c1BvcFN0YXRlT25IYXNoQ2hhbmdlKCk7XG4gIHZhciBfcHJvcHMgPSBwcm9wcyxcbiAgICAgIF9wcm9wcyRmb3JjZVJlZnJlc2ggPSBfcHJvcHMuZm9yY2VSZWZyZXNoLFxuICAgICAgZm9yY2VSZWZyZXNoID0gX3Byb3BzJGZvcmNlUmVmcmVzaCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfcHJvcHMkZm9yY2VSZWZyZXNoLFxuICAgICAgX3Byb3BzJGdldFVzZXJDb25maXJtID0gX3Byb3BzLmdldFVzZXJDb25maXJtYXRpb24sXG4gICAgICBnZXRVc2VyQ29uZmlybWF0aW9uID0gX3Byb3BzJGdldFVzZXJDb25maXJtID09PSB2b2lkIDAgPyBnZXRDb25maXJtYXRpb24gOiBfcHJvcHMkZ2V0VXNlckNvbmZpcm0sXG4gICAgICBfcHJvcHMka2V5TGVuZ3RoID0gX3Byb3BzLmtleUxlbmd0aCxcbiAgICAgIGtleUxlbmd0aCA9IF9wcm9wcyRrZXlMZW5ndGggPT09IHZvaWQgMCA/IDYgOiBfcHJvcHMka2V5TGVuZ3RoO1xuICB2YXIgYmFzZW5hbWUgPSBwcm9wcy5iYXNlbmFtZSA/IHN0cmlwVHJhaWxpbmdTbGFzaChhZGRMZWFkaW5nU2xhc2gocHJvcHMuYmFzZW5hbWUpKSA6ICcnO1xuXG4gIGZ1bmN0aW9uIGdldERPTUxvY2F0aW9uKGhpc3RvcnlTdGF0ZSkge1xuICAgIHZhciBfcmVmID0gaGlzdG9yeVN0YXRlIHx8IHt9LFxuICAgICAgICBrZXkgPSBfcmVmLmtleSxcbiAgICAgICAgc3RhdGUgPSBfcmVmLnN0YXRlO1xuXG4gICAgdmFyIF93aW5kb3ckbG9jYXRpb24gPSB3aW5kb3cubG9jYXRpb24sXG4gICAgICAgIHBhdGhuYW1lID0gX3dpbmRvdyRsb2NhdGlvbi5wYXRobmFtZSxcbiAgICAgICAgc2VhcmNoID0gX3dpbmRvdyRsb2NhdGlvbi5zZWFyY2gsXG4gICAgICAgIGhhc2ggPSBfd2luZG93JGxvY2F0aW9uLmhhc2g7XG4gICAgdmFyIHBhdGggPSBwYXRobmFtZSArIHNlYXJjaCArIGhhc2g7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghYmFzZW5hbWUgfHwgaGFzQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpLCAnWW91IGFyZSBhdHRlbXB0aW5nIHRvIHVzZSBhIGJhc2VuYW1lIG9uIGEgcGFnZSB3aG9zZSBVUkwgcGF0aCBkb2VzIG5vdCBiZWdpbiAnICsgJ3dpdGggdGhlIGJhc2VuYW1lLiBFeHBlY3RlZCBwYXRoIFwiJyArIHBhdGggKyAnXCIgdG8gYmVnaW4gd2l0aCBcIicgKyBiYXNlbmFtZSArICdcIi4nKSA6IHZvaWQgMDtcbiAgICBpZiAoYmFzZW5hbWUpIHBhdGggPSBzdHJpcEJhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKTtcbiAgICByZXR1cm4gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGtleSk7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVLZXkoKSB7XG4gICAgcmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCBrZXlMZW5ndGgpO1xuICB9XG5cbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKTtcblxuICBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xuXG4gICAgaGlzdG9yeS5sZW5ndGggPSBnbG9iYWxIaXN0b3J5Lmxlbmd0aDtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5ub3RpZnlMaXN0ZW5lcnMoaGlzdG9yeS5sb2NhdGlvbiwgaGlzdG9yeS5hY3Rpb24pO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlUG9wU3RhdGUoZXZlbnQpIHtcbiAgICAvLyBJZ25vcmUgZXh0cmFuZW91cyBwb3BzdGF0ZSBldmVudHMgaW4gV2ViS2l0LlxuICAgIGlmIChpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50KGV2ZW50KSkgcmV0dXJuO1xuICAgIGhhbmRsZVBvcChnZXRET01Mb2NhdGlvbihldmVudC5zdGF0ZSkpO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlSGFzaENoYW5nZSgpIHtcbiAgICBoYW5kbGVQb3AoZ2V0RE9NTG9jYXRpb24oZ2V0SGlzdG9yeVN0YXRlKCkpKTtcbiAgfVxuXG4gIHZhciBmb3JjZU5leHRQb3AgPSBmYWxzZTtcblxuICBmdW5jdGlvbiBoYW5kbGVQb3AobG9jYXRpb24pIHtcbiAgICBpZiAoZm9yY2VOZXh0UG9wKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSBmYWxzZTtcbiAgICAgIHNldFN0YXRlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhY3Rpb24gPSAnUE9QJztcbiAgICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICAgIGlmIChvaykge1xuICAgICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV2ZXJ0UG9wKGxvY2F0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcmV2ZXJ0UG9wKGZyb21Mb2NhdGlvbikge1xuICAgIHZhciB0b0xvY2F0aW9uID0gaGlzdG9yeS5sb2NhdGlvbjsgLy8gVE9ETzogV2UgY291bGQgcHJvYmFibHkgbWFrZSB0aGlzIG1vcmUgcmVsaWFibGUgYnlcbiAgICAvLyBrZWVwaW5nIGEgbGlzdCBvZiBrZXlzIHdlJ3ZlIHNlZW4gaW4gc2Vzc2lvblN0b3JhZ2UuXG4gICAgLy8gSW5zdGVhZCwgd2UganVzdCBkZWZhdWx0IHRvIDAgZm9yIGtleXMgd2UgZG9uJ3Qga25vdy5cblxuICAgIHZhciB0b0luZGV4ID0gYWxsS2V5cy5pbmRleE9mKHRvTG9jYXRpb24ua2V5KTtcbiAgICBpZiAodG9JbmRleCA9PT0gLTEpIHRvSW5kZXggPSAwO1xuICAgIHZhciBmcm9tSW5kZXggPSBhbGxLZXlzLmluZGV4T2YoZnJvbUxvY2F0aW9uLmtleSk7XG4gICAgaWYgKGZyb21JbmRleCA9PT0gLTEpIGZyb21JbmRleCA9IDA7XG4gICAgdmFyIGRlbHRhID0gdG9JbmRleCAtIGZyb21JbmRleDtcblxuICAgIGlmIChkZWx0YSkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gdHJ1ZTtcbiAgICAgIGdvKGRlbHRhKTtcbiAgICB9XG4gIH1cblxuICB2YXIgaW5pdGlhbExvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oZ2V0SGlzdG9yeVN0YXRlKCkpO1xuICB2YXIgYWxsS2V5cyA9IFtpbml0aWFsTG9jYXRpb24ua2V5XTsgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUhyZWYobG9jYXRpb24pIHtcbiAgICByZXR1cm4gYmFzZW5hbWUgKyBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHB1c2ggd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgaHJlZiA9IGNyZWF0ZUhyZWYobG9jYXRpb24pO1xuICAgICAgdmFyIGtleSA9IGxvY2F0aW9uLmtleSxcbiAgICAgICAgICBzdGF0ZSA9IGxvY2F0aW9uLnN0YXRlO1xuXG4gICAgICBpZiAoY2FuVXNlSGlzdG9yeSkge1xuICAgICAgICBnbG9iYWxIaXN0b3J5LnB1c2hTdGF0ZSh7XG4gICAgICAgICAga2V5OiBrZXksXG4gICAgICAgICAgc3RhdGU6IHN0YXRlXG4gICAgICAgIH0sIG51bGwsIGhyZWYpO1xuXG4gICAgICAgIGlmIChmb3JjZVJlZnJlc2gpIHtcbiAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGhyZWY7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbEtleXMuaW5kZXhPZihoaXN0b3J5LmxvY2F0aW9uLmtleSk7XG4gICAgICAgICAgdmFyIG5leHRLZXlzID0gYWxsS2V5cy5zbGljZSgwLCBwcmV2SW5kZXggKyAxKTtcbiAgICAgICAgICBuZXh0S2V5cy5wdXNoKGxvY2F0aW9uLmtleSk7XG4gICAgICAgICAgYWxsS2V5cyA9IG5leHRLZXlzO1xuICAgICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0Jyb3dzZXIgaGlzdG9yeSBjYW5ub3QgcHVzaCBzdGF0ZSBpbiBicm93c2VycyB0aGF0IGRvIG5vdCBzdXBwb3J0IEhUTUw1IGhpc3RvcnknKSA6IHZvaWQgMDtcbiAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBocmVmO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcmVwbGFjZSB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1JFUExBQ0UnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBocmVmID0gY3JlYXRlSHJlZihsb2NhdGlvbik7XG4gICAgICB2YXIga2V5ID0gbG9jYXRpb24ua2V5LFxuICAgICAgICAgIHN0YXRlID0gbG9jYXRpb24uc3RhdGU7XG5cbiAgICAgIGlmIChjYW5Vc2VIaXN0b3J5KSB7XG4gICAgICAgIGdsb2JhbEhpc3RvcnkucmVwbGFjZVN0YXRlKHtcbiAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICBzdGF0ZTogc3RhdGVcbiAgICAgICAgfSwgbnVsbCwgaHJlZik7XG5cbiAgICAgICAgaWYgKGZvcmNlUmVmcmVzaCkge1xuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKGhyZWYpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxLZXlzLmluZGV4T2YoaGlzdG9yeS5sb2NhdGlvbi5rZXkpO1xuICAgICAgICAgIGlmIChwcmV2SW5kZXggIT09IC0xKSBhbGxLZXlzW3ByZXZJbmRleF0gPSBsb2NhdGlvbi5rZXk7XG4gICAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnQnJvd3NlciBoaXN0b3J5IGNhbm5vdCByZXBsYWNlIHN0YXRlIGluIGJyb3dzZXJzIHRoYXQgZG8gbm90IHN1cHBvcnQgSFRNTDUgaGlzdG9yeScpIDogdm9pZCAwO1xuICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShocmVmKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvKG4pIHtcbiAgICBnbG9iYWxIaXN0b3J5LmdvKG4pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIGdvKC0xKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICBnbygxKTtcbiAgfVxuXG4gIHZhciBsaXN0ZW5lckNvdW50ID0gMDtcblxuICBmdW5jdGlvbiBjaGVja0RPTUxpc3RlbmVycyhkZWx0YSkge1xuICAgIGxpc3RlbmVyQ291bnQgKz0gZGVsdGE7XG5cbiAgICBpZiAobGlzdGVuZXJDb3VudCA9PT0gMSAmJiBkZWx0YSA9PT0gMSkge1xuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoUG9wU3RhdGVFdmVudCwgaGFuZGxlUG9wU3RhdGUpO1xuICAgICAgaWYgKG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyKSB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnQsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH0gZWxzZSBpZiAobGlzdGVuZXJDb3VudCA9PT0gMCkge1xuICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoUG9wU3RhdGVFdmVudCwgaGFuZGxlUG9wU3RhdGUpO1xuICAgICAgaWYgKG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyKSB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnQsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBpc0Jsb2NrZWQgPSBmYWxzZTtcblxuICBmdW5jdGlvbiBibG9jayhwcm9tcHQpIHtcbiAgICBpZiAocHJvbXB0ID09PSB2b2lkIDApIHtcbiAgICAgIHByb21wdCA9IGZhbHNlO1xuICAgIH1cblxuICAgIHZhciB1bmJsb2NrID0gdHJhbnNpdGlvbk1hbmFnZXIuc2V0UHJvbXB0KHByb21wdCk7XG5cbiAgICBpZiAoIWlzQmxvY2tlZCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgICBpc0Jsb2NrZWQgPSB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoaXNCbG9ja2VkKSB7XG4gICAgICAgIGlzQmxvY2tlZCA9IGZhbHNlO1xuICAgICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB1bmJsb2NrKCk7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIHZhciB1bmxpc3RlbiA9IHRyYW5zaXRpb25NYW5hZ2VyLmFwcGVuZExpc3RlbmVyKGxpc3RlbmVyKTtcbiAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgdW5saXN0ZW4oKTtcbiAgICB9O1xuICB9XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgbGVuZ3RoOiBnbG9iYWxIaXN0b3J5Lmxlbmd0aCxcbiAgICBhY3Rpb246ICdQT1AnLFxuICAgIGxvY2F0aW9uOiBpbml0aWFsTG9jYXRpb24sXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGdvQmFjazogZ29CYWNrLFxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuICByZXR1cm4gaGlzdG9yeTtcbn1cblxudmFyIEhhc2hDaGFuZ2VFdmVudCQxID0gJ2hhc2hjaGFuZ2UnO1xudmFyIEhhc2hQYXRoQ29kZXJzID0ge1xuICBoYXNoYmFuZzoge1xuICAgIGVuY29kZVBhdGg6IGZ1bmN0aW9uIGVuY29kZVBhdGgocGF0aCkge1xuICAgICAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnIScgPyBwYXRoIDogJyEvJyArIHN0cmlwTGVhZGluZ1NsYXNoKHBhdGgpO1xuICAgIH0sXG4gICAgZGVjb2RlUGF0aDogZnVuY3Rpb24gZGVjb2RlUGF0aChwYXRoKSB7XG4gICAgICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICchJyA/IHBhdGguc3Vic3RyKDEpIDogcGF0aDtcbiAgICB9XG4gIH0sXG4gIG5vc2xhc2g6IHtcbiAgICBlbmNvZGVQYXRoOiBzdHJpcExlYWRpbmdTbGFzaCxcbiAgICBkZWNvZGVQYXRoOiBhZGRMZWFkaW5nU2xhc2hcbiAgfSxcbiAgc2xhc2g6IHtcbiAgICBlbmNvZGVQYXRoOiBhZGRMZWFkaW5nU2xhc2gsXG4gICAgZGVjb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoXG4gIH1cbn07XG5cbmZ1bmN0aW9uIHN0cmlwSGFzaCh1cmwpIHtcbiAgdmFyIGhhc2hJbmRleCA9IHVybC5pbmRleE9mKCcjJyk7XG4gIHJldHVybiBoYXNoSW5kZXggPT09IC0xID8gdXJsIDogdXJsLnNsaWNlKDAsIGhhc2hJbmRleCk7XG59XG5cbmZ1bmN0aW9uIGdldEhhc2hQYXRoKCkge1xuICAvLyBXZSBjYW4ndCB1c2Ugd2luZG93LmxvY2F0aW9uLmhhc2ggaGVyZSBiZWNhdXNlIGl0J3Mgbm90XG4gIC8vIGNvbnNpc3RlbnQgYWNyb3NzIGJyb3dzZXJzIC0gRmlyZWZveCB3aWxsIHByZS1kZWNvZGUgaXQhXG4gIHZhciBocmVmID0gd2luZG93LmxvY2F0aW9uLmhyZWY7XG4gIHZhciBoYXNoSW5kZXggPSBocmVmLmluZGV4T2YoJyMnKTtcbiAgcmV0dXJuIGhhc2hJbmRleCA9PT0gLTEgPyAnJyA6IGhyZWYuc3Vic3RyaW5nKGhhc2hJbmRleCArIDEpO1xufVxuXG5mdW5jdGlvbiBwdXNoSGFzaFBhdGgocGF0aCkge1xuICB3aW5kb3cubG9jYXRpb24uaGFzaCA9IHBhdGg7XG59XG5cbmZ1bmN0aW9uIHJlcGxhY2VIYXNoUGF0aChwYXRoKSB7XG4gIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKHN0cmlwSGFzaCh3aW5kb3cubG9jYXRpb24uaHJlZikgKyAnIycgKyBwYXRoKTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlSGFzaEhpc3RvcnkocHJvcHMpIHtcbiAgaWYgKHByb3BzID09PSB2b2lkIDApIHtcbiAgICBwcm9wcyA9IHt9O1xuICB9XG5cbiAgIWNhblVzZURPTSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgJ0hhc2ggaGlzdG9yeSBuZWVkcyBhIERPTScpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgdmFyIGdsb2JhbEhpc3RvcnkgPSB3aW5kb3cuaGlzdG9yeTtcbiAgdmFyIGNhbkdvV2l0aG91dFJlbG9hZCA9IHN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoKCk7XG4gIHZhciBfcHJvcHMgPSBwcm9wcyxcbiAgICAgIF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9IF9wcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbiA9IF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9PT0gdm9pZCAwID8gZ2V0Q29uZmlybWF0aW9uIDogX3Byb3BzJGdldFVzZXJDb25maXJtLFxuICAgICAgX3Byb3BzJGhhc2hUeXBlID0gX3Byb3BzLmhhc2hUeXBlLFxuICAgICAgaGFzaFR5cGUgPSBfcHJvcHMkaGFzaFR5cGUgPT09IHZvaWQgMCA/ICdzbGFzaCcgOiBfcHJvcHMkaGFzaFR5cGU7XG4gIHZhciBiYXNlbmFtZSA9IHByb3BzLmJhc2VuYW1lID8gc3RyaXBUcmFpbGluZ1NsYXNoKGFkZExlYWRpbmdTbGFzaChwcm9wcy5iYXNlbmFtZSkpIDogJyc7XG4gIHZhciBfSGFzaFBhdGhDb2RlcnMkaGFzaFQgPSBIYXNoUGF0aENvZGVyc1toYXNoVHlwZV0sXG4gICAgICBlbmNvZGVQYXRoID0gX0hhc2hQYXRoQ29kZXJzJGhhc2hULmVuY29kZVBhdGgsXG4gICAgICBkZWNvZGVQYXRoID0gX0hhc2hQYXRoQ29kZXJzJGhhc2hULmRlY29kZVBhdGg7XG5cbiAgZnVuY3Rpb24gZ2V0RE9NTG9jYXRpb24oKSB7XG4gICAgdmFyIHBhdGggPSBkZWNvZGVQYXRoKGdldEhhc2hQYXRoKCkpO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIWJhc2VuYW1lIHx8IGhhc0Jhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKSwgJ1lvdSBhcmUgYXR0ZW1wdGluZyB0byB1c2UgYSBiYXNlbmFtZSBvbiBhIHBhZ2Ugd2hvc2UgVVJMIHBhdGggZG9lcyBub3QgYmVnaW4gJyArICd3aXRoIHRoZSBiYXNlbmFtZS4gRXhwZWN0ZWQgcGF0aCBcIicgKyBwYXRoICsgJ1wiIHRvIGJlZ2luIHdpdGggXCInICsgYmFzZW5hbWUgKyAnXCIuJykgOiB2b2lkIDA7XG4gICAgaWYgKGJhc2VuYW1lKSBwYXRoID0gc3RyaXBCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSk7XG4gICAgcmV0dXJuIGNyZWF0ZUxvY2F0aW9uKHBhdGgpO1xuICB9XG5cbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKTtcblxuICBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xuXG4gICAgaGlzdG9yeS5sZW5ndGggPSBnbG9iYWxIaXN0b3J5Lmxlbmd0aDtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5ub3RpZnlMaXN0ZW5lcnMoaGlzdG9yeS5sb2NhdGlvbiwgaGlzdG9yeS5hY3Rpb24pO1xuICB9XG5cbiAgdmFyIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICB2YXIgaWdub3JlUGF0aCA9IG51bGw7XG5cbiAgZnVuY3Rpb24gbG9jYXRpb25zQXJlRXF1YWwkJDEoYSwgYikge1xuICAgIHJldHVybiBhLnBhdGhuYW1lID09PSBiLnBhdGhuYW1lICYmIGEuc2VhcmNoID09PSBiLnNlYXJjaCAmJiBhLmhhc2ggPT09IGIuaGFzaDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZUhhc2hDaGFuZ2UoKSB7XG4gICAgdmFyIHBhdGggPSBnZXRIYXNoUGF0aCgpO1xuICAgIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgocGF0aCk7XG5cbiAgICBpZiAocGF0aCAhPT0gZW5jb2RlZFBhdGgpIHtcbiAgICAgIC8vIEVuc3VyZSB3ZSBhbHdheXMgaGF2ZSBhIHByb3Blcmx5LWVuY29kZWQgaGFzaC5cbiAgICAgIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBsb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKCk7XG4gICAgICB2YXIgcHJldkxvY2F0aW9uID0gaGlzdG9yeS5sb2NhdGlvbjtcbiAgICAgIGlmICghZm9yY2VOZXh0UG9wICYmIGxvY2F0aW9uc0FyZUVxdWFsJCQxKHByZXZMb2NhdGlvbiwgbG9jYXRpb24pKSByZXR1cm47IC8vIEEgaGFzaGNoYW5nZSBkb2Vzbid0IGFsd2F5cyA9PSBsb2NhdGlvbiBjaGFuZ2UuXG5cbiAgICAgIGlmIChpZ25vcmVQYXRoID09PSBjcmVhdGVQYXRoKGxvY2F0aW9uKSkgcmV0dXJuOyAvLyBJZ25vcmUgdGhpcyBjaGFuZ2U7IHdlIGFscmVhZHkgc2V0U3RhdGUgaW4gcHVzaC9yZXBsYWNlLlxuXG4gICAgICBpZ25vcmVQYXRoID0gbnVsbDtcbiAgICAgIGhhbmRsZVBvcChsb2NhdGlvbik7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlUG9wKGxvY2F0aW9uKSB7XG4gICAgaWYgKGZvcmNlTmV4dFBvcCkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gICAgICBzZXRTdGF0ZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XG4gICAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgICBpZiAob2spIHtcbiAgICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldmVydFBvcChsb2NhdGlvbik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHJldmVydFBvcChmcm9tTG9jYXRpb24pIHtcbiAgICB2YXIgdG9Mb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247IC8vIFRPRE86IFdlIGNvdWxkIHByb2JhYmx5IG1ha2UgdGhpcyBtb3JlIHJlbGlhYmxlIGJ5XG4gICAgLy8ga2VlcGluZyBhIGxpc3Qgb2YgcGF0aHMgd2UndmUgc2VlbiBpbiBzZXNzaW9uU3RvcmFnZS5cbiAgICAvLyBJbnN0ZWFkLCB3ZSBqdXN0IGRlZmF1bHQgdG8gMCBmb3IgcGF0aHMgd2UgZG9uJ3Qga25vdy5cblxuICAgIHZhciB0b0luZGV4ID0gYWxsUGF0aHMubGFzdEluZGV4T2YoY3JlYXRlUGF0aCh0b0xvY2F0aW9uKSk7XG4gICAgaWYgKHRvSW5kZXggPT09IC0xKSB0b0luZGV4ID0gMDtcbiAgICB2YXIgZnJvbUluZGV4ID0gYWxsUGF0aHMubGFzdEluZGV4T2YoY3JlYXRlUGF0aChmcm9tTG9jYXRpb24pKTtcbiAgICBpZiAoZnJvbUluZGV4ID09PSAtMSkgZnJvbUluZGV4ID0gMDtcbiAgICB2YXIgZGVsdGEgPSB0b0luZGV4IC0gZnJvbUluZGV4O1xuXG4gICAgaWYgKGRlbHRhKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSB0cnVlO1xuICAgICAgZ28oZGVsdGEpO1xuICAgIH1cbiAgfSAvLyBFbnN1cmUgdGhlIGhhc2ggaXMgZW5jb2RlZCBwcm9wZXJseSBiZWZvcmUgZG9pbmcgYW55dGhpbmcgZWxzZS5cblxuXG4gIHZhciBwYXRoID0gZ2V0SGFzaFBhdGgoKTtcbiAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChwYXRoKTtcbiAgaWYgKHBhdGggIT09IGVuY29kZWRQYXRoKSByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICB2YXIgaW5pdGlhbExvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oKTtcbiAgdmFyIGFsbFBhdGhzID0gW2NyZWF0ZVBhdGgoaW5pdGlhbExvY2F0aW9uKV07IC8vIFB1YmxpYyBpbnRlcmZhY2VcblxuICBmdW5jdGlvbiBjcmVhdGVIcmVmKGxvY2F0aW9uKSB7XG4gICAgdmFyIGJhc2VUYWcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdiYXNlJyk7XG4gICAgdmFyIGhyZWYgPSAnJztcblxuICAgIGlmIChiYXNlVGFnICYmIGJhc2VUYWcuZ2V0QXR0cmlidXRlKCdocmVmJykpIHtcbiAgICAgIGhyZWYgPSBzdHJpcEhhc2god2luZG93LmxvY2F0aW9uLmhyZWYpO1xuICAgIH1cblxuICAgIHJldHVybiBocmVmICsgJyMnICsgZW5jb2RlUGF0aChiYXNlbmFtZSArIGNyZWF0ZVBhdGgobG9jYXRpb24pKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdIYXNoIGhpc3RvcnkgY2Fubm90IHB1c2ggc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIHBhdGggPSBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbiAgICAgIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgoYmFzZW5hbWUgKyBwYXRoKTtcbiAgICAgIHZhciBoYXNoQ2hhbmdlZCA9IGdldEhhc2hQYXRoKCkgIT09IGVuY29kZWRQYXRoO1xuXG4gICAgICBpZiAoaGFzaENoYW5nZWQpIHtcbiAgICAgICAgLy8gV2UgY2Fubm90IHRlbGwgaWYgYSBoYXNoY2hhbmdlIHdhcyBjYXVzZWQgYnkgYSBQVVNILCBzbyB3ZSdkXG4gICAgICAgIC8vIHJhdGhlciBzZXRTdGF0ZSBoZXJlIGFuZCBpZ25vcmUgdGhlIGhhc2hjaGFuZ2UuIFRoZSBjYXZlYXQgaGVyZVxuICAgICAgICAvLyBpcyB0aGF0IG90aGVyIGhhc2ggaGlzdG9yaWVzIGluIHRoZSBwYWdlIHdpbGwgY29uc2lkZXIgaXQgYSBQT1AuXG4gICAgICAgIGlnbm9yZVBhdGggPSBwYXRoO1xuICAgICAgICBwdXNoSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsUGF0aHMubGFzdEluZGV4T2YoY3JlYXRlUGF0aChoaXN0b3J5LmxvY2F0aW9uKSk7XG4gICAgICAgIHZhciBuZXh0UGF0aHMgPSBhbGxQYXRocy5zbGljZSgwLCBwcmV2SW5kZXggKyAxKTtcbiAgICAgICAgbmV4dFBhdGhzLnB1c2gocGF0aCk7XG4gICAgICAgIGFsbFBhdGhzID0gbmV4dFBhdGhzO1xuICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhmYWxzZSwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgUFVTSCB0aGUgc2FtZSBwYXRoOyBhIG5ldyBlbnRyeSB3aWxsIG5vdCBiZSBhZGRlZCB0byB0aGUgaGlzdG9yeSBzdGFjaycpIDogdm9pZCAwO1xuICAgICAgICBzZXRTdGF0ZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgcmVwbGFjZSBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgcGF0aCA9IGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICAgICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChiYXNlbmFtZSArIHBhdGgpO1xuICAgICAgdmFyIGhhc2hDaGFuZ2VkID0gZ2V0SGFzaFBhdGgoKSAhPT0gZW5jb2RlZFBhdGg7XG5cbiAgICAgIGlmIChoYXNoQ2hhbmdlZCkge1xuICAgICAgICAvLyBXZSBjYW5ub3QgdGVsbCBpZiBhIGhhc2hjaGFuZ2Ugd2FzIGNhdXNlZCBieSBhIFJFUExBQ0UsIHNvIHdlJ2RcbiAgICAgICAgLy8gcmF0aGVyIHNldFN0YXRlIGhlcmUgYW5kIGlnbm9yZSB0aGUgaGFzaGNoYW5nZS4gVGhlIGNhdmVhdCBoZXJlXG4gICAgICAgIC8vIGlzIHRoYXQgb3RoZXIgaGFzaCBoaXN0b3JpZXMgaW4gdGhlIHBhZ2Ugd2lsbCBjb25zaWRlciBpdCBhIFBPUC5cbiAgICAgICAgaWdub3JlUGF0aCA9IHBhdGg7XG4gICAgICAgIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gICAgICB9XG5cbiAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxQYXRocy5pbmRleE9mKGNyZWF0ZVBhdGgoaGlzdG9yeS5sb2NhdGlvbikpO1xuICAgICAgaWYgKHByZXZJbmRleCAhPT0gLTEpIGFsbFBhdGhzW3ByZXZJbmRleF0gPSBwYXRoO1xuICAgICAgc2V0U3RhdGUoe1xuICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvKG4pIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGNhbkdvV2l0aG91dFJlbG9hZCwgJ0hhc2ggaGlzdG9yeSBnbyhuKSBjYXVzZXMgYSBmdWxsIHBhZ2UgcmVsb2FkIGluIHRoaXMgYnJvd3NlcicpIDogdm9pZCAwO1xuICAgIGdsb2JhbEhpc3RvcnkuZ28obik7XG4gIH1cblxuICBmdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgZ28oLTEpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29Gb3J3YXJkKCkge1xuICAgIGdvKDEpO1xuICB9XG5cbiAgdmFyIGxpc3RlbmVyQ291bnQgPSAwO1xuXG4gIGZ1bmN0aW9uIGNoZWNrRE9NTGlzdGVuZXJzKGRlbHRhKSB7XG4gICAgbGlzdGVuZXJDb3VudCArPSBkZWx0YTtcblxuICAgIGlmIChsaXN0ZW5lckNvdW50ID09PSAxICYmIGRlbHRhID09PSAxKSB7XG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnQkMSwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfSBlbHNlIGlmIChsaXN0ZW5lckNvdW50ID09PSAwKSB7XG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnQkMSwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGlzQmxvY2tlZCA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIGJsb2NrKHByb21wdCkge1xuICAgIGlmIChwcm9tcHQgPT09IHZvaWQgMCkge1xuICAgICAgcHJvbXB0ID0gZmFsc2U7XG4gICAgfVxuXG4gICAgdmFyIHVuYmxvY2sgPSB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcblxuICAgIGlmICghaXNCbG9ja2VkKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICAgIGlzQmxvY2tlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChpc0Jsb2NrZWQpIHtcbiAgICAgICAgaXNCbG9ja2VkID0gZmFsc2U7XG4gICAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHVuYmxvY2soKTtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgdmFyIHVubGlzdGVuID0gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xuICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB1bmxpc3RlbigpO1xuICAgIH07XG4gIH1cblxuICB2YXIgaGlzdG9yeSA9IHtcbiAgICBsZW5ndGg6IGdsb2JhbEhpc3RvcnkubGVuZ3RoLFxuICAgIGFjdGlvbjogJ1BPUCcsXG4gICAgbG9jYXRpb246IGluaXRpYWxMb2NhdGlvbixcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgYmxvY2s6IGJsb2NrLFxuICAgIGxpc3RlbjogbGlzdGVuXG4gIH07XG4gIHJldHVybiBoaXN0b3J5O1xufVxuXG5mdW5jdGlvbiBjbGFtcChuLCBsb3dlckJvdW5kLCB1cHBlckJvdW5kKSB7XG4gIHJldHVybiBNYXRoLm1pbihNYXRoLm1heChuLCBsb3dlckJvdW5kKSwgdXBwZXJCb3VuZCk7XG59XG4vKipcbiAqIENyZWF0ZXMgYSBoaXN0b3J5IG9iamVjdCB0aGF0IHN0b3JlcyBsb2NhdGlvbnMgaW4gbWVtb3J5LlxuICovXG5cblxuZnVuY3Rpb24gY3JlYXRlTWVtb3J5SGlzdG9yeShwcm9wcykge1xuICBpZiAocHJvcHMgPT09IHZvaWQgMCkge1xuICAgIHByb3BzID0ge307XG4gIH1cblxuICB2YXIgX3Byb3BzID0gcHJvcHMsXG4gICAgICBnZXRVc2VyQ29uZmlybWF0aW9uID0gX3Byb3BzLmdldFVzZXJDb25maXJtYXRpb24sXG4gICAgICBfcHJvcHMkaW5pdGlhbEVudHJpZXMgPSBfcHJvcHMuaW5pdGlhbEVudHJpZXMsXG4gICAgICBpbml0aWFsRW50cmllcyA9IF9wcm9wcyRpbml0aWFsRW50cmllcyA9PT0gdm9pZCAwID8gWycvJ10gOiBfcHJvcHMkaW5pdGlhbEVudHJpZXMsXG4gICAgICBfcHJvcHMkaW5pdGlhbEluZGV4ID0gX3Byb3BzLmluaXRpYWxJbmRleCxcbiAgICAgIGluaXRpYWxJbmRleCA9IF9wcm9wcyRpbml0aWFsSW5kZXggPT09IHZvaWQgMCA/IDAgOiBfcHJvcHMkaW5pdGlhbEluZGV4LFxuICAgICAgX3Byb3BzJGtleUxlbmd0aCA9IF9wcm9wcy5rZXlMZW5ndGgsXG4gICAgICBrZXlMZW5ndGggPSBfcHJvcHMka2V5TGVuZ3RoID09PSB2b2lkIDAgPyA2IDogX3Byb3BzJGtleUxlbmd0aDtcbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKTtcblxuICBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xuXG4gICAgaGlzdG9yeS5sZW5ndGggPSBoaXN0b3J5LmVudHJpZXMubGVuZ3RoO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVLZXkoKSB7XG4gICAgcmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCBrZXlMZW5ndGgpO1xuICB9XG5cbiAgdmFyIGluZGV4ID0gY2xhbXAoaW5pdGlhbEluZGV4LCAwLCBpbml0aWFsRW50cmllcy5sZW5ndGggLSAxKTtcbiAgdmFyIGVudHJpZXMgPSBpbml0aWFsRW50cmllcy5tYXAoZnVuY3Rpb24gKGVudHJ5KSB7XG4gICAgcmV0dXJuIHR5cGVvZiBlbnRyeSA9PT0gJ3N0cmluZycgPyBjcmVhdGVMb2NhdGlvbihlbnRyeSwgdW5kZWZpbmVkLCBjcmVhdGVLZXkoKSkgOiBjcmVhdGVMb2NhdGlvbihlbnRyeSwgdW5kZWZpbmVkLCBlbnRyeS5rZXkgfHwgY3JlYXRlS2V5KCkpO1xuICB9KTsgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIHZhciBjcmVhdGVIcmVmID0gY3JlYXRlUGF0aDtcblxuICBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHR5cGVvZiBwYXRoID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byBwdXNoIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUFVTSCc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIHByZXZJbmRleCA9IGhpc3RvcnkuaW5kZXg7XG4gICAgICB2YXIgbmV4dEluZGV4ID0gcHJldkluZGV4ICsgMTtcbiAgICAgIHZhciBuZXh0RW50cmllcyA9IGhpc3RvcnkuZW50cmllcy5zbGljZSgwKTtcblxuICAgICAgaWYgKG5leHRFbnRyaWVzLmxlbmd0aCA+IG5leHRJbmRleCkge1xuICAgICAgICBuZXh0RW50cmllcy5zcGxpY2UobmV4dEluZGV4LCBuZXh0RW50cmllcy5sZW5ndGggLSBuZXh0SW5kZXgsIGxvY2F0aW9uKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG5leHRFbnRyaWVzLnB1c2gobG9jYXRpb24pO1xuICAgICAgfVxuXG4gICAgICBzZXRTdGF0ZSh7XG4gICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICAgIGluZGV4OiBuZXh0SW5kZXgsXG4gICAgICAgIGVudHJpZXM6IG5leHRFbnRyaWVzXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlcGxhY2UocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHJlcGxhY2Ugd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICBoaXN0b3J5LmVudHJpZXNbaGlzdG9yeS5pbmRleF0gPSBsb2NhdGlvbjtcbiAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnbyhuKSB7XG4gICAgdmFyIG5leHRJbmRleCA9IGNsYW1wKGhpc3RvcnkuaW5kZXggKyBuLCAwLCBoaXN0b3J5LmVudHJpZXMubGVuZ3RoIC0gMSk7XG4gICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuICAgIHZhciBsb2NhdGlvbiA9IGhpc3RvcnkuZW50cmllc1tuZXh0SW5kZXhdO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAob2spIHtcbiAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgICBpbmRleDogbmV4dEluZGV4XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gTWltaWMgdGhlIGJlaGF2aW9yIG9mIERPTSBoaXN0b3JpZXMgYnlcbiAgICAgICAgLy8gY2F1c2luZyBhIHJlbmRlciBhZnRlciBhIGNhbmNlbGxlZCBQT1AuXG4gICAgICAgIHNldFN0YXRlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgZ28oLTEpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29Gb3J3YXJkKCkge1xuICAgIGdvKDEpO1xuICB9XG5cbiAgZnVuY3Rpb24gY2FuR28obikge1xuICAgIHZhciBuZXh0SW5kZXggPSBoaXN0b3J5LmluZGV4ICsgbjtcbiAgICByZXR1cm4gbmV4dEluZGV4ID49IDAgJiYgbmV4dEluZGV4IDwgaGlzdG9yeS5lbnRyaWVzLmxlbmd0aDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGJsb2NrKHByb21wdCkge1xuICAgIGlmIChwcm9tcHQgPT09IHZvaWQgMCkge1xuICAgICAgcHJvbXB0ID0gZmFsc2U7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuICB9XG5cbiAgZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgcmV0dXJuIHRyYW5zaXRpb25NYW5hZ2VyLmFwcGVuZExpc3RlbmVyKGxpc3RlbmVyKTtcbiAgfVxuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZW50cmllcy5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogZW50cmllc1tpbmRleF0sXG4gICAgaW5kZXg6IGluZGV4LFxuICAgIGVudHJpZXM6IGVudHJpZXMsXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGdvQmFjazogZ29CYWNrLFxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxuICAgIGNhbkdvOiBjYW5HbyxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcbiAgcmV0dXJuIGhpc3Rvcnk7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZUJyb3dzZXJIaXN0b3J5LCBjcmVhdGVIYXNoSGlzdG9yeSwgY3JlYXRlTWVtb3J5SGlzdG9yeSwgY3JlYXRlTG9jYXRpb24sIGxvY2F0aW9uc0FyZUVxdWFsLCBwYXJzZVBhdGgsIGNyZWF0ZVBhdGggfTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHJlYWN0SXMgPSByZXF1aXJlKCdyZWFjdC1pcycpO1xuXG4vKipcbiAqIENvcHlyaWdodCAyMDE1LCBZYWhvbyEgSW5jLlxuICogQ29weXJpZ2h0cyBsaWNlbnNlZCB1bmRlciB0aGUgTmV3IEJTRCBMaWNlbnNlLiBTZWUgdGhlIGFjY29tcGFueWluZyBMSUNFTlNFIGZpbGUgZm9yIHRlcm1zLlxuICovXG52YXIgUkVBQ1RfU1RBVElDUyA9IHtcbiAgY2hpbGRDb250ZXh0VHlwZXM6IHRydWUsXG4gIGNvbnRleHRUeXBlOiB0cnVlLFxuICBjb250ZXh0VHlwZXM6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIGdldERlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yOiB0cnVlLFxuICBnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM6IHRydWUsXG4gIG1peGluczogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlLFxuICB0eXBlOiB0cnVlXG59O1xudmFyIEtOT1dOX1NUQVRJQ1MgPSB7XG4gIG5hbWU6IHRydWUsXG4gIGxlbmd0aDogdHJ1ZSxcbiAgcHJvdG90eXBlOiB0cnVlLFxuICBjYWxsZXI6IHRydWUsXG4gIGNhbGxlZTogdHJ1ZSxcbiAgYXJndW1lbnRzOiB0cnVlLFxuICBhcml0eTogdHJ1ZVxufTtcbnZhciBGT1JXQVJEX1JFRl9TVEFUSUNTID0ge1xuICAnJCR0eXBlb2YnOiB0cnVlLFxuICByZW5kZXI6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIHByb3BUeXBlczogdHJ1ZVxufTtcbnZhciBNRU1PX1NUQVRJQ1MgPSB7XG4gICckJHR5cGVvZic6IHRydWUsXG4gIGNvbXBhcmU6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIHByb3BUeXBlczogdHJ1ZSxcbiAgdHlwZTogdHJ1ZVxufTtcbnZhciBUWVBFX1NUQVRJQ1MgPSB7fTtcblRZUEVfU1RBVElDU1tyZWFjdElzLkZvcndhcmRSZWZdID0gRk9SV0FSRF9SRUZfU1RBVElDUztcblRZUEVfU1RBVElDU1tyZWFjdElzLk1lbW9dID0gTUVNT19TVEFUSUNTO1xuXG5mdW5jdGlvbiBnZXRTdGF0aWNzKGNvbXBvbmVudCkge1xuICAvLyBSZWFjdCB2MTYuMTEgYW5kIGJlbG93XG4gIGlmIChyZWFjdElzLmlzTWVtbyhjb21wb25lbnQpKSB7XG4gICAgcmV0dXJuIE1FTU9fU1RBVElDUztcbiAgfSAvLyBSZWFjdCB2MTYuMTIgYW5kIGFib3ZlXG5cblxuICByZXR1cm4gVFlQRV9TVEFUSUNTW2NvbXBvbmVudFsnJCR0eXBlb2YnXV0gfHwgUkVBQ1RfU1RBVElDUztcbn1cblxudmFyIGRlZmluZVByb3BlcnR5ID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIGdldE93blByb3BlcnR5TmFtZXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcztcbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG52YXIgZ2V0UHJvdG90eXBlT2YgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Y7XG52YXIgb2JqZWN0UHJvdG90eXBlID0gT2JqZWN0LnByb3RvdHlwZTtcbmZ1bmN0aW9uIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgc291cmNlQ29tcG9uZW50LCBibGFja2xpc3QpIHtcbiAgaWYgKHR5cGVvZiBzb3VyY2VDb21wb25lbnQgIT09ICdzdHJpbmcnKSB7XG4gICAgLy8gZG9uJ3QgaG9pc3Qgb3ZlciBzdHJpbmcgKGh0bWwpIGNvbXBvbmVudHNcbiAgICBpZiAob2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICB2YXIgaW5oZXJpdGVkQ29tcG9uZW50ID0gZ2V0UHJvdG90eXBlT2Yoc291cmNlQ29tcG9uZW50KTtcblxuICAgICAgaWYgKGluaGVyaXRlZENvbXBvbmVudCAmJiBpbmhlcml0ZWRDb21wb25lbnQgIT09IG9iamVjdFByb3RvdHlwZSkge1xuICAgICAgICBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIGluaGVyaXRlZENvbXBvbmVudCwgYmxhY2tsaXN0KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIga2V5cyA9IGdldE93blByb3BlcnR5TmFtZXMoc291cmNlQ29tcG9uZW50KTtcblxuICAgIGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcbiAgICAgIGtleXMgPSBrZXlzLmNvbmNhdChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoc291cmNlQ29tcG9uZW50KSk7XG4gICAgfVxuXG4gICAgdmFyIHRhcmdldFN0YXRpY3MgPSBnZXRTdGF0aWNzKHRhcmdldENvbXBvbmVudCk7XG4gICAgdmFyIHNvdXJjZVN0YXRpY3MgPSBnZXRTdGF0aWNzKHNvdXJjZUNvbXBvbmVudCk7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyArK2kpIHtcbiAgICAgIHZhciBrZXkgPSBrZXlzW2ldO1xuXG4gICAgICBpZiAoIUtOT1dOX1NUQVRJQ1Nba2V5XSAmJiAhKGJsYWNrbGlzdCAmJiBibGFja2xpc3Rba2V5XSkgJiYgIShzb3VyY2VTdGF0aWNzICYmIHNvdXJjZVN0YXRpY3Nba2V5XSkgJiYgISh0YXJnZXRTdGF0aWNzICYmIHRhcmdldFN0YXRpY3Nba2V5XSkpIHtcbiAgICAgICAgdmFyIGRlc2NyaXB0b3IgPSBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlQ29tcG9uZW50LCBrZXkpO1xuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgLy8gQXZvaWQgZmFpbHVyZXMgZnJvbSByZWFkLW9ubHkgcHJvcGVydGllc1xuICAgICAgICAgIGRlZmluZVByb3BlcnR5KHRhcmdldENvbXBvbmVudCwga2V5LCBkZXNjcmlwdG9yKTtcbiAgICAgICAgfSBjYXRjaCAoZSkge31cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0Q29tcG9uZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGhvaXN0Tm9uUmVhY3RTdGF0aWNzO1xuIiwiLypcbm9iamVjdC1hc3NpZ25cbihjKSBTaW5kcmUgU29yaHVzXG5AbGljZW5zZSBNSVRcbiovXG5cbid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgcHJvcElzRW51bWVyYWJsZSA9IE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7XG5cbmZ1bmN0aW9uIHRvT2JqZWN0KHZhbCkge1xuXHRpZiAodmFsID09PSBudWxsIHx8IHZhbCA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignT2JqZWN0LmFzc2lnbiBjYW5ub3QgYmUgY2FsbGVkIHdpdGggbnVsbCBvciB1bmRlZmluZWQnKTtcblx0fVxuXG5cdHJldHVybiBPYmplY3QodmFsKTtcbn1cblxuZnVuY3Rpb24gc2hvdWxkVXNlTmF0aXZlKCkge1xuXHR0cnkge1xuXHRcdGlmICghT2JqZWN0LmFzc2lnbikge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIERldGVjdCBidWdneSBwcm9wZXJ0eSBlbnVtZXJhdGlvbiBvcmRlciBpbiBvbGRlciBWOCB2ZXJzaW9ucy5cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTQxMThcblx0XHR2YXIgdGVzdDEgPSBuZXcgU3RyaW5nKCdhYmMnKTsgIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3LXdyYXBwZXJzXG5cdFx0dGVzdDFbNV0gPSAnZGUnO1xuXHRcdGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MSlbMF0gPT09ICc1Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDIgPSB7fTtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IDEwOyBpKyspIHtcblx0XHRcdHRlc3QyWydfJyArIFN0cmluZy5mcm9tQ2hhckNvZGUoaSldID0gaTtcblx0XHR9XG5cdFx0dmFyIG9yZGVyMiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QyKS5tYXAoZnVuY3Rpb24gKG4pIHtcblx0XHRcdHJldHVybiB0ZXN0MltuXTtcblx0XHR9KTtcblx0XHRpZiAob3JkZXIyLmpvaW4oJycpICE9PSAnMDEyMzQ1Njc4OScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QzID0ge307XG5cdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbiAobGV0dGVyKSB7XG5cdFx0XHR0ZXN0M1tsZXR0ZXJdID0gbGV0dGVyO1xuXHRcdH0pO1xuXHRcdGlmIChPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LCB0ZXN0MykpLmpvaW4oJycpICE9PVxuXHRcdFx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRydWU7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdC8vIFdlIGRvbid0IGV4cGVjdCBhbnkgb2YgdGhlIGFib3ZlIHRvIHRocm93LCBidXQgYmV0dGVyIHRvIGJlIHNhZmUuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2hvdWxkVXNlTmF0aXZlKCkgPyBPYmplY3QuYXNzaWduIDogZnVuY3Rpb24gKHRhcmdldCwgc291cmNlKSB7XG5cdHZhciBmcm9tO1xuXHR2YXIgdG8gPSB0b09iamVjdCh0YXJnZXQpO1xuXHR2YXIgc3ltYm9scztcblxuXHRmb3IgKHZhciBzID0gMTsgcyA8IGFyZ3VtZW50cy5sZW5ndGg7IHMrKykge1xuXHRcdGZyb20gPSBPYmplY3QoYXJndW1lbnRzW3NdKTtcblxuXHRcdGZvciAodmFyIGtleSBpbiBmcm9tKSB7XG5cdFx0XHRpZiAoaGFzT3duUHJvcGVydHkuY2FsbChmcm9tLCBrZXkpKSB7XG5cdFx0XHRcdHRvW2tleV0gPSBmcm9tW2tleV07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuXHRcdFx0c3ltYm9scyA9IGdldE93blByb3BlcnR5U3ltYm9scyhmcm9tKTtcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3ltYm9scy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRpZiAocHJvcElzRW51bWVyYWJsZS5jYWxsKGZyb20sIHN5bWJvbHNbaV0pKSB7XG5cdFx0XHRcdFx0dG9bc3ltYm9sc1tpXV0gPSBmcm9tW3N5bWJvbHNbaV1dO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHRvO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSByZXF1aXJlKCcuL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldCcpO1xuXG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge31cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb25XaXRoUmVzZXQoKSB7fVxuZW1wdHlGdW5jdGlvbldpdGhSZXNldC5yZXNldFdhcm5pbmdDYWNoZSA9IGVtcHR5RnVuY3Rpb247XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIGZ1bmN0aW9uIHNoaW0ocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lLCBzZWNyZXQpIHtcbiAgICBpZiAoc2VjcmV0ID09PSBSZWFjdFByb3BUeXBlc1NlY3JldCkge1xuICAgICAgLy8gSXQgaXMgc3RpbGwgc2FmZSB3aGVuIGNhbGxlZCBmcm9tIFJlYWN0LlxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgZXJyID0gbmV3IEVycm9yKFxuICAgICAgJ0NhbGxpbmcgUHJvcFR5cGVzIHZhbGlkYXRvcnMgZGlyZWN0bHkgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgYHByb3AtdHlwZXNgIHBhY2thZ2UuICcgK1xuICAgICAgJ1VzZSBQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMoKSB0byBjYWxsIHRoZW0uICcgK1xuICAgICAgJ1JlYWQgbW9yZSBhdCBodHRwOi8vZmIubWUvdXNlLWNoZWNrLXByb3AtdHlwZXMnXG4gICAgKTtcbiAgICBlcnIubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICB0aHJvdyBlcnI7XG4gIH07XG4gIHNoaW0uaXNSZXF1aXJlZCA9IHNoaW07XG4gIGZ1bmN0aW9uIGdldFNoaW0oKSB7XG4gICAgcmV0dXJuIHNoaW07XG4gIH07XG4gIC8vIEltcG9ydGFudCFcbiAgLy8gS2VlcCB0aGlzIGxpc3QgaW4gc3luYyB3aXRoIHByb2R1Y3Rpb24gdmVyc2lvbiBpbiBgLi9mYWN0b3J5V2l0aFR5cGVDaGVja2Vycy5qc2AuXG4gIHZhciBSZWFjdFByb3BUeXBlcyA9IHtcbiAgICBhcnJheTogc2hpbSxcbiAgICBib29sOiBzaGltLFxuICAgIGZ1bmM6IHNoaW0sXG4gICAgbnVtYmVyOiBzaGltLFxuICAgIG9iamVjdDogc2hpbSxcbiAgICBzdHJpbmc6IHNoaW0sXG4gICAgc3ltYm9sOiBzaGltLFxuXG4gICAgYW55OiBzaGltLFxuICAgIGFycmF5T2Y6IGdldFNoaW0sXG4gICAgZWxlbWVudDogc2hpbSxcbiAgICBlbGVtZW50VHlwZTogc2hpbSxcbiAgICBpbnN0YW5jZU9mOiBnZXRTaGltLFxuICAgIG5vZGU6IHNoaW0sXG4gICAgb2JqZWN0T2Y6IGdldFNoaW0sXG4gICAgb25lT2Y6IGdldFNoaW0sXG4gICAgb25lT2ZUeXBlOiBnZXRTaGltLFxuICAgIHNoYXBlOiBnZXRTaGltLFxuICAgIGV4YWN0OiBnZXRTaGltLFxuXG4gICAgY2hlY2tQcm9wVHlwZXM6IGVtcHR5RnVuY3Rpb25XaXRoUmVzZXQsXG4gICAgcmVzZXRXYXJuaW5nQ2FjaGU6IGVtcHR5RnVuY3Rpb25cbiAgfTtcblxuICBSZWFjdFByb3BUeXBlcy5Qcm9wVHlwZXMgPSBSZWFjdFByb3BUeXBlcztcblxuICByZXR1cm4gUmVhY3RQcm9wVHlwZXM7XG59O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgZGV2ZWxvcG1lbnQgYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgdmFyIHRocm93T25EaXJlY3RBY2Nlc3MgPSB0cnVlO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMnKShSZWFjdElzLmlzRWxlbWVudCwgdGhyb3dPbkRpcmVjdEFjY2Vzcyk7XG59IGVsc2Uge1xuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBwcm9kdWN0aW9uIGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMnKSgpO1xufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9ICdTRUNSRVRfRE9fTk9UX1BBU1NfVEhJU19PUl9ZT1VfV0lMTF9CRV9GSVJFRCc7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3RQcm9wVHlwZXNTZWNyZXQ7XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE3LjAuMVxuICogcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbi8qXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwicmVhY3RcIiksbT1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxyPXJlcXVpcmUoXCJzY2hlZHVsZXJcIik7ZnVuY3Rpb24geShhKXtmb3IodmFyIGI9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MTtjPGFyZ3VtZW50cy5sZW5ndGg7YysrKWIrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2NdKTtyZXR1cm5cIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCBcIitiK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIn1pZighYWEpdGhyb3cgRXJyb3IoeSgyMjcpKTt2YXIgYmE9bmV3IFNldCxjYT17fTtmdW5jdGlvbiBkYShhLGIpe2VhKGEsYik7ZWEoYStcIkNhcHR1cmVcIixiKX1cbmZ1bmN0aW9uIGVhKGEsYil7Y2FbYV09Yjtmb3IoYT0wO2E8Yi5sZW5ndGg7YSsrKWJhLmFkZChiW2FdKX1cbnZhciBmYT0hKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudHx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCksaGE9L15bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRdWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXFwtLjAtOVxcdTAwQjdcXHUwMzAwLVxcdTAzNkZcXHUyMDNGLVxcdTIwNDBdKiQvLGlhPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksXG5qYT17fSxrYT17fTtmdW5jdGlvbiBsYShhKXtpZihpYS5jYWxsKGthLGEpKXJldHVybiEwO2lmKGlhLmNhbGwoamEsYSkpcmV0dXJuITE7aWYoaGEudGVzdChhKSlyZXR1cm4ga2FbYV09ITA7amFbYV09ITA7cmV0dXJuITF9ZnVuY3Rpb24gbWEoYSxiLGMsZCl7aWYobnVsbCE9PWMmJjA9PT1jLnR5cGUpcmV0dXJuITE7c3dpdGNoKHR5cGVvZiBiKXtjYXNlIFwiZnVuY3Rpb25cIjpjYXNlIFwic3ltYm9sXCI6cmV0dXJuITA7Y2FzZSBcImJvb2xlYW5cIjppZihkKXJldHVybiExO2lmKG51bGwhPT1jKXJldHVybiFjLmFjY2VwdHNCb29sZWFuczthPWEudG9Mb3dlckNhc2UoKS5zbGljZSgwLDUpO3JldHVyblwiZGF0YS1cIiE9PWEmJlwiYXJpYS1cIiE9PWE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBuYShhLGIsYyxkKXtpZihudWxsPT09Ynx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBifHxtYShhLGIsYyxkKSlyZXR1cm4hMDtpZihkKXJldHVybiExO2lmKG51bGwhPT1jKXN3aXRjaChjLnR5cGUpe2Nhc2UgMzpyZXR1cm4hYjtjYXNlIDQ6cmV0dXJuITE9PT1iO2Nhc2UgNTpyZXR1cm4gaXNOYU4oYik7Y2FzZSA2OnJldHVybiBpc05hTihiKXx8MT5ifXJldHVybiExfWZ1bmN0aW9uIEIoYSxiLGMsZCxlLGYsZyl7dGhpcy5hY2NlcHRzQm9vbGVhbnM9Mj09PWJ8fDM9PT1ifHw0PT09Yjt0aGlzLmF0dHJpYnV0ZU5hbWU9ZDt0aGlzLmF0dHJpYnV0ZU5hbWVzcGFjZT1lO3RoaXMubXVzdFVzZVByb3BlcnR5PWM7dGhpcy5wcm9wZXJ0eU5hbWU9YTt0aGlzLnR5cGU9Yjt0aGlzLnNhbml0aXplVVJMPWY7dGhpcy5yZW1vdmVFbXB0eVN0cmluZz1nfXZhciBEPXt9O1xuXCJjaGlsZHJlbiBkYW5nZXJvdXNseVNldElubmVySFRNTCBkZWZhdWx0VmFsdWUgZGVmYXVsdENoZWNrZWQgaW5uZXJIVE1MIHN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZyBzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcgc3R5bGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMCwhMSxhLG51bGwsITEsITEpfSk7W1tcImFjY2VwdENoYXJzZXRcIixcImFjY2VwdC1jaGFyc2V0XCJdLFtcImNsYXNzTmFtZVwiLFwiY2xhc3NcIl0sW1wiaHRtbEZvclwiLFwiZm9yXCJdLFtcImh0dHBFcXVpdlwiLFwiaHR0cC1lcXVpdlwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hWzBdO0RbYl09bmV3IEIoYiwxLCExLGFbMV0sbnVsbCwhMSwhMSl9KTtbXCJjb250ZW50RWRpdGFibGVcIixcImRyYWdnYWJsZVwiLFwic3BlbGxDaGVja1wiLFwidmFsdWVcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMiwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTtcbltcImF1dG9SZXZlcnNlXCIsXCJleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkXCIsXCJmb2N1c2FibGVcIixcInByZXNlcnZlQWxwaGFcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMiwhMSxhLG51bGwsITEsITEpfSk7XCJhbGxvd0Z1bGxTY3JlZW4gYXN5bmMgYXV0b0ZvY3VzIGF1dG9QbGF5IGNvbnRyb2xzIGRlZmF1bHQgZGVmZXIgZGlzYWJsZWQgZGlzYWJsZVBpY3R1cmVJblBpY3R1cmUgZGlzYWJsZVJlbW90ZVBsYXliYWNrIGZvcm1Ob1ZhbGlkYXRlIGhpZGRlbiBsb29wIG5vTW9kdWxlIG5vVmFsaWRhdGUgb3BlbiBwbGF5c0lubGluZSByZWFkT25seSByZXF1aXJlZCByZXZlcnNlZCBzY29wZWQgc2VhbWxlc3MgaXRlbVNjb3BlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDMsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEsITEpfSk7XG5bXCJjaGVja2VkXCIsXCJtdWx0aXBsZVwiLFwibXV0ZWRcIixcInNlbGVjdGVkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDMsITAsYSxudWxsLCExLCExKX0pO1tcImNhcHR1cmVcIixcImRvd25sb2FkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDQsITEsYSxudWxsLCExLCExKX0pO1tcImNvbHNcIixcInJvd3NcIixcInNpemVcIixcInNwYW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsNiwhMSxhLG51bGwsITEsITEpfSk7W1wicm93U3BhblwiLFwic3RhcnRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsNSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTt2YXIgb2E9L1tcXC06XShbYS16XSkvZztmdW5jdGlvbiBwYShhKXtyZXR1cm4gYVsxXS50b1VwcGVyQ2FzZSgpfVxuXCJhY2NlbnQtaGVpZ2h0IGFsaWdubWVudC1iYXNlbGluZSBhcmFiaWMtZm9ybSBiYXNlbGluZS1zaGlmdCBjYXAtaGVpZ2h0IGNsaXAtcGF0aCBjbGlwLXJ1bGUgY29sb3ItaW50ZXJwb2xhdGlvbiBjb2xvci1pbnRlcnBvbGF0aW9uLWZpbHRlcnMgY29sb3ItcHJvZmlsZSBjb2xvci1yZW5kZXJpbmcgZG9taW5hbnQtYmFzZWxpbmUgZW5hYmxlLWJhY2tncm91bmQgZmlsbC1vcGFjaXR5IGZpbGwtcnVsZSBmbG9vZC1jb2xvciBmbG9vZC1vcGFjaXR5IGZvbnQtZmFtaWx5IGZvbnQtc2l6ZSBmb250LXNpemUtYWRqdXN0IGZvbnQtc3RyZXRjaCBmb250LXN0eWxlIGZvbnQtdmFyaWFudCBmb250LXdlaWdodCBnbHlwaC1uYW1lIGdseXBoLW9yaWVudGF0aW9uLWhvcml6b250YWwgZ2x5cGgtb3JpZW50YXRpb24tdmVydGljYWwgaG9yaXotYWR2LXggaG9yaXotb3JpZ2luLXggaW1hZ2UtcmVuZGVyaW5nIGxldHRlci1zcGFjaW5nIGxpZ2h0aW5nLWNvbG9yIG1hcmtlci1lbmQgbWFya2VyLW1pZCBtYXJrZXItc3RhcnQgb3ZlcmxpbmUtcG9zaXRpb24gb3ZlcmxpbmUtdGhpY2tuZXNzIHBhaW50LW9yZGVyIHBhbm9zZS0xIHBvaW50ZXItZXZlbnRzIHJlbmRlcmluZy1pbnRlbnQgc2hhcGUtcmVuZGVyaW5nIHN0b3AtY29sb3Igc3RvcC1vcGFjaXR5IHN0cmlrZXRocm91Z2gtcG9zaXRpb24gc3RyaWtldGhyb3VnaC10aGlja25lc3Mgc3Ryb2tlLWRhc2hhcnJheSBzdHJva2UtZGFzaG9mZnNldCBzdHJva2UtbGluZWNhcCBzdHJva2UtbGluZWpvaW4gc3Ryb2tlLW1pdGVybGltaXQgc3Ryb2tlLW9wYWNpdHkgc3Ryb2tlLXdpZHRoIHRleHQtYW5jaG9yIHRleHQtZGVjb3JhdGlvbiB0ZXh0LXJlbmRlcmluZyB1bmRlcmxpbmUtcG9zaXRpb24gdW5kZXJsaW5lLXRoaWNrbmVzcyB1bmljb2RlLWJpZGkgdW5pY29kZS1yYW5nZSB1bml0cy1wZXItZW0gdi1hbHBoYWJldGljIHYtaGFuZ2luZyB2LWlkZW9ncmFwaGljIHYtbWF0aGVtYXRpY2FsIHZlY3Rvci1lZmZlY3QgdmVydC1hZHYteSB2ZXJ0LW9yaWdpbi14IHZlcnQtb3JpZ2luLXkgd29yZC1zcGFjaW5nIHdyaXRpbmctbW9kZSB4bWxuczp4bGluayB4LWhlaWdodFwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShvYSxcbnBhKTtEW2JdPW5ldyBCKGIsMSwhMSxhLG51bGwsITEsITEpfSk7XCJ4bGluazphY3R1YXRlIHhsaW5rOmFyY3JvbGUgeGxpbms6cm9sZSB4bGluazpzaG93IHhsaW5rOnRpdGxlIHhsaW5rOnR5cGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2Uob2EscGEpO0RbYl09bmV3IEIoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsITEsITEpfSk7W1wieG1sOmJhc2VcIixcInhtbDpsYW5nXCIsXCJ4bWw6c3BhY2VcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2Uob2EscGEpO0RbYl09bmV3IEIoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2VcIiwhMSwhMSl9KTtbXCJ0YWJJbmRleFwiLFwiY3Jvc3NPcmlnaW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTtcbkQueGxpbmtIcmVmPW5ldyBCKFwieGxpbmtIcmVmXCIsMSwhMSxcInhsaW5rOmhyZWZcIixcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwhMCwhMSk7W1wic3JjXCIsXCJocmVmXCIsXCJhY3Rpb25cIixcImZvcm1BY3Rpb25cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMCwhMCl9KTtcbmZ1bmN0aW9uIHFhKGEsYixjLGQpe3ZhciBlPUQuaGFzT3duUHJvcGVydHkoYik/RFtiXTpudWxsO3ZhciBmPW51bGwhPT1lPzA9PT1lLnR5cGU6ZD8hMTohKDI8Yi5sZW5ndGgpfHxcIm9cIiE9PWJbMF0mJlwiT1wiIT09YlswXXx8XCJuXCIhPT1iWzFdJiZcIk5cIiE9PWJbMV0/ITE6ITA7Znx8KG5hKGIsYyxlLGQpJiYoYz1udWxsKSxkfHxudWxsPT09ZT9sYShiKSYmKG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOmEuc2V0QXR0cmlidXRlKGIsXCJcIitjKSk6ZS5tdXN0VXNlUHJvcGVydHk/YVtlLnByb3BlcnR5TmFtZV09bnVsbD09PWM/Mz09PWUudHlwZT8hMTpcIlwiOmM6KGI9ZS5hdHRyaWJ1dGVOYW1lLGQ9ZS5hdHRyaWJ1dGVOYW1lc3BhY2UsbnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6KGU9ZS50eXBlLGM9Mz09PWV8fDQ9PT1lJiYhMD09PWM/XCJcIjpcIlwiK2MsZD9hLnNldEF0dHJpYnV0ZU5TKGQsYixjKTphLnNldEF0dHJpYnV0ZShiLGMpKSkpfVxudmFyIHJhPWFhLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVELHNhPTYwMTAzLHRhPTYwMTA2LHVhPTYwMTA3LHdhPTYwMTA4LHhhPTYwMTE0LHlhPTYwMTA5LHphPTYwMTEwLEFhPTYwMTEyLEJhPTYwMTEzLENhPTYwMTIwLERhPTYwMTE1LEVhPTYwMTE2LEZhPTYwMTIxLEdhPTYwMTI4LEhhPTYwMTI5LElhPTYwMTMwLEphPTYwMTMxO1xuaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcil7dmFyIEU9U3ltYm9sLmZvcjtzYT1FKFwicmVhY3QuZWxlbWVudFwiKTt0YT1FKFwicmVhY3QucG9ydGFsXCIpO3VhPUUoXCJyZWFjdC5mcmFnbWVudFwiKTt3YT1FKFwicmVhY3Quc3RyaWN0X21vZGVcIik7eGE9RShcInJlYWN0LnByb2ZpbGVyXCIpO3lhPUUoXCJyZWFjdC5wcm92aWRlclwiKTt6YT1FKFwicmVhY3QuY29udGV4dFwiKTtBYT1FKFwicmVhY3QuZm9yd2FyZF9yZWZcIik7QmE9RShcInJlYWN0LnN1c3BlbnNlXCIpO0NhPUUoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpO0RhPUUoXCJyZWFjdC5tZW1vXCIpO0VhPUUoXCJyZWFjdC5sYXp5XCIpO0ZhPUUoXCJyZWFjdC5ibG9ja1wiKTtFKFwicmVhY3Quc2NvcGVcIik7R2E9RShcInJlYWN0Lm9wYXF1ZS5pZFwiKTtIYT1FKFwicmVhY3QuZGVidWdfdHJhY2VfbW9kZVwiKTtJYT1FKFwicmVhY3Qub2Zmc2NyZWVuXCIpO0phPUUoXCJyZWFjdC5sZWdhY3lfaGlkZGVuXCIpfVxudmFyIEthPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBMYShhKXtpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhKXJldHVybiBudWxsO2E9S2EmJmFbS2FdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9dmFyIE1hO2Z1bmN0aW9uIE5hKGEpe2lmKHZvaWQgMD09PU1hKXRyeXt0aHJvdyBFcnJvcigpO31jYXRjaChjKXt2YXIgYj1jLnN0YWNrLnRyaW0oKS5tYXRjaCgvXFxuKCAqKGF0ICk/KS8pO01hPWImJmJbMV18fFwiXCJ9cmV0dXJuXCJcXG5cIitNYSthfXZhciBPYT0hMTtcbmZ1bmN0aW9uIFBhKGEsYil7aWYoIWF8fE9hKXJldHVyblwiXCI7T2E9ITA7dmFyIGM9RXJyb3IucHJlcGFyZVN0YWNrVHJhY2U7RXJyb3IucHJlcGFyZVN0YWNrVHJhY2U9dm9pZCAwO3RyeXtpZihiKWlmKGI9ZnVuY3Rpb24oKXt0aHJvdyBFcnJvcigpO30sT2JqZWN0LmRlZmluZVByb3BlcnR5KGIucHJvdG90eXBlLFwicHJvcHNcIix7c2V0OmZ1bmN0aW9uKCl7dGhyb3cgRXJyb3IoKTt9fSksXCJvYmplY3RcIj09PXR5cGVvZiBSZWZsZWN0JiZSZWZsZWN0LmNvbnN0cnVjdCl7dHJ5e1JlZmxlY3QuY29uc3RydWN0KGIsW10pfWNhdGNoKGspe3ZhciBkPWt9UmVmbGVjdC5jb25zdHJ1Y3QoYSxbXSxiKX1lbHNle3RyeXtiLmNhbGwoKX1jYXRjaChrKXtkPWt9YS5jYWxsKGIucHJvdG90eXBlKX1lbHNle3RyeXt0aHJvdyBFcnJvcigpO31jYXRjaChrKXtkPWt9YSgpfX1jYXRjaChrKXtpZihrJiZkJiZcInN0cmluZ1wiPT09dHlwZW9mIGsuc3RhY2spe2Zvcih2YXIgZT1rLnN0YWNrLnNwbGl0KFwiXFxuXCIpLFxuZj1kLnN0YWNrLnNwbGl0KFwiXFxuXCIpLGc9ZS5sZW5ndGgtMSxoPWYubGVuZ3RoLTE7MTw9ZyYmMDw9aCYmZVtnXSE9PWZbaF07KWgtLTtmb3IoOzE8PWcmJjA8PWg7Zy0tLGgtLSlpZihlW2ddIT09ZltoXSl7aWYoMSE9PWd8fDEhPT1oKXtkbyBpZihnLS0saC0tLDA+aHx8ZVtnXSE9PWZbaF0pcmV0dXJuXCJcXG5cIitlW2ddLnJlcGxhY2UoXCIgYXQgbmV3IFwiLFwiIGF0IFwiKTt3aGlsZSgxPD1nJiYwPD1oKX1icmVha319fWZpbmFsbHl7T2E9ITEsRXJyb3IucHJlcGFyZVN0YWNrVHJhY2U9Y31yZXR1cm4oYT1hP2EuZGlzcGxheU5hbWV8fGEubmFtZTpcIlwiKT9OYShhKTpcIlwifVxuZnVuY3Rpb24gUWEoYSl7c3dpdGNoKGEudGFnKXtjYXNlIDU6cmV0dXJuIE5hKGEudHlwZSk7Y2FzZSAxNjpyZXR1cm4gTmEoXCJMYXp5XCIpO2Nhc2UgMTM6cmV0dXJuIE5hKFwiU3VzcGVuc2VcIik7Y2FzZSAxOTpyZXR1cm4gTmEoXCJTdXNwZW5zZUxpc3RcIik7Y2FzZSAwOmNhc2UgMjpjYXNlIDE1OnJldHVybiBhPVBhKGEudHlwZSwhMSksYTtjYXNlIDExOnJldHVybiBhPVBhKGEudHlwZS5yZW5kZXIsITEpLGE7Y2FzZSAyMjpyZXR1cm4gYT1QYShhLnR5cGUuX3JlbmRlciwhMSksYTtjYXNlIDE6cmV0dXJuIGE9UGEoYS50eXBlLCEwKSxhO2RlZmF1bHQ6cmV0dXJuXCJcIn19XG5mdW5jdGlvbiBSYShhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBhLmRpc3BsYXlOYW1lfHxhLm5hbWV8fG51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKXJldHVybiBhO3N3aXRjaChhKXtjYXNlIHVhOnJldHVyblwiRnJhZ21lbnRcIjtjYXNlIHRhOnJldHVyblwiUG9ydGFsXCI7Y2FzZSB4YTpyZXR1cm5cIlByb2ZpbGVyXCI7Y2FzZSB3YTpyZXR1cm5cIlN0cmljdE1vZGVcIjtjYXNlIEJhOnJldHVyblwiU3VzcGVuc2VcIjtjYXNlIENhOnJldHVyblwiU3VzcGVuc2VMaXN0XCJ9aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHphOnJldHVybihhLmRpc3BsYXlOYW1lfHxcIkNvbnRleHRcIikrXCIuQ29uc3VtZXJcIjtjYXNlIHlhOnJldHVybihhLl9jb250ZXh0LmRpc3BsYXlOYW1lfHxcIkNvbnRleHRcIikrXCIuUHJvdmlkZXJcIjtjYXNlIEFhOnZhciBiPWEucmVuZGVyO2I9Yi5kaXNwbGF5TmFtZXx8Yi5uYW1lfHxcIlwiO1xucmV0dXJuIGEuZGlzcGxheU5hbWV8fChcIlwiIT09Yj9cIkZvcndhcmRSZWYoXCIrYitcIilcIjpcIkZvcndhcmRSZWZcIik7Y2FzZSBEYTpyZXR1cm4gUmEoYS50eXBlKTtjYXNlIEZhOnJldHVybiBSYShhLl9yZW5kZXIpO2Nhc2UgRWE6Yj1hLl9wYXlsb2FkO2E9YS5faW5pdDt0cnl7cmV0dXJuIFJhKGEoYikpfWNhdGNoKGMpe319cmV0dXJuIG51bGx9ZnVuY3Rpb24gU2EoYSl7c3dpdGNoKHR5cGVvZiBhKXtjYXNlIFwiYm9vbGVhblwiOmNhc2UgXCJudW1iZXJcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJ1bmRlZmluZWRcIjpyZXR1cm4gYTtkZWZhdWx0OnJldHVyblwiXCJ9fWZ1bmN0aW9uIFRhKGEpe3ZhciBiPWEudHlwZTtyZXR1cm4oYT1hLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09YS50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09Ynx8XCJyYWRpb1wiPT09Yil9XG5mdW5jdGlvbiBVYShhKXt2YXIgYj1UYShhKT9cImNoZWNrZWRcIjpcInZhbHVlXCIsYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGEuY29uc3RydWN0b3IucHJvdG90eXBlLGIpLGQ9XCJcIithW2JdO2lmKCFhLmhhc093blByb3BlcnR5KGIpJiZcInVuZGVmaW5lZFwiIT09dHlwZW9mIGMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmdldCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuc2V0KXt2YXIgZT1jLmdldCxmPWMuc2V0O09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZS5jYWxsKHRoaXMpfSxzZXQ6ZnVuY3Rpb24oYSl7ZD1cIlwiK2E7Zi5jYWxsKHRoaXMsYSl9fSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7ZW51bWVyYWJsZTpjLmVudW1lcmFibGV9KTtyZXR1cm57Z2V0VmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gZH0sc2V0VmFsdWU6ZnVuY3Rpb24oYSl7ZD1cIlwiK2F9LHN0b3BUcmFja2luZzpmdW5jdGlvbigpe2EuX3ZhbHVlVHJhY2tlcj1cbm51bGw7ZGVsZXRlIGFbYl19fX19ZnVuY3Rpb24gVmEoYSl7YS5fdmFsdWVUcmFja2VyfHwoYS5fdmFsdWVUcmFja2VyPVVhKGEpKX1mdW5jdGlvbiBXYShhKXtpZighYSlyZXR1cm4hMTt2YXIgYj1hLl92YWx1ZVRyYWNrZXI7aWYoIWIpcmV0dXJuITA7dmFyIGM9Yi5nZXRWYWx1ZSgpO3ZhciBkPVwiXCI7YSYmKGQ9VGEoYSk/YS5jaGVja2VkP1widHJ1ZVwiOlwiZmFsc2VcIjphLnZhbHVlKTthPWQ7cmV0dXJuIGEhPT1jPyhiLnNldFZhbHVlKGEpLCEwKTohMX1mdW5jdGlvbiBYYShhKXthPWF8fChcInVuZGVmaW5lZFwiIT09dHlwZW9mIGRvY3VtZW50P2RvY3VtZW50OnZvaWQgMCk7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBhKXJldHVybiBudWxsO3RyeXtyZXR1cm4gYS5hY3RpdmVFbGVtZW50fHxhLmJvZHl9Y2F0Y2goYil7cmV0dXJuIGEuYm9keX19XG5mdW5jdGlvbiBZYShhLGIpe3ZhciBjPWIuY2hlY2tlZDtyZXR1cm4gbSh7fSxiLHtkZWZhdWx0Q2hlY2tlZDp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCx2YWx1ZTp2b2lkIDAsY2hlY2tlZDpudWxsIT1jP2M6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkfSl9ZnVuY3Rpb24gWmEoYSxiKXt2YXIgYz1udWxsPT1iLmRlZmF1bHRWYWx1ZT9cIlwiOmIuZGVmYXVsdFZhbHVlLGQ9bnVsbCE9Yi5jaGVja2VkP2IuY2hlY2tlZDpiLmRlZmF1bHRDaGVja2VkO2M9U2EobnVsbCE9Yi52YWx1ZT9iLnZhbHVlOmMpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbENoZWNrZWQ6ZCxpbml0aWFsVmFsdWU6Yyxjb250cm9sbGVkOlwiY2hlY2tib3hcIj09PWIudHlwZXx8XCJyYWRpb1wiPT09Yi50eXBlP251bGwhPWIuY2hlY2tlZDpudWxsIT1iLnZhbHVlfX1mdW5jdGlvbiAkYShhLGIpe2I9Yi5jaGVja2VkO251bGwhPWImJnFhKGEsXCJjaGVja2VkXCIsYiwhMSl9XG5mdW5jdGlvbiBhYihhLGIpeyRhKGEsYik7dmFyIGM9U2EoYi52YWx1ZSksZD1iLnR5cGU7aWYobnVsbCE9YylpZihcIm51bWJlclwiPT09ZCl7aWYoMD09PWMmJlwiXCI9PT1hLnZhbHVlfHxhLnZhbHVlIT1jKWEudmFsdWU9XCJcIitjfWVsc2UgYS52YWx1ZSE9PVwiXCIrYyYmKGEudmFsdWU9XCJcIitjKTtlbHNlIGlmKFwic3VibWl0XCI9PT1kfHxcInJlc2V0XCI9PT1kKXthLnJlbW92ZUF0dHJpYnV0ZShcInZhbHVlXCIpO3JldHVybn1iLmhhc093blByb3BlcnR5KFwidmFsdWVcIik/YmIoYSxiLnR5cGUsYyk6Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSYmYmIoYSxiLnR5cGUsU2EoYi5kZWZhdWx0VmFsdWUpKTtudWxsPT1iLmNoZWNrZWQmJm51bGwhPWIuZGVmYXVsdENoZWNrZWQmJihhLmRlZmF1bHRDaGVja2VkPSEhYi5kZWZhdWx0Q2hlY2tlZCl9XG5mdW5jdGlvbiBjYihhLGIsYyl7aWYoYi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpfHxiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpKXt2YXIgZD1iLnR5cGU7aWYoIShcInN1Ym1pdFwiIT09ZCYmXCJyZXNldFwiIT09ZHx8dm9pZCAwIT09Yi52YWx1ZSYmbnVsbCE9PWIudmFsdWUpKXJldHVybjtiPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTtjfHxiPT09YS52YWx1ZXx8KGEudmFsdWU9Yik7YS5kZWZhdWx0VmFsdWU9Yn1jPWEubmFtZTtcIlwiIT09YyYmKGEubmFtZT1cIlwiKTthLmRlZmF1bHRDaGVja2VkPSEhYS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkO1wiXCIhPT1jJiYoYS5uYW1lPWMpfVxuZnVuY3Rpb24gYmIoYSxiLGMpe2lmKFwibnVtYmVyXCIhPT1ifHxYYShhLm93bmVyRG9jdW1lbnQpIT09YSludWxsPT1jP2EuZGVmYXVsdFZhbHVlPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTphLmRlZmF1bHRWYWx1ZSE9PVwiXCIrYyYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrYyl9ZnVuY3Rpb24gZGIoYSl7dmFyIGI9XCJcIjthYS5DaGlsZHJlbi5mb3JFYWNoKGEsZnVuY3Rpb24oYSl7bnVsbCE9YSYmKGIrPWEpfSk7cmV0dXJuIGJ9ZnVuY3Rpb24gZWIoYSxiKXthPW0oe2NoaWxkcmVuOnZvaWQgMH0sYik7aWYoYj1kYihiLmNoaWxkcmVuKSlhLmNoaWxkcmVuPWI7cmV0dXJuIGF9XG5mdW5jdGlvbiBmYihhLGIsYyxkKXthPWEub3B0aW9ucztpZihiKXtiPXt9O2Zvcih2YXIgZT0wO2U8Yy5sZW5ndGg7ZSsrKWJbXCIkXCIrY1tlXV09ITA7Zm9yKGM9MDtjPGEubGVuZ3RoO2MrKyllPWIuaGFzT3duUHJvcGVydHkoXCIkXCIrYVtjXS52YWx1ZSksYVtjXS5zZWxlY3RlZCE9PWUmJihhW2NdLnNlbGVjdGVkPWUpLGUmJmQmJihhW2NdLmRlZmF1bHRTZWxlY3RlZD0hMCl9ZWxzZXtjPVwiXCIrU2EoYyk7Yj1udWxsO2ZvcihlPTA7ZTxhLmxlbmd0aDtlKyspe2lmKGFbZV0udmFsdWU9PT1jKXthW2VdLnNlbGVjdGVkPSEwO2QmJihhW2VdLmRlZmF1bHRTZWxlY3RlZD0hMCk7cmV0dXJufW51bGwhPT1ifHxhW2VdLmRpc2FibGVkfHwoYj1hW2VdKX1udWxsIT09YiYmKGIuc2VsZWN0ZWQ9ITApfX1cbmZ1bmN0aW9uIGdiKGEsYil7aWYobnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCl0aHJvdyBFcnJvcih5KDkxKSk7cmV0dXJuIG0oe30sYix7dmFsdWU6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsY2hpbGRyZW46XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlfSl9ZnVuY3Rpb24gaGIoYSxiKXt2YXIgYz1iLnZhbHVlO2lmKG51bGw9PWMpe2M9Yi5jaGlsZHJlbjtiPWIuZGVmYXVsdFZhbHVlO2lmKG51bGwhPWMpe2lmKG51bGwhPWIpdGhyb3cgRXJyb3IoeSg5MikpO2lmKEFycmF5LmlzQXJyYXkoYykpe2lmKCEoMT49Yy5sZW5ndGgpKXRocm93IEVycm9yKHkoOTMpKTtjPWNbMF19Yj1jfW51bGw9PWImJihiPVwiXCIpO2M9Yn1hLl93cmFwcGVyU3RhdGU9e2luaXRpYWxWYWx1ZTpTYShjKX19XG5mdW5jdGlvbiBpYihhLGIpe3ZhciBjPVNhKGIudmFsdWUpLGQ9U2EoYi5kZWZhdWx0VmFsdWUpO251bGwhPWMmJihjPVwiXCIrYyxjIT09YS52YWx1ZSYmKGEudmFsdWU9YyksbnVsbD09Yi5kZWZhdWx0VmFsdWUmJmEuZGVmYXVsdFZhbHVlIT09YyYmKGEuZGVmYXVsdFZhbHVlPWMpKTtudWxsIT1kJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitkKX1mdW5jdGlvbiBqYihhKXt2YXIgYj1hLnRleHRDb250ZW50O2I9PT1hLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlJiZcIlwiIT09YiYmbnVsbCE9PWImJihhLnZhbHVlPWIpfXZhciBrYj17aHRtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIixtYXRobWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCIsc3ZnOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIn07XG5mdW5jdGlvbiBsYihhKXtzd2l0Y2goYSl7Y2FzZSBcInN2Z1wiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtjYXNlIFwibWF0aFwiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiO2RlZmF1bHQ6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCJ9fWZ1bmN0aW9uIG1iKGEsYil7cmV0dXJuIG51bGw9PWF8fFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YT9sYihiKTpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI9PT1hJiZcImZvcmVpZ25PYmplY3RcIj09PWI/XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI6YX1cbnZhciBuYixvYj1mdW5jdGlvbihhKXtyZXR1cm5cInVuZGVmaW5lZFwiIT09dHlwZW9mIE1TQXBwJiZNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbj9mdW5jdGlvbihiLGMsZCxlKXtNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbihmdW5jdGlvbigpe3JldHVybiBhKGIsYyxkLGUpfSl9OmF9KGZ1bmN0aW9uKGEsYil7aWYoYS5uYW1lc3BhY2VVUkkhPT1rYi5zdmd8fFwiaW5uZXJIVE1MXCJpbiBhKWEuaW5uZXJIVE1MPWI7ZWxzZXtuYj1uYnx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtuYi5pbm5lckhUTUw9XCI8c3ZnPlwiK2IudmFsdWVPZigpLnRvU3RyaW5nKCkrXCI8L3N2Zz5cIjtmb3IoYj1uYi5maXJzdENoaWxkO2EuZmlyc3RDaGlsZDspYS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpO2Zvcig7Yi5maXJzdENoaWxkOylhLmFwcGVuZENoaWxkKGIuZmlyc3RDaGlsZCl9fSk7XG5mdW5jdGlvbiBwYihhLGIpe2lmKGIpe3ZhciBjPWEuZmlyc3RDaGlsZDtpZihjJiZjPT09YS5sYXN0Q2hpbGQmJjM9PT1jLm5vZGVUeXBlKXtjLm5vZGVWYWx1ZT1iO3JldHVybn19YS50ZXh0Q29udGVudD1ifVxudmFyIHFiPXthbmltYXRpb25JdGVyYXRpb25Db3VudDohMCxib3JkZXJJbWFnZU91dHNldDohMCxib3JkZXJJbWFnZVNsaWNlOiEwLGJvcmRlckltYWdlV2lkdGg6ITAsYm94RmxleDohMCxib3hGbGV4R3JvdXA6ITAsYm94T3JkaW5hbEdyb3VwOiEwLGNvbHVtbkNvdW50OiEwLGNvbHVtbnM6ITAsZmxleDohMCxmbGV4R3JvdzohMCxmbGV4UG9zaXRpdmU6ITAsZmxleFNocmluazohMCxmbGV4TmVnYXRpdmU6ITAsZmxleE9yZGVyOiEwLGdyaWRBcmVhOiEwLGdyaWRSb3c6ITAsZ3JpZFJvd0VuZDohMCxncmlkUm93U3BhbjohMCxncmlkUm93U3RhcnQ6ITAsZ3JpZENvbHVtbjohMCxncmlkQ29sdW1uRW5kOiEwLGdyaWRDb2x1bW5TcGFuOiEwLGdyaWRDb2x1bW5TdGFydDohMCxmb250V2VpZ2h0OiEwLGxpbmVDbGFtcDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JkZXI6ITAsb3JwaGFuczohMCx0YWJTaXplOiEwLHdpZG93czohMCx6SW5kZXg6ITAsem9vbTohMCxmaWxsT3BhY2l0eTohMCxcbmZsb29kT3BhY2l0eTohMCxzdG9wT3BhY2l0eTohMCxzdHJva2VEYXNoYXJyYXk6ITAsc3Ryb2tlRGFzaG9mZnNldDohMCxzdHJva2VNaXRlcmxpbWl0OiEwLHN0cm9rZU9wYWNpdHk6ITAsc3Ryb2tlV2lkdGg6ITB9LHJiPVtcIldlYmtpdFwiLFwibXNcIixcIk1velwiLFwiT1wiXTtPYmplY3Qua2V5cyhxYikuZm9yRWFjaChmdW5jdGlvbihhKXtyYi5mb3JFYWNoKGZ1bmN0aW9uKGIpe2I9YithLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Euc3Vic3RyaW5nKDEpO3FiW2JdPXFiW2FdfSl9KTtmdW5jdGlvbiBzYihhLGIsYyl7cmV0dXJuIG51bGw9PWJ8fFwiYm9vbGVhblwiPT09dHlwZW9mIGJ8fFwiXCI9PT1iP1wiXCI6Y3x8XCJudW1iZXJcIiE9PXR5cGVvZiBifHwwPT09Ynx8cWIuaGFzT3duUHJvcGVydHkoYSkmJnFiW2FdPyhcIlwiK2IpLnRyaW0oKTpiK1wicHhcIn1cbmZ1bmN0aW9uIHRiKGEsYil7YT1hLnN0eWxlO2Zvcih2YXIgYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPTA9PT1jLmluZGV4T2YoXCItLVwiKSxlPXNiKGMsYltjXSxkKTtcImZsb2F0XCI9PT1jJiYoYz1cImNzc0Zsb2F0XCIpO2Q/YS5zZXRQcm9wZXJ0eShjLGUpOmFbY109ZX19dmFyIHViPW0oe21lbnVpdGVtOiEwfSx7YXJlYTohMCxiYXNlOiEwLGJyOiEwLGNvbDohMCxlbWJlZDohMCxocjohMCxpbWc6ITAsaW5wdXQ6ITAsa2V5Z2VuOiEwLGxpbms6ITAsbWV0YTohMCxwYXJhbTohMCxzb3VyY2U6ITAsdHJhY2s6ITAsd2JyOiEwfSk7XG5mdW5jdGlvbiB2YihhLGIpe2lmKGIpe2lmKHViW2FdJiYobnVsbCE9Yi5jaGlsZHJlbnx8bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCkpdGhyb3cgRXJyb3IoeSgxMzcsYSkpO2lmKG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpe2lmKG51bGwhPWIuY2hpbGRyZW4pdGhyb3cgRXJyb3IoeSg2MCkpO2lmKCEoXCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZcIl9faHRtbFwiaW4gYi5kYW5nZXJvdXNseVNldElubmVySFRNTCkpdGhyb3cgRXJyb3IoeSg2MSkpO31pZihudWxsIT1iLnN0eWxlJiZcIm9iamVjdFwiIT09dHlwZW9mIGIuc3R5bGUpdGhyb3cgRXJyb3IoeSg2MikpO319XG5mdW5jdGlvbiB3YihhLGIpe2lmKC0xPT09YS5pbmRleE9mKFwiLVwiKSlyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGIuaXM7c3dpdGNoKGEpe2Nhc2UgXCJhbm5vdGF0aW9uLXhtbFwiOmNhc2UgXCJjb2xvci1wcm9maWxlXCI6Y2FzZSBcImZvbnQtZmFjZVwiOmNhc2UgXCJmb250LWZhY2Utc3JjXCI6Y2FzZSBcImZvbnQtZmFjZS11cmlcIjpjYXNlIFwiZm9udC1mYWNlLWZvcm1hdFwiOmNhc2UgXCJmb250LWZhY2UtbmFtZVwiOmNhc2UgXCJtaXNzaW5nLWdseXBoXCI6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMH19ZnVuY3Rpb24geGIoYSl7YT1hLnRhcmdldHx8YS5zcmNFbGVtZW50fHx3aW5kb3c7YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCYmKGE9YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCk7cmV0dXJuIDM9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphfXZhciB5Yj1udWxsLHpiPW51bGwsQWI9bnVsbDtcbmZ1bmN0aW9uIEJiKGEpe2lmKGE9Q2IoYSkpe2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiB5Yil0aHJvdyBFcnJvcih5KDI4MCkpO3ZhciBiPWEuc3RhdGVOb2RlO2ImJihiPURiKGIpLHliKGEuc3RhdGVOb2RlLGEudHlwZSxiKSl9fWZ1bmN0aW9uIEViKGEpe3piP0FiP0FiLnB1c2goYSk6QWI9W2FdOnpiPWF9ZnVuY3Rpb24gRmIoKXtpZih6Yil7dmFyIGE9emIsYj1BYjtBYj16Yj1udWxsO0JiKGEpO2lmKGIpZm9yKGE9MDthPGIubGVuZ3RoO2ErKylCYihiW2FdKX19ZnVuY3Rpb24gR2IoYSxiKXtyZXR1cm4gYShiKX1mdW5jdGlvbiBIYihhLGIsYyxkLGUpe3JldHVybiBhKGIsYyxkLGUpfWZ1bmN0aW9uIEliKCl7fXZhciBKYj1HYixLYj0hMSxMYj0hMTtmdW5jdGlvbiBNYigpe2lmKG51bGwhPT16Ynx8bnVsbCE9PUFiKUliKCksRmIoKX1cbmZ1bmN0aW9uIE5iKGEsYixjKXtpZihMYilyZXR1cm4gYShiLGMpO0xiPSEwO3RyeXtyZXR1cm4gSmIoYSxiLGMpfWZpbmFsbHl7TGI9ITEsTWIoKX19XG5mdW5jdGlvbiBPYihhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2lmKG51bGw9PT1jKXJldHVybiBudWxsO3ZhciBkPURiKGMpO2lmKG51bGw9PT1kKXJldHVybiBudWxsO2M9ZFtiXTthOnN3aXRjaChiKXtjYXNlIFwib25DbGlja1wiOmNhc2UgXCJvbkNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbkRvdWJsZUNsaWNrXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VEb3duXCI6Y2FzZSBcIm9uTW91c2VEb3duQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlTW92ZVwiOmNhc2UgXCJvbk1vdXNlTW92ZUNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZVVwXCI6Y2FzZSBcIm9uTW91c2VVcENhcHR1cmVcIjpjYXNlIFwib25Nb3VzZUVudGVyXCI6KGQ9IWQuZGlzYWJsZWQpfHwoYT1hLnR5cGUsZD0hKFwiYnV0dG9uXCI9PT1hfHxcImlucHV0XCI9PT1hfHxcInNlbGVjdFwiPT09YXx8XCJ0ZXh0YXJlYVwiPT09YSkpO2E9IWQ7YnJlYWsgYTtkZWZhdWx0OmE9ITF9aWYoYSlyZXR1cm4gbnVsbDtpZihjJiZcImZ1bmN0aW9uXCIhPT1cbnR5cGVvZiBjKXRocm93IEVycm9yKHkoMjMxLGIsdHlwZW9mIGMpKTtyZXR1cm4gY312YXIgUGI9ITE7aWYoZmEpdHJ5e3ZhciBRYj17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoUWIsXCJwYXNzaXZlXCIse2dldDpmdW5jdGlvbigpe1BiPSEwfX0pO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwidGVzdFwiLFFiLFFiKTt3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRlc3RcIixRYixRYil9Y2F0Y2goYSl7UGI9ITF9ZnVuY3Rpb24gUmIoYSxiLGMsZCxlLGYsZyxoLGspe3ZhciBsPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywzKTt0cnl7Yi5hcHBseShjLGwpfWNhdGNoKG4pe3RoaXMub25FcnJvcihuKX19dmFyIFNiPSExLFRiPW51bGwsVWI9ITEsVmI9bnVsbCxXYj17b25FcnJvcjpmdW5jdGlvbihhKXtTYj0hMDtUYj1hfX07ZnVuY3Rpb24gWGIoYSxiLGMsZCxlLGYsZyxoLGspe1NiPSExO1RiPW51bGw7UmIuYXBwbHkoV2IsYXJndW1lbnRzKX1cbmZ1bmN0aW9uIFliKGEsYixjLGQsZSxmLGcsaCxrKXtYYi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7aWYoU2Ipe2lmKFNiKXt2YXIgbD1UYjtTYj0hMTtUYj1udWxsfWVsc2UgdGhyb3cgRXJyb3IoeSgxOTgpKTtVYnx8KFViPSEwLFZiPWwpfX1mdW5jdGlvbiBaYihhKXt2YXIgYj1hLGM9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2IucmV0dXJuOyliPWIucmV0dXJuO2Vsc2V7YT1iO2RvIGI9YSwwIT09KGIuZmxhZ3MmMTAyNikmJihjPWIucmV0dXJuKSxhPWIucmV0dXJuO3doaWxlKGEpfXJldHVybiAzPT09Yi50YWc/YzpudWxsfWZ1bmN0aW9uICRiKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPWEubWVtb2l6ZWRTdGF0ZTtudWxsPT09YiYmKGE9YS5hbHRlcm5hdGUsbnVsbCE9PWEmJihiPWEubWVtb2l6ZWRTdGF0ZSkpO2lmKG51bGwhPT1iKXJldHVybiBiLmRlaHlkcmF0ZWR9cmV0dXJuIG51bGx9ZnVuY3Rpb24gYWMoYSl7aWYoWmIoYSkhPT1hKXRocm93IEVycm9yKHkoMTg4KSk7fVxuZnVuY3Rpb24gYmMoYSl7dmFyIGI9YS5hbHRlcm5hdGU7aWYoIWIpe2I9WmIoYSk7aWYobnVsbD09PWIpdGhyb3cgRXJyb3IoeSgxODgpKTtyZXR1cm4gYiE9PWE/bnVsbDphfWZvcih2YXIgYz1hLGQ9Yjs7KXt2YXIgZT1jLnJldHVybjtpZihudWxsPT09ZSlicmVhazt2YXIgZj1lLmFsdGVybmF0ZTtpZihudWxsPT09Zil7ZD1lLnJldHVybjtpZihudWxsIT09ZCl7Yz1kO2NvbnRpbnVlfWJyZWFrfWlmKGUuY2hpbGQ9PT1mLmNoaWxkKXtmb3IoZj1lLmNoaWxkO2Y7KXtpZihmPT09YylyZXR1cm4gYWMoZSksYTtpZihmPT09ZClyZXR1cm4gYWMoZSksYjtmPWYuc2libGluZ310aHJvdyBFcnJvcih5KDE4OCkpO31pZihjLnJldHVybiE9PWQucmV0dXJuKWM9ZSxkPWY7ZWxzZXtmb3IodmFyIGc9ITEsaD1lLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWU7ZD1mO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZTtjPWY7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpe2ZvcihoPWYuY2hpbGQ7aDspe2lmKGg9PT1cbmMpe2c9ITA7Yz1mO2Q9ZTticmVha31pZihoPT09ZCl7Zz0hMDtkPWY7Yz1lO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXRocm93IEVycm9yKHkoMTg5KSk7fX1pZihjLmFsdGVybmF0ZSE9PWQpdGhyb3cgRXJyb3IoeSgxOTApKTt9aWYoMyE9PWMudGFnKXRocm93IEVycm9yKHkoMTg4KSk7cmV0dXJuIGMuc3RhdGVOb2RlLmN1cnJlbnQ9PT1jP2E6Yn1mdW5jdGlvbiBjYyhhKXthPWJjKGEpO2lmKCFhKXJldHVybiBudWxsO2Zvcih2YXIgYj1hOzspe2lmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXJldHVybiBiO2lmKGIuY2hpbGQpYi5jaGlsZC5yZXR1cm49YixiPWIuY2hpbGQ7ZWxzZXtpZihiPT09YSlicmVhaztmb3IoOyFiLnNpYmxpbmc7KXtpZighYi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fXJldHVybiBudWxsfVxuZnVuY3Rpb24gZGMoYSxiKXtmb3IodmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWI7KXtpZihiPT09YXx8Yj09PWMpcmV0dXJuITA7Yj1iLnJldHVybn1yZXR1cm4hMX12YXIgZWMsZmMsZ2MsaGMsaWM9ITEsamM9W10sa2M9bnVsbCxsYz1udWxsLG1jPW51bGwsbmM9bmV3IE1hcCxvYz1uZXcgTWFwLHBjPVtdLHFjPVwibW91c2Vkb3duIG1vdXNldXAgdG91Y2hjYW5jZWwgdG91Y2hlbmQgdG91Y2hzdGFydCBhdXhjbGljayBkYmxjbGljayBwb2ludGVyY2FuY2VsIHBvaW50ZXJkb3duIHBvaW50ZXJ1cCBkcmFnZW5kIGRyYWdzdGFydCBkcm9wIGNvbXBvc2l0aW9uZW5kIGNvbXBvc2l0aW9uc3RhcnQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBpbnB1dCB0ZXh0SW5wdXQgY29weSBjdXQgcGFzdGUgY2xpY2sgY2hhbmdlIGNvbnRleHRtZW51IHJlc2V0IHN1Ym1pdFwiLnNwbGl0KFwiIFwiKTtcbmZ1bmN0aW9uIHJjKGEsYixjLGQsZSl7cmV0dXJue2Jsb2NrZWRPbjphLGRvbUV2ZW50TmFtZTpiLGV2ZW50U3lzdGVtRmxhZ3M6Y3wxNixuYXRpdmVFdmVudDplLHRhcmdldENvbnRhaW5lcnM6W2RdfX1mdW5jdGlvbiBzYyhhLGIpe3N3aXRjaChhKXtjYXNlIFwiZm9jdXNpblwiOmNhc2UgXCJmb2N1c291dFwiOmtjPW51bGw7YnJlYWs7Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnbGVhdmVcIjpsYz1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwibW91c2VvdXRcIjptYz1udWxsO2JyZWFrO2Nhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVyb3V0XCI6bmMuZGVsZXRlKGIucG9pbnRlcklkKTticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6b2MuZGVsZXRlKGIucG9pbnRlcklkKX19XG5mdW5jdGlvbiB0YyhhLGIsYyxkLGUsZil7aWYobnVsbD09PWF8fGEubmF0aXZlRXZlbnQhPT1mKXJldHVybiBhPXJjKGIsYyxkLGUsZiksbnVsbCE9PWImJihiPUNiKGIpLG51bGwhPT1iJiZmYyhiKSksYTthLmV2ZW50U3lzdGVtRmxhZ3N8PWQ7Yj1hLnRhcmdldENvbnRhaW5lcnM7bnVsbCE9PWUmJi0xPT09Yi5pbmRleE9mKGUpJiZiLnB1c2goZSk7cmV0dXJuIGF9XG5mdW5jdGlvbiB1YyhhLGIsYyxkLGUpe3N3aXRjaChiKXtjYXNlIFwiZm9jdXNpblwiOnJldHVybiBrYz10YyhrYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJkcmFnZW50ZXJcIjpyZXR1cm4gbGM9dGMobGMsYSxiLGMsZCxlKSwhMDtjYXNlIFwibW91c2VvdmVyXCI6cmV0dXJuIG1jPXRjKG1jLGEsYixjLGQsZSksITA7Y2FzZSBcInBvaW50ZXJvdmVyXCI6dmFyIGY9ZS5wb2ludGVySWQ7bmMuc2V0KGYsdGMobmMuZ2V0KGYpfHxudWxsLGEsYixjLGQsZSkpO3JldHVybiEwO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOnJldHVybiBmPWUucG9pbnRlcklkLG9jLnNldChmLHRjKG9jLmdldChmKXx8bnVsbCxhLGIsYyxkLGUpKSwhMH1yZXR1cm4hMX1cbmZ1bmN0aW9uIHZjKGEpe3ZhciBiPXdjKGEudGFyZ2V0KTtpZihudWxsIT09Yil7dmFyIGM9WmIoYik7aWYobnVsbCE9PWMpaWYoYj1jLnRhZywxMz09PWIpe2lmKGI9JGIoYyksbnVsbCE9PWIpe2EuYmxvY2tlZE9uPWI7aGMoYS5sYW5lUHJpb3JpdHksZnVuY3Rpb24oKXtyLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eShhLnByaW9yaXR5LGZ1bmN0aW9uKCl7Z2MoYyl9KX0pO3JldHVybn19ZWxzZSBpZigzPT09YiYmYy5zdGF0ZU5vZGUuaHlkcmF0ZSl7YS5ibG9ja2VkT249Mz09PWMudGFnP2Muc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtyZXR1cm59fWEuYmxvY2tlZE9uPW51bGx9XG5mdW5jdGlvbiB4YyhhKXtpZihudWxsIT09YS5ibG9ja2VkT24pcmV0dXJuITE7Zm9yKHZhciBiPWEudGFyZ2V0Q29udGFpbmVyczswPGIubGVuZ3RoOyl7dmFyIGM9eWMoYS5kb21FdmVudE5hbWUsYS5ldmVudFN5c3RlbUZsYWdzLGJbMF0sYS5uYXRpdmVFdmVudCk7aWYobnVsbCE9PWMpcmV0dXJuIGI9Q2IoYyksbnVsbCE9PWImJmZjKGIpLGEuYmxvY2tlZE9uPWMsITE7Yi5zaGlmdCgpfXJldHVybiEwfWZ1bmN0aW9uIHpjKGEsYixjKXt4YyhhKSYmYy5kZWxldGUoYil9XG5mdW5jdGlvbiBBYygpe2ZvcihpYz0hMTswPGpjLmxlbmd0aDspe3ZhciBhPWpjWzBdO2lmKG51bGwhPT1hLmJsb2NrZWRPbil7YT1DYihhLmJsb2NrZWRPbik7bnVsbCE9PWEmJmVjKGEpO2JyZWFrfWZvcih2YXIgYj1hLnRhcmdldENvbnRhaW5lcnM7MDxiLmxlbmd0aDspe3ZhciBjPXljKGEuZG9tRXZlbnROYW1lLGEuZXZlbnRTeXN0ZW1GbGFncyxiWzBdLGEubmF0aXZlRXZlbnQpO2lmKG51bGwhPT1jKXthLmJsb2NrZWRPbj1jO2JyZWFrfWIuc2hpZnQoKX1udWxsPT09YS5ibG9ja2VkT24mJmpjLnNoaWZ0KCl9bnVsbCE9PWtjJiZ4YyhrYykmJihrYz1udWxsKTtudWxsIT09bGMmJnhjKGxjKSYmKGxjPW51bGwpO251bGwhPT1tYyYmeGMobWMpJiYobWM9bnVsbCk7bmMuZm9yRWFjaCh6Yyk7b2MuZm9yRWFjaCh6Yyl9XG5mdW5jdGlvbiBCYyhhLGIpe2EuYmxvY2tlZE9uPT09YiYmKGEuYmxvY2tlZE9uPW51bGwsaWN8fChpYz0hMCxyLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2soci51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxBYykpKX1cbmZ1bmN0aW9uIENjKGEpe2Z1bmN0aW9uIGIoYil7cmV0dXJuIEJjKGIsYSl9aWYoMDxqYy5sZW5ndGgpe0JjKGpjWzBdLGEpO2Zvcih2YXIgYz0xO2M8amMubGVuZ3RoO2MrKyl7dmFyIGQ9amNbY107ZC5ibG9ja2VkT249PT1hJiYoZC5ibG9ja2VkT249bnVsbCl9fW51bGwhPT1rYyYmQmMoa2MsYSk7bnVsbCE9PWxjJiZCYyhsYyxhKTtudWxsIT09bWMmJkJjKG1jLGEpO25jLmZvckVhY2goYik7b2MuZm9yRWFjaChiKTtmb3IoYz0wO2M8cGMubGVuZ3RoO2MrKylkPXBjW2NdLGQuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpO2Zvcig7MDxwYy5sZW5ndGgmJihjPXBjWzBdLG51bGw9PT1jLmJsb2NrZWRPbik7KXZjKGMpLG51bGw9PT1jLmJsb2NrZWRPbiYmcGMuc2hpZnQoKX1cbmZ1bmN0aW9uIERjKGEsYil7dmFyIGM9e307Y1thLnRvTG93ZXJDYXNlKCldPWIudG9Mb3dlckNhc2UoKTtjW1wiV2Via2l0XCIrYV09XCJ3ZWJraXRcIitiO2NbXCJNb3pcIithXT1cIm1velwiK2I7cmV0dXJuIGN9dmFyIEVjPXthbmltYXRpb25lbmQ6RGMoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkVuZFwiKSxhbmltYXRpb25pdGVyYXRpb246RGMoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkl0ZXJhdGlvblwiKSxhbmltYXRpb25zdGFydDpEYyhcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uU3RhcnRcIiksdHJhbnNpdGlvbmVuZDpEYyhcIlRyYW5zaXRpb25cIixcIlRyYW5zaXRpb25FbmRcIil9LEZjPXt9LEdjPXt9O1xuZmEmJihHYz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLnN0eWxlLFwiQW5pbWF0aW9uRXZlbnRcImluIHdpbmRvd3x8KGRlbGV0ZSBFYy5hbmltYXRpb25lbmQuYW5pbWF0aW9uLGRlbGV0ZSBFYy5hbmltYXRpb25pdGVyYXRpb24uYW5pbWF0aW9uLGRlbGV0ZSBFYy5hbmltYXRpb25zdGFydC5hbmltYXRpb24pLFwiVHJhbnNpdGlvbkV2ZW50XCJpbiB3aW5kb3d8fGRlbGV0ZSBFYy50cmFuc2l0aW9uZW5kLnRyYW5zaXRpb24pO2Z1bmN0aW9uIEhjKGEpe2lmKEZjW2FdKXJldHVybiBGY1thXTtpZighRWNbYV0pcmV0dXJuIGE7dmFyIGI9RWNbYV0sYztmb3IoYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykmJmMgaW4gR2MpcmV0dXJuIEZjW2FdPWJbY107cmV0dXJuIGF9XG52YXIgSWM9SGMoXCJhbmltYXRpb25lbmRcIiksSmM9SGMoXCJhbmltYXRpb25pdGVyYXRpb25cIiksS2M9SGMoXCJhbmltYXRpb25zdGFydFwiKSxMYz1IYyhcInRyYW5zaXRpb25lbmRcIiksTWM9bmV3IE1hcCxOYz1uZXcgTWFwLE9jPVtcImFib3J0XCIsXCJhYm9ydFwiLEljLFwiYW5pbWF0aW9uRW5kXCIsSmMsXCJhbmltYXRpb25JdGVyYXRpb25cIixLYyxcImFuaW1hdGlvblN0YXJ0XCIsXCJjYW5wbGF5XCIsXCJjYW5QbGF5XCIsXCJjYW5wbGF5dGhyb3VnaFwiLFwiY2FuUGxheVRocm91Z2hcIixcImR1cmF0aW9uY2hhbmdlXCIsXCJkdXJhdGlvbkNoYW5nZVwiLFwiZW1wdGllZFwiLFwiZW1wdGllZFwiLFwiZW5jcnlwdGVkXCIsXCJlbmNyeXB0ZWRcIixcImVuZGVkXCIsXCJlbmRlZFwiLFwiZXJyb3JcIixcImVycm9yXCIsXCJnb3Rwb2ludGVyY2FwdHVyZVwiLFwiZ290UG9pbnRlckNhcHR1cmVcIixcImxvYWRcIixcImxvYWRcIixcImxvYWRlZGRhdGFcIixcImxvYWRlZERhdGFcIixcImxvYWRlZG1ldGFkYXRhXCIsXCJsb2FkZWRNZXRhZGF0YVwiLFwibG9hZHN0YXJ0XCIsXCJsb2FkU3RhcnRcIixcblwibG9zdHBvaW50ZXJjYXB0dXJlXCIsXCJsb3N0UG9pbnRlckNhcHR1cmVcIixcInBsYXlpbmdcIixcInBsYXlpbmdcIixcInByb2dyZXNzXCIsXCJwcm9ncmVzc1wiLFwic2Vla2luZ1wiLFwic2Vla2luZ1wiLFwic3RhbGxlZFwiLFwic3RhbGxlZFwiLFwic3VzcGVuZFwiLFwic3VzcGVuZFwiLFwidGltZXVwZGF0ZVwiLFwidGltZVVwZGF0ZVwiLExjLFwidHJhbnNpdGlvbkVuZFwiLFwid2FpdGluZ1wiLFwid2FpdGluZ1wiXTtmdW5jdGlvbiBQYyhhLGIpe2Zvcih2YXIgYz0wO2M8YS5sZW5ndGg7Yys9Mil7dmFyIGQ9YVtjXSxlPWFbYysxXTtlPVwib25cIisoZVswXS50b1VwcGVyQ2FzZSgpK2Uuc2xpY2UoMSkpO05jLnNldChkLGIpO01jLnNldChkLGUpO2RhKGUsW2RdKX19dmFyIFFjPXIudW5zdGFibGVfbm93O1FjKCk7dmFyIEY9ODtcbmZ1bmN0aW9uIFJjKGEpe2lmKDAhPT0oMSZhKSlyZXR1cm4gRj0xNSwxO2lmKDAhPT0oMiZhKSlyZXR1cm4gRj0xNCwyO2lmKDAhPT0oNCZhKSlyZXR1cm4gRj0xMyw0O3ZhciBiPTI0JmE7aWYoMCE9PWIpcmV0dXJuIEY9MTIsYjtpZigwIT09KGEmMzIpKXJldHVybiBGPTExLDMyO2I9MTkyJmE7aWYoMCE9PWIpcmV0dXJuIEY9MTAsYjtpZigwIT09KGEmMjU2KSlyZXR1cm4gRj05LDI1NjtiPTM1ODQmYTtpZigwIT09YilyZXR1cm4gRj04LGI7aWYoMCE9PShhJjQwOTYpKXJldHVybiBGPTcsNDA5NjtiPTQxODYxMTImYTtpZigwIT09YilyZXR1cm4gRj02LGI7Yj02MjkxNDU2MCZhO2lmKDAhPT1iKXJldHVybiBGPTUsYjtpZihhJjY3MTA4ODY0KXJldHVybiBGPTQsNjcxMDg4NjQ7aWYoMCE9PShhJjEzNDIxNzcyOCkpcmV0dXJuIEY9MywxMzQyMTc3Mjg7Yj04MDUzMDYzNjgmYTtpZigwIT09YilyZXR1cm4gRj0yLGI7aWYoMCE9PSgxMDczNzQxODI0JmEpKXJldHVybiBGPTEsMTA3Mzc0MTgyNDtcbkY9ODtyZXR1cm4gYX1mdW5jdGlvbiBTYyhhKXtzd2l0Y2goYSl7Y2FzZSA5OTpyZXR1cm4gMTU7Y2FzZSA5ODpyZXR1cm4gMTA7Y2FzZSA5NzpjYXNlIDk2OnJldHVybiA4O2Nhc2UgOTU6cmV0dXJuIDI7ZGVmYXVsdDpyZXR1cm4gMH19ZnVuY3Rpb24gVGMoYSl7c3dpdGNoKGEpe2Nhc2UgMTU6Y2FzZSAxNDpyZXR1cm4gOTk7Y2FzZSAxMzpjYXNlIDEyOmNhc2UgMTE6Y2FzZSAxMDpyZXR1cm4gOTg7Y2FzZSA5OmNhc2UgODpjYXNlIDc6Y2FzZSA2OmNhc2UgNDpjYXNlIDU6cmV0dXJuIDk3O2Nhc2UgMzpjYXNlIDI6Y2FzZSAxOnJldHVybiA5NTtjYXNlIDA6cmV0dXJuIDkwO2RlZmF1bHQ6dGhyb3cgRXJyb3IoeSgzNTgsYSkpO319XG5mdW5jdGlvbiBVYyhhLGIpe3ZhciBjPWEucGVuZGluZ0xhbmVzO2lmKDA9PT1jKXJldHVybiBGPTA7dmFyIGQ9MCxlPTAsZj1hLmV4cGlyZWRMYW5lcyxnPWEuc3VzcGVuZGVkTGFuZXMsaD1hLnBpbmdlZExhbmVzO2lmKDAhPT1mKWQ9ZixlPUY9MTU7ZWxzZSBpZihmPWMmMTM0MjE3NzI3LDAhPT1mKXt2YXIgaz1mJn5nOzAhPT1rPyhkPVJjKGspLGU9Rik6KGgmPWYsMCE9PWgmJihkPVJjKGgpLGU9RikpfWVsc2UgZj1jJn5nLDAhPT1mPyhkPVJjKGYpLGU9Rik6MCE9PWgmJihkPVJjKGgpLGU9Rik7aWYoMD09PWQpcmV0dXJuIDA7ZD0zMS1WYyhkKTtkPWMmKCgwPmQ/MDoxPDxkKTw8MSktMTtpZigwIT09YiYmYiE9PWQmJjA9PT0oYiZnKSl7UmMoYik7aWYoZTw9RilyZXR1cm4gYjtGPWV9Yj1hLmVudGFuZ2xlZExhbmVzO2lmKDAhPT1iKWZvcihhPWEuZW50YW5nbGVtZW50cyxiJj1kOzA8YjspYz0zMS1WYyhiKSxlPTE8PGMsZHw9YVtjXSxiJj1+ZTtyZXR1cm4gZH1cbmZ1bmN0aW9uIFdjKGEpe2E9YS5wZW5kaW5nTGFuZXMmLTEwNzM3NDE4MjU7cmV0dXJuIDAhPT1hP2E6YSYxMDczNzQxODI0PzEwNzM3NDE4MjQ6MH1mdW5jdGlvbiBYYyhhLGIpe3N3aXRjaChhKXtjYXNlIDE1OnJldHVybiAxO2Nhc2UgMTQ6cmV0dXJuIDI7Y2FzZSAxMjpyZXR1cm4gYT1ZYygyNCZ+YiksMD09PWE/WGMoMTAsYik6YTtjYXNlIDEwOnJldHVybiBhPVljKDE5MiZ+YiksMD09PWE/WGMoOCxiKTphO2Nhc2UgODpyZXR1cm4gYT1ZYygzNTg0Jn5iKSwwPT09YSYmKGE9WWMoNDE4NjExMiZ+YiksMD09PWEmJihhPTUxMikpLGE7Y2FzZSAyOnJldHVybiBiPVljKDgwNTMwNjM2OCZ+YiksMD09PWImJihiPTI2ODQzNTQ1NiksYn10aHJvdyBFcnJvcih5KDM1OCxhKSk7fWZ1bmN0aW9uIFljKGEpe3JldHVybiBhJi1hfWZ1bmN0aW9uIFpjKGEpe2Zvcih2YXIgYj1bXSxjPTA7MzE+YztjKyspYi5wdXNoKGEpO3JldHVybiBifVxuZnVuY3Rpb24gJGMoYSxiLGMpe2EucGVuZGluZ0xhbmVzfD1iO3ZhciBkPWItMTthLnN1c3BlbmRlZExhbmVzJj1kO2EucGluZ2VkTGFuZXMmPWQ7YT1hLmV2ZW50VGltZXM7Yj0zMS1WYyhiKTthW2JdPWN9dmFyIFZjPU1hdGguY2x6MzI/TWF0aC5jbHozMjphZCxiZD1NYXRoLmxvZyxjZD1NYXRoLkxOMjtmdW5jdGlvbiBhZChhKXtyZXR1cm4gMD09PWE/MzI6MzEtKGJkKGEpL2NkfDApfDB9dmFyIGRkPXIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHksZWQ9ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHksZmQ9ITA7ZnVuY3Rpb24gZ2QoYSxiLGMsZCl7S2J8fEliKCk7dmFyIGU9aGQsZj1LYjtLYj0hMDt0cnl7SGIoZSxhLGIsYyxkKX1maW5hbGx5eyhLYj1mKXx8TWIoKX19ZnVuY3Rpb24gaWQoYSxiLGMsZCl7ZWQoZGQsaGQuYmluZChudWxsLGEsYixjLGQpKX1cbmZ1bmN0aW9uIGhkKGEsYixjLGQpe2lmKGZkKXt2YXIgZTtpZigoZT0wPT09KGImNCkpJiYwPGpjLmxlbmd0aCYmLTE8cWMuaW5kZXhPZihhKSlhPXJjKG51bGwsYSxiLGMsZCksamMucHVzaChhKTtlbHNle3ZhciBmPXljKGEsYixjLGQpO2lmKG51bGw9PT1mKWUmJnNjKGEsZCk7ZWxzZXtpZihlKXtpZigtMTxxYy5pbmRleE9mKGEpKXthPXJjKGYsYSxiLGMsZCk7amMucHVzaChhKTtyZXR1cm59aWYodWMoZixhLGIsYyxkKSlyZXR1cm47c2MoYSxkKX1qZChhLGIsZCxudWxsLGMpfX19fVxuZnVuY3Rpb24geWMoYSxiLGMsZCl7dmFyIGU9eGIoZCk7ZT13YyhlKTtpZihudWxsIT09ZSl7dmFyIGY9WmIoZSk7aWYobnVsbD09PWYpZT1udWxsO2Vsc2V7dmFyIGc9Zi50YWc7aWYoMTM9PT1nKXtlPSRiKGYpO2lmKG51bGwhPT1lKXJldHVybiBlO2U9bnVsbH1lbHNlIGlmKDM9PT1nKXtpZihmLnN0YXRlTm9kZS5oeWRyYXRlKXJldHVybiAzPT09Zi50YWc/Zi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbzpudWxsO2U9bnVsbH1lbHNlIGYhPT1lJiYoZT1udWxsKX19amQoYSxiLGQsZSxjKTtyZXR1cm4gbnVsbH12YXIga2Q9bnVsbCxsZD1udWxsLG1kPW51bGw7XG5mdW5jdGlvbiBuZCgpe2lmKG1kKXJldHVybiBtZDt2YXIgYSxiPWxkLGM9Yi5sZW5ndGgsZCxlPVwidmFsdWVcImluIGtkP2tkLnZhbHVlOmtkLnRleHRDb250ZW50LGY9ZS5sZW5ndGg7Zm9yKGE9MDthPGMmJmJbYV09PT1lW2FdO2ErKyk7dmFyIGc9Yy1hO2ZvcihkPTE7ZDw9ZyYmYltjLWRdPT09ZVtmLWRdO2QrKyk7cmV0dXJuIG1kPWUuc2xpY2UoYSwxPGQ/MS1kOnZvaWQgMCl9ZnVuY3Rpb24gb2QoYSl7dmFyIGI9YS5rZXlDb2RlO1wiY2hhckNvZGVcImluIGE/KGE9YS5jaGFyQ29kZSwwPT09YSYmMTM9PT1iJiYoYT0xMykpOmE9YjsxMD09PWEmJihhPTEzKTtyZXR1cm4gMzI8PWF8fDEzPT09YT9hOjB9ZnVuY3Rpb24gcGQoKXtyZXR1cm4hMH1mdW5jdGlvbiBxZCgpe3JldHVybiExfVxuZnVuY3Rpb24gcmQoYSl7ZnVuY3Rpb24gYihiLGQsZSxmLGcpe3RoaXMuX3JlYWN0TmFtZT1iO3RoaXMuX3RhcmdldEluc3Q9ZTt0aGlzLnR5cGU9ZDt0aGlzLm5hdGl2ZUV2ZW50PWY7dGhpcy50YXJnZXQ9Zzt0aGlzLmN1cnJlbnRUYXJnZXQ9bnVsbDtmb3IodmFyIGMgaW4gYSlhLmhhc093blByb3BlcnR5KGMpJiYoYj1hW2NdLHRoaXNbY109Yj9iKGYpOmZbY10pO3RoaXMuaXNEZWZhdWx0UHJldmVudGVkPShudWxsIT1mLmRlZmF1bHRQcmV2ZW50ZWQ/Zi5kZWZhdWx0UHJldmVudGVkOiExPT09Zi5yZXR1cm5WYWx1ZSk/cGQ6cWQ7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1xZDtyZXR1cm4gdGhpc31tKGIucHJvdG90eXBlLHtwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3RoaXMuZGVmYXVsdFByZXZlbnRlZD0hMDt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnByZXZlbnREZWZhdWx0P2EucHJldmVudERlZmF1bHQoKTpcInVua25vd25cIiE9PXR5cGVvZiBhLnJldHVyblZhbHVlJiZcbihhLnJldHVyblZhbHVlPSExKSx0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1wZCl9LHN0b3BQcm9wYWdhdGlvbjpmdW5jdGlvbigpe3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEuc3RvcFByb3BhZ2F0aW9uP2Euc3RvcFByb3BhZ2F0aW9uKCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5jYW5jZWxCdWJibGUmJihhLmNhbmNlbEJ1YmJsZT0hMCksdGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1wZCl9LHBlcnNpc3Q6ZnVuY3Rpb24oKXt9LGlzUGVyc2lzdGVudDpwZH0pO3JldHVybiBifVxudmFyIHNkPXtldmVudFBoYXNlOjAsYnViYmxlczowLGNhbmNlbGFibGU6MCx0aW1lU3RhbXA6ZnVuY3Rpb24oYSl7cmV0dXJuIGEudGltZVN0YW1wfHxEYXRlLm5vdygpfSxkZWZhdWx0UHJldmVudGVkOjAsaXNUcnVzdGVkOjB9LHRkPXJkKHNkKSx1ZD1tKHt9LHNkLHt2aWV3OjAsZGV0YWlsOjB9KSx2ZD1yZCh1ZCksd2QseGQseWQsQWQ9bSh7fSx1ZCx7c2NyZWVuWDowLHNjcmVlblk6MCxjbGllbnRYOjAsY2xpZW50WTowLHBhZ2VYOjAscGFnZVk6MCxjdHJsS2V5OjAsc2hpZnRLZXk6MCxhbHRLZXk6MCxtZXRhS2V5OjAsZ2V0TW9kaWZpZXJTdGF0ZTp6ZCxidXR0b246MCxidXR0b25zOjAscmVsYXRlZFRhcmdldDpmdW5jdGlvbihhKXtyZXR1cm4gdm9pZCAwPT09YS5yZWxhdGVkVGFyZ2V0P2EuZnJvbUVsZW1lbnQ9PT1hLnNyY0VsZW1lbnQ/YS50b0VsZW1lbnQ6YS5mcm9tRWxlbWVudDphLnJlbGF0ZWRUYXJnZXR9LG1vdmVtZW50WDpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WFwiaW5cbmEpcmV0dXJuIGEubW92ZW1lbnRYO2EhPT15ZCYmKHlkJiZcIm1vdXNlbW92ZVwiPT09YS50eXBlPyh3ZD1hLnNjcmVlblgteWQuc2NyZWVuWCx4ZD1hLnNjcmVlblkteWQuc2NyZWVuWSk6eGQ9d2Q9MCx5ZD1hKTtyZXR1cm4gd2R9LG1vdmVtZW50WTpmdW5jdGlvbihhKXtyZXR1cm5cIm1vdmVtZW50WVwiaW4gYT9hLm1vdmVtZW50WTp4ZH19KSxCZD1yZChBZCksQ2Q9bSh7fSxBZCx7ZGF0YVRyYW5zZmVyOjB9KSxEZD1yZChDZCksRWQ9bSh7fSx1ZCx7cmVsYXRlZFRhcmdldDowfSksRmQ9cmQoRWQpLEdkPW0oe30sc2Qse2FuaW1hdGlvbk5hbWU6MCxlbGFwc2VkVGltZTowLHBzZXVkb0VsZW1lbnQ6MH0pLEhkPXJkKEdkKSxJZD1tKHt9LHNkLHtjbGlwYm9hcmREYXRhOmZ1bmN0aW9uKGEpe3JldHVyblwiY2xpcGJvYXJkRGF0YVwiaW4gYT9hLmNsaXBib2FyZERhdGE6d2luZG93LmNsaXBib2FyZERhdGF9fSksSmQ9cmQoSWQpLEtkPW0oe30sc2Qse2RhdGE6MH0pLExkPXJkKEtkKSxNZD17RXNjOlwiRXNjYXBlXCIsXG5TcGFjZWJhcjpcIiBcIixMZWZ0OlwiQXJyb3dMZWZ0XCIsVXA6XCJBcnJvd1VwXCIsUmlnaHQ6XCJBcnJvd1JpZ2h0XCIsRG93bjpcIkFycm93RG93blwiLERlbDpcIkRlbGV0ZVwiLFdpbjpcIk9TXCIsTWVudTpcIkNvbnRleHRNZW51XCIsQXBwczpcIkNvbnRleHRNZW51XCIsU2Nyb2xsOlwiU2Nyb2xsTG9ja1wiLE1velByaW50YWJsZUtleTpcIlVuaWRlbnRpZmllZFwifSxOZD17ODpcIkJhY2tzcGFjZVwiLDk6XCJUYWJcIiwxMjpcIkNsZWFyXCIsMTM6XCJFbnRlclwiLDE2OlwiU2hpZnRcIiwxNzpcIkNvbnRyb2xcIiwxODpcIkFsdFwiLDE5OlwiUGF1c2VcIiwyMDpcIkNhcHNMb2NrXCIsMjc6XCJFc2NhcGVcIiwzMjpcIiBcIiwzMzpcIlBhZ2VVcFwiLDM0OlwiUGFnZURvd25cIiwzNTpcIkVuZFwiLDM2OlwiSG9tZVwiLDM3OlwiQXJyb3dMZWZ0XCIsMzg6XCJBcnJvd1VwXCIsMzk6XCJBcnJvd1JpZ2h0XCIsNDA6XCJBcnJvd0Rvd25cIiw0NTpcIkluc2VydFwiLDQ2OlwiRGVsZXRlXCIsMTEyOlwiRjFcIiwxMTM6XCJGMlwiLDExNDpcIkYzXCIsMTE1OlwiRjRcIiwxMTY6XCJGNVwiLDExNzpcIkY2XCIsMTE4OlwiRjdcIixcbjExOTpcIkY4XCIsMTIwOlwiRjlcIiwxMjE6XCJGMTBcIiwxMjI6XCJGMTFcIiwxMjM6XCJGMTJcIiwxNDQ6XCJOdW1Mb2NrXCIsMTQ1OlwiU2Nyb2xsTG9ja1wiLDIyNDpcIk1ldGFcIn0sT2Q9e0FsdDpcImFsdEtleVwiLENvbnRyb2w6XCJjdHJsS2V5XCIsTWV0YTpcIm1ldGFLZXlcIixTaGlmdDpcInNoaWZ0S2V5XCJ9O2Z1bmN0aW9uIFBkKGEpe3ZhciBiPXRoaXMubmF0aXZlRXZlbnQ7cmV0dXJuIGIuZ2V0TW9kaWZpZXJTdGF0ZT9iLmdldE1vZGlmaWVyU3RhdGUoYSk6KGE9T2RbYV0pPyEhYlthXTohMX1mdW5jdGlvbiB6ZCgpe3JldHVybiBQZH1cbnZhciBRZD1tKHt9LHVkLHtrZXk6ZnVuY3Rpb24oYSl7aWYoYS5rZXkpe3ZhciBiPU1kW2Eua2V5XXx8YS5rZXk7aWYoXCJVbmlkZW50aWZpZWRcIiE9PWIpcmV0dXJuIGJ9cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlPyhhPW9kKGEpLDEzPT09YT9cIkVudGVyXCI6U3RyaW5nLmZyb21DaGFyQ29kZShhKSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9OZFthLmtleUNvZGVdfHxcIlVuaWRlbnRpZmllZFwiOlwiXCJ9LGNvZGU6MCxsb2NhdGlvbjowLGN0cmxLZXk6MCxzaGlmdEtleTowLGFsdEtleTowLG1ldGFLZXk6MCxyZXBlYXQ6MCxsb2NhbGU6MCxnZXRNb2RpZmllclN0YXRlOnpkLGNoYXJDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT9vZChhKTowfSxrZXlDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9LHdoaWNoOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PVxuYS50eXBlP29kKGEpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9fSksUmQ9cmQoUWQpLFNkPW0oe30sQWQse3BvaW50ZXJJZDowLHdpZHRoOjAsaGVpZ2h0OjAscHJlc3N1cmU6MCx0YW5nZW50aWFsUHJlc3N1cmU6MCx0aWx0WDowLHRpbHRZOjAsdHdpc3Q6MCxwb2ludGVyVHlwZTowLGlzUHJpbWFyeTowfSksVGQ9cmQoU2QpLFVkPW0oe30sdWQse3RvdWNoZXM6MCx0YXJnZXRUb3VjaGVzOjAsY2hhbmdlZFRvdWNoZXM6MCxhbHRLZXk6MCxtZXRhS2V5OjAsY3RybEtleTowLHNoaWZ0S2V5OjAsZ2V0TW9kaWZpZXJTdGF0ZTp6ZH0pLFZkPXJkKFVkKSxXZD1tKHt9LHNkLHtwcm9wZXJ0eU5hbWU6MCxlbGFwc2VkVGltZTowLHBzZXVkb0VsZW1lbnQ6MH0pLFhkPXJkKFdkKSxZZD1tKHt9LEFkLHtkZWx0YVg6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVhcImluIGE/YS5kZWx0YVg6XCJ3aGVlbERlbHRhWFwiaW4gYT8tYS53aGVlbERlbHRhWDowfSxcbmRlbHRhWTpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWVwiaW4gYT9hLmRlbHRhWTpcIndoZWVsRGVsdGFZXCJpbiBhPy1hLndoZWVsRGVsdGFZOlwid2hlZWxEZWx0YVwiaW4gYT8tYS53aGVlbERlbHRhOjB9LGRlbHRhWjowLGRlbHRhTW9kZTowfSksWmQ9cmQoWWQpLCRkPVs5LDEzLDI3LDMyXSxhZT1mYSYmXCJDb21wb3NpdGlvbkV2ZW50XCJpbiB3aW5kb3csYmU9bnVsbDtmYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYoYmU9ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKTt2YXIgY2U9ZmEmJlwiVGV4dEV2ZW50XCJpbiB3aW5kb3cmJiFiZSxkZT1mYSYmKCFhZXx8YmUmJjg8YmUmJjExPj1iZSksZWU9U3RyaW5nLmZyb21DaGFyQ29kZSgzMiksZmU9ITE7XG5mdW5jdGlvbiBnZShhLGIpe3N3aXRjaChhKXtjYXNlIFwia2V5dXBcIjpyZXR1cm4tMSE9PSRkLmluZGV4T2YoYi5rZXlDb2RlKTtjYXNlIFwia2V5ZG93blwiOnJldHVybiAyMjkhPT1iLmtleUNvZGU7Y2FzZSBcImtleXByZXNzXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJmb2N1c291dFwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIGhlKGEpe2E9YS5kZXRhaWw7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZcImRhdGFcImluIGE/YS5kYXRhOm51bGx9dmFyIGllPSExO2Z1bmN0aW9uIGplKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBoZShiKTtjYXNlIFwia2V5cHJlc3NcIjppZigzMiE9PWIud2hpY2gpcmV0dXJuIG51bGw7ZmU9ITA7cmV0dXJuIGVlO2Nhc2UgXCJ0ZXh0SW5wdXRcIjpyZXR1cm4gYT1iLmRhdGEsYT09PWVlJiZmZT9udWxsOmE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiBrZShhLGIpe2lmKGllKXJldHVyblwiY29tcG9zaXRpb25lbmRcIj09PWF8fCFhZSYmZ2UoYSxiKT8oYT1uZCgpLG1kPWxkPWtkPW51bGwsaWU9ITEsYSk6bnVsbDtzd2l0Y2goYSl7Y2FzZSBcInBhc3RlXCI6cmV0dXJuIG51bGw7Y2FzZSBcImtleXByZXNzXCI6aWYoIShiLmN0cmxLZXl8fGIuYWx0S2V5fHxiLm1ldGFLZXkpfHxiLmN0cmxLZXkmJmIuYWx0S2V5KXtpZihiLmNoYXImJjE8Yi5jaGFyLmxlbmd0aClyZXR1cm4gYi5jaGFyO2lmKGIud2hpY2gpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoYi53aGljaCl9cmV0dXJuIG51bGw7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIGRlJiZcImtvXCIhPT1iLmxvY2FsZT9udWxsOmIuZGF0YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciBsZT17Y29sb3I6ITAsZGF0ZTohMCxkYXRldGltZTohMCxcImRhdGV0aW1lLWxvY2FsXCI6ITAsZW1haWw6ITAsbW9udGg6ITAsbnVtYmVyOiEwLHBhc3N3b3JkOiEwLHJhbmdlOiEwLHNlYXJjaDohMCx0ZWw6ITAsdGV4dDohMCx0aW1lOiEwLHVybDohMCx3ZWVrOiEwfTtmdW5jdGlvbiBtZShhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJpbnB1dFwiPT09Yj8hIWxlW2EudHlwZV06XCJ0ZXh0YXJlYVwiPT09Yj8hMDohMX1mdW5jdGlvbiBuZShhLGIsYyxkKXtFYihkKTtiPW9lKGIsXCJvbkNoYW5nZVwiKTswPGIubGVuZ3RoJiYoYz1uZXcgdGQoXCJvbkNoYW5nZVwiLFwiY2hhbmdlXCIsbnVsbCxjLGQpLGEucHVzaCh7ZXZlbnQ6YyxsaXN0ZW5lcnM6Yn0pKX12YXIgcGU9bnVsbCxxZT1udWxsO2Z1bmN0aW9uIHJlKGEpe3NlKGEsMCl9ZnVuY3Rpb24gdGUoYSl7dmFyIGI9dWUoYSk7aWYoV2EoYikpcmV0dXJuIGF9XG5mdW5jdGlvbiB2ZShhLGIpe2lmKFwiY2hhbmdlXCI9PT1hKXJldHVybiBifXZhciB3ZT0hMTtpZihmYSl7dmFyIHhlO2lmKGZhKXt2YXIgeWU9XCJvbmlucHV0XCJpbiBkb2N1bWVudDtpZigheWUpe3ZhciB6ZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO3plLnNldEF0dHJpYnV0ZShcIm9uaW5wdXRcIixcInJldHVybjtcIik7eWU9XCJmdW5jdGlvblwiPT09dHlwZW9mIHplLm9uaW5wdXR9eGU9eWV9ZWxzZSB4ZT0hMTt3ZT14ZSYmKCFkb2N1bWVudC5kb2N1bWVudE1vZGV8fDk8ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKX1mdW5jdGlvbiBBZSgpe3BlJiYocGUuZGV0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsQmUpLHFlPXBlPW51bGwpfWZ1bmN0aW9uIEJlKGEpe2lmKFwidmFsdWVcIj09PWEucHJvcGVydHlOYW1lJiZ0ZShxZSkpe3ZhciBiPVtdO25lKGIscWUsYSx4YihhKSk7YT1yZTtpZihLYilhKGIpO2Vsc2V7S2I9ITA7dHJ5e0diKGEsYil9ZmluYWxseXtLYj0hMSxNYigpfX19fVxuZnVuY3Rpb24gQ2UoYSxiLGMpe1wiZm9jdXNpblwiPT09YT8oQWUoKSxwZT1iLHFlPWMscGUuYXR0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsQmUpKTpcImZvY3Vzb3V0XCI9PT1hJiZBZSgpfWZ1bmN0aW9uIERlKGEpe2lmKFwic2VsZWN0aW9uY2hhbmdlXCI9PT1hfHxcImtleXVwXCI9PT1hfHxcImtleWRvd25cIj09PWEpcmV0dXJuIHRlKHFlKX1mdW5jdGlvbiBFZShhLGIpe2lmKFwiY2xpY2tcIj09PWEpcmV0dXJuIHRlKGIpfWZ1bmN0aW9uIEZlKGEsYil7aWYoXCJpbnB1dFwiPT09YXx8XCJjaGFuZ2VcIj09PWEpcmV0dXJuIHRlKGIpfWZ1bmN0aW9uIEdlKGEsYil7cmV0dXJuIGE9PT1iJiYoMCE9PWF8fDEvYT09PTEvYil8fGEhPT1hJiZiIT09Yn12YXIgSGU9XCJmdW5jdGlvblwiPT09dHlwZW9mIE9iamVjdC5pcz9PYmplY3QuaXM6R2UsSWU9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbmZ1bmN0aW9uIEplKGEsYil7aWYoSGUoYSxiKSlyZXR1cm4hMDtpZihcIm9iamVjdFwiIT09dHlwZW9mIGF8fG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGJ8fG51bGw9PT1iKXJldHVybiExO3ZhciBjPU9iamVjdC5rZXlzKGEpLGQ9T2JqZWN0LmtleXMoYik7aWYoYy5sZW5ndGghPT1kLmxlbmd0aClyZXR1cm4hMTtmb3IoZD0wO2Q8Yy5sZW5ndGg7ZCsrKWlmKCFJZS5jYWxsKGIsY1tkXSl8fCFIZShhW2NbZF1dLGJbY1tkXV0pKXJldHVybiExO3JldHVybiEwfWZ1bmN0aW9uIEtlKGEpe2Zvcig7YSYmYS5maXJzdENoaWxkOylhPWEuZmlyc3RDaGlsZDtyZXR1cm4gYX1cbmZ1bmN0aW9uIExlKGEsYil7dmFyIGM9S2UoYSk7YT0wO2Zvcih2YXIgZDtjOyl7aWYoMz09PWMubm9kZVR5cGUpe2Q9YStjLnRleHRDb250ZW50Lmxlbmd0aDtpZihhPD1iJiZkPj1iKXJldHVybntub2RlOmMsb2Zmc2V0OmItYX07YT1kfWE6e2Zvcig7Yzspe2lmKGMubmV4dFNpYmxpbmcpe2M9Yy5uZXh0U2libGluZzticmVhayBhfWM9Yy5wYXJlbnROb2RlfWM9dm9pZCAwfWM9S2UoYyl9fWZ1bmN0aW9uIE1lKGEsYil7cmV0dXJuIGEmJmI/YT09PWI/ITA6YSYmMz09PWEubm9kZVR5cGU/ITE6YiYmMz09PWIubm9kZVR5cGU/TWUoYSxiLnBhcmVudE5vZGUpOlwiY29udGFpbnNcImluIGE/YS5jb250YWlucyhiKTphLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uPyEhKGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYikmMTYpOiExOiExfVxuZnVuY3Rpb24gTmUoKXtmb3IodmFyIGE9d2luZG93LGI9WGEoKTtiIGluc3RhbmNlb2YgYS5IVE1MSUZyYW1lRWxlbWVudDspe3RyeXt2YXIgYz1cInN0cmluZ1wiPT09dHlwZW9mIGIuY29udGVudFdpbmRvdy5sb2NhdGlvbi5ocmVmfWNhdGNoKGQpe2M9ITF9aWYoYylhPWIuY29udGVudFdpbmRvdztlbHNlIGJyZWFrO2I9WGEoYS5kb2N1bWVudCl9cmV0dXJuIGJ9ZnVuY3Rpb24gT2UoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybiBiJiYoXCJpbnB1dFwiPT09YiYmKFwidGV4dFwiPT09YS50eXBlfHxcInNlYXJjaFwiPT09YS50eXBlfHxcInRlbFwiPT09YS50eXBlfHxcInVybFwiPT09YS50eXBlfHxcInBhc3N3b3JkXCI9PT1hLnR5cGUpfHxcInRleHRhcmVhXCI9PT1ifHxcInRydWVcIj09PWEuY29udGVudEVkaXRhYmxlKX1cbnZhciBQZT1mYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYxMT49ZG9jdW1lbnQuZG9jdW1lbnRNb2RlLFFlPW51bGwsUmU9bnVsbCxTZT1udWxsLFRlPSExO1xuZnVuY3Rpb24gVWUoYSxiLGMpe3ZhciBkPWMud2luZG93PT09Yz9jLmRvY3VtZW50Ojk9PT1jLm5vZGVUeXBlP2M6Yy5vd25lckRvY3VtZW50O1RlfHxudWxsPT1RZXx8UWUhPT1YYShkKXx8KGQ9UWUsXCJzZWxlY3Rpb25TdGFydFwiaW4gZCYmT2UoZCk/ZD17c3RhcnQ6ZC5zZWxlY3Rpb25TdGFydCxlbmQ6ZC5zZWxlY3Rpb25FbmR9OihkPShkLm93bmVyRG9jdW1lbnQmJmQub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlld3x8d2luZG93KS5nZXRTZWxlY3Rpb24oKSxkPXthbmNob3JOb2RlOmQuYW5jaG9yTm9kZSxhbmNob3JPZmZzZXQ6ZC5hbmNob3JPZmZzZXQsZm9jdXNOb2RlOmQuZm9jdXNOb2RlLGZvY3VzT2Zmc2V0OmQuZm9jdXNPZmZzZXR9KSxTZSYmSmUoU2UsZCl8fChTZT1kLGQ9b2UoUmUsXCJvblNlbGVjdFwiKSwwPGQubGVuZ3RoJiYoYj1uZXcgdGQoXCJvblNlbGVjdFwiLFwic2VsZWN0XCIsbnVsbCxiLGMpLGEucHVzaCh7ZXZlbnQ6YixsaXN0ZW5lcnM6ZH0pLGIudGFyZ2V0PVFlKSkpfVxuUGMoXCJjYW5jZWwgY2FuY2VsIGNsaWNrIGNsaWNrIGNsb3NlIGNsb3NlIGNvbnRleHRtZW51IGNvbnRleHRNZW51IGNvcHkgY29weSBjdXQgY3V0IGF1eGNsaWNrIGF1eENsaWNrIGRibGNsaWNrIGRvdWJsZUNsaWNrIGRyYWdlbmQgZHJhZ0VuZCBkcmFnc3RhcnQgZHJhZ1N0YXJ0IGRyb3AgZHJvcCBmb2N1c2luIGZvY3VzIGZvY3Vzb3V0IGJsdXIgaW5wdXQgaW5wdXQgaW52YWxpZCBpbnZhbGlkIGtleWRvd24ga2V5RG93biBrZXlwcmVzcyBrZXlQcmVzcyBrZXl1cCBrZXlVcCBtb3VzZWRvd24gbW91c2VEb3duIG1vdXNldXAgbW91c2VVcCBwYXN0ZSBwYXN0ZSBwYXVzZSBwYXVzZSBwbGF5IHBsYXkgcG9pbnRlcmNhbmNlbCBwb2ludGVyQ2FuY2VsIHBvaW50ZXJkb3duIHBvaW50ZXJEb3duIHBvaW50ZXJ1cCBwb2ludGVyVXAgcmF0ZWNoYW5nZSByYXRlQ2hhbmdlIHJlc2V0IHJlc2V0IHNlZWtlZCBzZWVrZWQgc3VibWl0IHN1Ym1pdCB0b3VjaGNhbmNlbCB0b3VjaENhbmNlbCB0b3VjaGVuZCB0b3VjaEVuZCB0b3VjaHN0YXJ0IHRvdWNoU3RhcnQgdm9sdW1lY2hhbmdlIHZvbHVtZUNoYW5nZVwiLnNwbGl0KFwiIFwiKSxcbjApO1BjKFwiZHJhZyBkcmFnIGRyYWdlbnRlciBkcmFnRW50ZXIgZHJhZ2V4aXQgZHJhZ0V4aXQgZHJhZ2xlYXZlIGRyYWdMZWF2ZSBkcmFnb3ZlciBkcmFnT3ZlciBtb3VzZW1vdmUgbW91c2VNb3ZlIG1vdXNlb3V0IG1vdXNlT3V0IG1vdXNlb3ZlciBtb3VzZU92ZXIgcG9pbnRlcm1vdmUgcG9pbnRlck1vdmUgcG9pbnRlcm91dCBwb2ludGVyT3V0IHBvaW50ZXJvdmVyIHBvaW50ZXJPdmVyIHNjcm9sbCBzY3JvbGwgdG9nZ2xlIHRvZ2dsZSB0b3VjaG1vdmUgdG91Y2hNb3ZlIHdoZWVsIHdoZWVsXCIuc3BsaXQoXCIgXCIpLDEpO1BjKE9jLDIpO2Zvcih2YXIgVmU9XCJjaGFuZ2Ugc2VsZWN0aW9uY2hhbmdlIHRleHRJbnB1dCBjb21wb3NpdGlvbnN0YXJ0IGNvbXBvc2l0aW9uZW5kIGNvbXBvc2l0aW9udXBkYXRlXCIuc3BsaXQoXCIgXCIpLFdlPTA7V2U8VmUubGVuZ3RoO1dlKyspTmMuc2V0KFZlW1dlXSwwKTtlYShcIm9uTW91c2VFbnRlclwiLFtcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl0pO1xuZWEoXCJvbk1vdXNlTGVhdmVcIixbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdKTtlYShcIm9uUG9pbnRlckVudGVyXCIsW1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl0pO2VhKFwib25Qb2ludGVyTGVhdmVcIixbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXSk7ZGEoXCJvbkNoYW5nZVwiLFwiY2hhbmdlIGNsaWNrIGZvY3VzaW4gZm9jdXNvdXQgaW5wdXQga2V5ZG93biBrZXl1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIikpO2RhKFwib25TZWxlY3RcIixcImZvY3Vzb3V0IGNvbnRleHRtZW51IGRyYWdlbmQgZm9jdXNpbiBrZXlkb3duIGtleXVwIG1vdXNlZG93biBtb3VzZXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKSk7ZGEoXCJvbkJlZm9yZUlucHV0XCIsW1wiY29tcG9zaXRpb25lbmRcIixcImtleXByZXNzXCIsXCJ0ZXh0SW5wdXRcIixcInBhc3RlXCJdKTtkYShcIm9uQ29tcG9zaXRpb25FbmRcIixcImNvbXBvc2l0aW9uZW5kIGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpKTtcbmRhKFwib25Db21wb3NpdGlvblN0YXJ0XCIsXCJjb21wb3NpdGlvbnN0YXJ0IGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpKTtkYShcIm9uQ29tcG9zaXRpb25VcGRhdGVcIixcImNvbXBvc2l0aW9udXBkYXRlIGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpKTt2YXIgWGU9XCJhYm9ydCBjYW5wbGF5IGNhbnBsYXl0aHJvdWdoIGR1cmF0aW9uY2hhbmdlIGVtcHRpZWQgZW5jcnlwdGVkIGVuZGVkIGVycm9yIGxvYWRlZGRhdGEgbG9hZGVkbWV0YWRhdGEgbG9hZHN0YXJ0IHBhdXNlIHBsYXkgcGxheWluZyBwcm9ncmVzcyByYXRlY2hhbmdlIHNlZWtlZCBzZWVraW5nIHN0YWxsZWQgc3VzcGVuZCB0aW1ldXBkYXRlIHZvbHVtZWNoYW5nZSB3YWl0aW5nXCIuc3BsaXQoXCIgXCIpLFllPW5ldyBTZXQoXCJjYW5jZWwgY2xvc2UgaW52YWxpZCBsb2FkIHNjcm9sbCB0b2dnbGVcIi5zcGxpdChcIiBcIikuY29uY2F0KFhlKSk7XG5mdW5jdGlvbiBaZShhLGIsYyl7dmFyIGQ9YS50eXBlfHxcInVua25vd24tZXZlbnRcIjthLmN1cnJlbnRUYXJnZXQ9YztZYihkLGIsdm9pZCAwLGEpO2EuY3VycmVudFRhcmdldD1udWxsfVxuZnVuY3Rpb24gc2UoYSxiKXtiPTAhPT0oYiY0KTtmb3IodmFyIGM9MDtjPGEubGVuZ3RoO2MrKyl7dmFyIGQ9YVtjXSxlPWQuZXZlbnQ7ZD1kLmxpc3RlbmVyczthOnt2YXIgZj12b2lkIDA7aWYoYilmb3IodmFyIGc9ZC5sZW5ndGgtMTswPD1nO2ctLSl7dmFyIGg9ZFtnXSxrPWguaW5zdGFuY2UsbD1oLmN1cnJlbnRUYXJnZXQ7aD1oLmxpc3RlbmVyO2lmKGshPT1mJiZlLmlzUHJvcGFnYXRpb25TdG9wcGVkKCkpYnJlYWsgYTtaZShlLGgsbCk7Zj1rfWVsc2UgZm9yKGc9MDtnPGQubGVuZ3RoO2crKyl7aD1kW2ddO2s9aC5pbnN0YW5jZTtsPWguY3VycmVudFRhcmdldDtoPWgubGlzdGVuZXI7aWYoayE9PWYmJmUuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSlicmVhayBhO1plKGUsaCxsKTtmPWt9fX1pZihVYil0aHJvdyBhPVZiLFViPSExLFZiPW51bGwsYTt9XG5mdW5jdGlvbiBHKGEsYil7dmFyIGM9JGUoYiksZD1hK1wiX19idWJibGVcIjtjLmhhcyhkKXx8KGFmKGIsYSwyLCExKSxjLmFkZChkKSl9dmFyIGJmPVwiX3JlYWN0TGlzdGVuaW5nXCIrTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMik7ZnVuY3Rpb24gY2YoYSl7YVtiZl18fChhW2JmXT0hMCxiYS5mb3JFYWNoKGZ1bmN0aW9uKGIpe1llLmhhcyhiKXx8ZGYoYiwhMSxhLG51bGwpO2RmKGIsITAsYSxudWxsKX0pKX1cbmZ1bmN0aW9uIGRmKGEsYixjLGQpe3ZhciBlPTQ8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzRdP2FyZ3VtZW50c1s0XTowLGY9YztcInNlbGVjdGlvbmNoYW5nZVwiPT09YSYmOSE9PWMubm9kZVR5cGUmJihmPWMub3duZXJEb2N1bWVudCk7aWYobnVsbCE9PWQmJiFiJiZZZS5oYXMoYSkpe2lmKFwic2Nyb2xsXCIhPT1hKXJldHVybjtlfD0yO2Y9ZH12YXIgZz0kZShmKSxoPWErXCJfX1wiKyhiP1wiY2FwdHVyZVwiOlwiYnViYmxlXCIpO2cuaGFzKGgpfHwoYiYmKGV8PTQpLGFmKGYsYSxlLGIpLGcuYWRkKGgpKX1cbmZ1bmN0aW9uIGFmKGEsYixjLGQpe3ZhciBlPU5jLmdldChiKTtzd2l0Y2godm9pZCAwPT09ZT8yOmUpe2Nhc2UgMDplPWdkO2JyZWFrO2Nhc2UgMTplPWlkO2JyZWFrO2RlZmF1bHQ6ZT1oZH1jPWUuYmluZChudWxsLGIsYyxhKTtlPXZvaWQgMDshUGJ8fFwidG91Y2hzdGFydFwiIT09YiYmXCJ0b3VjaG1vdmVcIiE9PWImJlwid2hlZWxcIiE9PWJ8fChlPSEwKTtkP3ZvaWQgMCE9PWU/YS5hZGRFdmVudExpc3RlbmVyKGIsYyx7Y2FwdHVyZTohMCxwYXNzaXZlOmV9KTphLmFkZEV2ZW50TGlzdGVuZXIoYixjLCEwKTp2b2lkIDAhPT1lP2EuYWRkRXZlbnRMaXN0ZW5lcihiLGMse3Bhc3NpdmU6ZX0pOmEuYWRkRXZlbnRMaXN0ZW5lcihiLGMsITEpfVxuZnVuY3Rpb24gamQoYSxiLGMsZCxlKXt2YXIgZj1kO2lmKDA9PT0oYiYxKSYmMD09PShiJjIpJiZudWxsIT09ZClhOmZvcig7Oyl7aWYobnVsbD09PWQpcmV0dXJuO3ZhciBnPWQudGFnO2lmKDM9PT1nfHw0PT09Zyl7dmFyIGg9ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztpZihoPT09ZXx8OD09PWgubm9kZVR5cGUmJmgucGFyZW50Tm9kZT09PWUpYnJlYWs7aWYoND09PWcpZm9yKGc9ZC5yZXR1cm47bnVsbCE9PWc7KXt2YXIgaz1nLnRhZztpZigzPT09a3x8ND09PWspaWYoaz1nLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLGs9PT1lfHw4PT09ay5ub2RlVHlwZSYmay5wYXJlbnROb2RlPT09ZSlyZXR1cm47Zz1nLnJldHVybn1mb3IoO251bGwhPT1oOyl7Zz13YyhoKTtpZihudWxsPT09ZylyZXR1cm47az1nLnRhZztpZig1PT09a3x8Nj09PWspe2Q9Zj1nO2NvbnRpbnVlIGF9aD1oLnBhcmVudE5vZGV9fWQ9ZC5yZXR1cm59TmIoZnVuY3Rpb24oKXt2YXIgZD1mLGU9eGIoYyksZz1bXTtcbmE6e3ZhciBoPU1jLmdldChhKTtpZih2b2lkIDAhPT1oKXt2YXIgaz10ZCx4PWE7c3dpdGNoKGEpe2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDA9PT1vZChjKSlicmVhayBhO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6az1SZDticmVhaztjYXNlIFwiZm9jdXNpblwiOng9XCJmb2N1c1wiO2s9RmQ7YnJlYWs7Y2FzZSBcImZvY3Vzb3V0XCI6eD1cImJsdXJcIjtrPUZkO2JyZWFrO2Nhc2UgXCJiZWZvcmVibHVyXCI6Y2FzZSBcImFmdGVyYmx1clwiOms9RmQ7YnJlYWs7Y2FzZSBcImNsaWNrXCI6aWYoMj09PWMuYnV0dG9uKWJyZWFrIGE7Y2FzZSBcImF1eGNsaWNrXCI6Y2FzZSBcImRibGNsaWNrXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJtb3VzZW1vdmVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJtb3VzZW91dFwiOmNhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwiY29udGV4dG1lbnVcIjprPUJkO2JyZWFrO2Nhc2UgXCJkcmFnXCI6Y2FzZSBcImRyYWdlbmRcIjpjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdleGl0XCI6Y2FzZSBcImRyYWdsZWF2ZVwiOmNhc2UgXCJkcmFnb3ZlclwiOmNhc2UgXCJkcmFnc3RhcnRcIjpjYXNlIFwiZHJvcFwiOms9XG5EZDticmVhaztjYXNlIFwidG91Y2hjYW5jZWxcIjpjYXNlIFwidG91Y2hlbmRcIjpjYXNlIFwidG91Y2htb3ZlXCI6Y2FzZSBcInRvdWNoc3RhcnRcIjprPVZkO2JyZWFrO2Nhc2UgSWM6Y2FzZSBKYzpjYXNlIEtjOms9SGQ7YnJlYWs7Y2FzZSBMYzprPVhkO2JyZWFrO2Nhc2UgXCJzY3JvbGxcIjprPXZkO2JyZWFrO2Nhc2UgXCJ3aGVlbFwiOms9WmQ7YnJlYWs7Y2FzZSBcImNvcHlcIjpjYXNlIFwiY3V0XCI6Y2FzZSBcInBhc3RlXCI6az1KZDticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcInBvaW50ZXJjYW5jZWxcIjpjYXNlIFwicG9pbnRlcmRvd25cIjpjYXNlIFwicG9pbnRlcm1vdmVcIjpjYXNlIFwicG9pbnRlcm91dFwiOmNhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVydXBcIjprPVRkfXZhciB3PTAhPT0oYiY0KSx6PSF3JiZcInNjcm9sbFwiPT09YSx1PXc/bnVsbCE9PWg/aCtcIkNhcHR1cmVcIjpudWxsOmg7dz1bXTtmb3IodmFyIHQ9ZCxxO251bGwhPT1cbnQ7KXtxPXQ7dmFyIHY9cS5zdGF0ZU5vZGU7NT09PXEudGFnJiZudWxsIT09diYmKHE9dixudWxsIT09dSYmKHY9T2IodCx1KSxudWxsIT12JiZ3LnB1c2goZWYodCx2LHEpKSkpO2lmKHopYnJlYWs7dD10LnJldHVybn0wPHcubGVuZ3RoJiYoaD1uZXcgayhoLHgsbnVsbCxjLGUpLGcucHVzaCh7ZXZlbnQ6aCxsaXN0ZW5lcnM6d30pKX19aWYoMD09PShiJjcpKXthOntoPVwibW91c2VvdmVyXCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hO2s9XCJtb3VzZW91dFwiPT09YXx8XCJwb2ludGVyb3V0XCI9PT1hO2lmKGgmJjA9PT0oYiYxNikmJih4PWMucmVsYXRlZFRhcmdldHx8Yy5mcm9tRWxlbWVudCkmJih3Yyh4KXx8eFtmZl0pKWJyZWFrIGE7aWYoa3x8aCl7aD1lLndpbmRvdz09PWU/ZTooaD1lLm93bmVyRG9jdW1lbnQpP2guZGVmYXVsdFZpZXd8fGgucGFyZW50V2luZG93OndpbmRvdztpZihrKXtpZih4PWMucmVsYXRlZFRhcmdldHx8Yy50b0VsZW1lbnQsaz1kLHg9eD93Yyh4KTpudWxsLG51bGwhPT1cbngmJih6PVpiKHgpLHghPT16fHw1IT09eC50YWcmJjYhPT14LnRhZykpeD1udWxsfWVsc2Ugaz1udWxsLHg9ZDtpZihrIT09eCl7dz1CZDt2PVwib25Nb3VzZUxlYXZlXCI7dT1cIm9uTW91c2VFbnRlclwiO3Q9XCJtb3VzZVwiO2lmKFwicG9pbnRlcm91dFwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSl3PVRkLHY9XCJvblBvaW50ZXJMZWF2ZVwiLHU9XCJvblBvaW50ZXJFbnRlclwiLHQ9XCJwb2ludGVyXCI7ej1udWxsPT1rP2g6dWUoayk7cT1udWxsPT14P2g6dWUoeCk7aD1uZXcgdyh2LHQrXCJsZWF2ZVwiLGssYyxlKTtoLnRhcmdldD16O2gucmVsYXRlZFRhcmdldD1xO3Y9bnVsbDt3YyhlKT09PWQmJih3PW5ldyB3KHUsdCtcImVudGVyXCIseCxjLGUpLHcudGFyZ2V0PXEsdy5yZWxhdGVkVGFyZ2V0PXosdj13KTt6PXY7aWYoayYmeCliOnt3PWs7dT14O3Q9MDtmb3IocT13O3E7cT1nZihxKSl0Kys7cT0wO2Zvcih2PXU7djt2PWdmKHYpKXErKztmb3IoOzA8dC1xOyl3PWdmKHcpLHQtLTtmb3IoOzA8cS10Oyl1PVxuZ2YodSkscS0tO2Zvcig7dC0tOyl7aWYodz09PXV8fG51bGwhPT11JiZ3PT09dS5hbHRlcm5hdGUpYnJlYWsgYjt3PWdmKHcpO3U9Z2YodSl9dz1udWxsfWVsc2Ugdz1udWxsO251bGwhPT1rJiZoZihnLGgsayx3LCExKTtudWxsIT09eCYmbnVsbCE9PXomJmhmKGcseix4LHcsITApfX19YTp7aD1kP3VlKGQpOndpbmRvdztrPWgubm9kZU5hbWUmJmgubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtpZihcInNlbGVjdFwiPT09a3x8XCJpbnB1dFwiPT09ayYmXCJmaWxlXCI9PT1oLnR5cGUpdmFyIEo9dmU7ZWxzZSBpZihtZShoKSlpZih3ZSlKPUZlO2Vsc2V7Sj1EZTt2YXIgSz1DZX1lbHNlKGs9aC5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWsudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWgudHlwZXx8XCJyYWRpb1wiPT09aC50eXBlKSYmKEo9RWUpO2lmKEomJihKPUooYSxkKSkpe25lKGcsSixjLGUpO2JyZWFrIGF9SyYmSyhhLGgsZCk7XCJmb2N1c291dFwiPT09YSYmKEs9aC5fd3JhcHBlclN0YXRlKSYmXG5LLmNvbnRyb2xsZWQmJlwibnVtYmVyXCI9PT1oLnR5cGUmJmJiKGgsXCJudW1iZXJcIixoLnZhbHVlKX1LPWQ/dWUoZCk6d2luZG93O3N3aXRjaChhKXtjYXNlIFwiZm9jdXNpblwiOmlmKG1lKEspfHxcInRydWVcIj09PUsuY29udGVudEVkaXRhYmxlKVFlPUssUmU9ZCxTZT1udWxsO2JyZWFrO2Nhc2UgXCJmb2N1c291dFwiOlNlPVJlPVFlPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlZG93blwiOlRlPSEwO2JyZWFrO2Nhc2UgXCJjb250ZXh0bWVudVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcImRyYWdlbmRcIjpUZT0hMTtVZShnLGMsZSk7YnJlYWs7Y2FzZSBcInNlbGVjdGlvbmNoYW5nZVwiOmlmKFBlKWJyZWFrO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6VWUoZyxjLGUpfXZhciBRO2lmKGFlKWI6e3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25zdGFydFwiOnZhciBMPVwib25Db21wb3NpdGlvblN0YXJ0XCI7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpMPVwib25Db21wb3NpdGlvbkVuZFwiO2JyZWFrIGI7XG5jYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjpMPVwib25Db21wb3NpdGlvblVwZGF0ZVwiO2JyZWFrIGJ9TD12b2lkIDB9ZWxzZSBpZT9nZShhLGMpJiYoTD1cIm9uQ29tcG9zaXRpb25FbmRcIik6XCJrZXlkb3duXCI9PT1hJiYyMjk9PT1jLmtleUNvZGUmJihMPVwib25Db21wb3NpdGlvblN0YXJ0XCIpO0wmJihkZSYmXCJrb1wiIT09Yy5sb2NhbGUmJihpZXx8XCJvbkNvbXBvc2l0aW9uU3RhcnRcIiE9PUw/XCJvbkNvbXBvc2l0aW9uRW5kXCI9PT1MJiZpZSYmKFE9bmQoKSk6KGtkPWUsbGQ9XCJ2YWx1ZVwiaW4ga2Q/a2QudmFsdWU6a2QudGV4dENvbnRlbnQsaWU9ITApKSxLPW9lKGQsTCksMDxLLmxlbmd0aCYmKEw9bmV3IExkKEwsYSxudWxsLGMsZSksZy5wdXNoKHtldmVudDpMLGxpc3RlbmVyczpLfSksUT9MLmRhdGE9UTooUT1oZShjKSxudWxsIT09USYmKEwuZGF0YT1RKSkpKTtpZihRPWNlP2plKGEsYyk6a2UoYSxjKSlkPW9lKGQsXCJvbkJlZm9yZUlucHV0XCIpLDA8ZC5sZW5ndGgmJihlPW5ldyBMZChcIm9uQmVmb3JlSW5wdXRcIixcblwiYmVmb3JlaW5wdXRcIixudWxsLGMsZSksZy5wdXNoKHtldmVudDplLGxpc3RlbmVyczpkfSksZS5kYXRhPVEpfXNlKGcsYil9KX1mdW5jdGlvbiBlZihhLGIsYyl7cmV0dXJue2luc3RhbmNlOmEsbGlzdGVuZXI6YixjdXJyZW50VGFyZ2V0OmN9fWZ1bmN0aW9uIG9lKGEsYil7Zm9yKHZhciBjPWIrXCJDYXB0dXJlXCIsZD1bXTtudWxsIT09YTspe3ZhciBlPWEsZj1lLnN0YXRlTm9kZTs1PT09ZS50YWcmJm51bGwhPT1mJiYoZT1mLGY9T2IoYSxjKSxudWxsIT1mJiZkLnVuc2hpZnQoZWYoYSxmLGUpKSxmPU9iKGEsYiksbnVsbCE9ZiYmZC5wdXNoKGVmKGEsZixlKSkpO2E9YS5yZXR1cm59cmV0dXJuIGR9ZnVuY3Rpb24gZ2YoYSl7aWYobnVsbD09PWEpcmV0dXJuIG51bGw7ZG8gYT1hLnJldHVybjt3aGlsZShhJiY1IT09YS50YWcpO3JldHVybiBhP2E6bnVsbH1cbmZ1bmN0aW9uIGhmKGEsYixjLGQsZSl7Zm9yKHZhciBmPWIuX3JlYWN0TmFtZSxnPVtdO251bGwhPT1jJiZjIT09ZDspe3ZhciBoPWMsaz1oLmFsdGVybmF0ZSxsPWguc3RhdGVOb2RlO2lmKG51bGwhPT1rJiZrPT09ZClicmVhazs1PT09aC50YWcmJm51bGwhPT1sJiYoaD1sLGU/KGs9T2IoYyxmKSxudWxsIT1rJiZnLnVuc2hpZnQoZWYoYyxrLGgpKSk6ZXx8KGs9T2IoYyxmKSxudWxsIT1rJiZnLnB1c2goZWYoYyxrLGgpKSkpO2M9Yy5yZXR1cm59MCE9PWcubGVuZ3RoJiZhLnB1c2goe2V2ZW50OmIsbGlzdGVuZXJzOmd9KX1mdW5jdGlvbiBqZigpe312YXIga2Y9bnVsbCxsZj1udWxsO2Z1bmN0aW9uIG1mKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJidXR0b25cIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInRleHRhcmVhXCI6cmV0dXJuISFiLmF1dG9Gb2N1c31yZXR1cm4hMX1cbmZ1bmN0aW9uIG5mKGEsYil7cmV0dXJuXCJ0ZXh0YXJlYVwiPT09YXx8XCJvcHRpb25cIj09PWF8fFwibm9zY3JpcHRcIj09PWF8fFwic3RyaW5nXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJudW1iZXJcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MLl9faHRtbH12YXIgb2Y9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAscGY9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwO2Z1bmN0aW9uIHFmKGEpezE9PT1hLm5vZGVUeXBlP2EudGV4dENvbnRlbnQ9XCJcIjo5PT09YS5ub2RlVHlwZSYmKGE9YS5ib2R5LG51bGwhPWEmJihhLnRleHRDb250ZW50PVwiXCIpKX1cbmZ1bmN0aW9uIHJmKGEpe2Zvcig7bnVsbCE9YTthPWEubmV4dFNpYmxpbmcpe3ZhciBiPWEubm9kZVR5cGU7aWYoMT09PWJ8fDM9PT1iKWJyZWFrfXJldHVybiBhfWZ1bmN0aW9uIHNmKGEpe2E9YS5wcmV2aW91c1NpYmxpbmc7Zm9yKHZhciBiPTA7YTspe2lmKDg9PT1hLm5vZGVUeXBlKXt2YXIgYz1hLmRhdGE7aWYoXCIkXCI9PT1jfHxcIiQhXCI9PT1jfHxcIiQ/XCI9PT1jKXtpZigwPT09YilyZXR1cm4gYTtiLS19ZWxzZVwiLyRcIj09PWMmJmIrK31hPWEucHJldmlvdXNTaWJsaW5nfXJldHVybiBudWxsfXZhciB0Zj0wO2Z1bmN0aW9uIHVmKGEpe3JldHVybnskJHR5cGVvZjpHYSx0b1N0cmluZzphLHZhbHVlT2Y6YX19dmFyIHZmPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpLHdmPVwiX19yZWFjdEZpYmVyJFwiK3ZmLHhmPVwiX19yZWFjdFByb3BzJFwiK3ZmLGZmPVwiX19yZWFjdENvbnRhaW5lciRcIit2Zix5Zj1cIl9fcmVhY3RFdmVudHMkXCIrdmY7XG5mdW5jdGlvbiB3YyhhKXt2YXIgYj1hW3dmXTtpZihiKXJldHVybiBiO2Zvcih2YXIgYz1hLnBhcmVudE5vZGU7Yzspe2lmKGI9Y1tmZl18fGNbd2ZdKXtjPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1iLmNoaWxkfHxudWxsIT09YyYmbnVsbCE9PWMuY2hpbGQpZm9yKGE9c2YoYSk7bnVsbCE9PWE7KXtpZihjPWFbd2ZdKXJldHVybiBjO2E9c2YoYSl9cmV0dXJuIGJ9YT1jO2M9YS5wYXJlbnROb2RlfXJldHVybiBudWxsfWZ1bmN0aW9uIENiKGEpe2E9YVt3Zl18fGFbZmZdO3JldHVybiFhfHw1IT09YS50YWcmJjYhPT1hLnRhZyYmMTMhPT1hLnRhZyYmMyE9PWEudGFnP251bGw6YX1mdW5jdGlvbiB1ZShhKXtpZig1PT09YS50YWd8fDY9PT1hLnRhZylyZXR1cm4gYS5zdGF0ZU5vZGU7dGhyb3cgRXJyb3IoeSgzMykpO31mdW5jdGlvbiBEYihhKXtyZXR1cm4gYVt4Zl18fG51bGx9XG5mdW5jdGlvbiAkZShhKXt2YXIgYj1hW3lmXTt2b2lkIDA9PT1iJiYoYj1hW3lmXT1uZXcgU2V0KTtyZXR1cm4gYn12YXIgemY9W10sQWY9LTE7ZnVuY3Rpb24gQmYoYSl7cmV0dXJue2N1cnJlbnQ6YX19ZnVuY3Rpb24gSChhKXswPkFmfHwoYS5jdXJyZW50PXpmW0FmXSx6ZltBZl09bnVsbCxBZi0tKX1mdW5jdGlvbiBJKGEsYil7QWYrKzt6ZltBZl09YS5jdXJyZW50O2EuY3VycmVudD1ifXZhciBDZj17fSxNPUJmKENmKSxOPUJmKCExKSxEZj1DZjtcbmZ1bmN0aW9uIEVmKGEsYil7dmFyIGM9YS50eXBlLmNvbnRleHRUeXBlcztpZighYylyZXR1cm4gQ2Y7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoZCYmZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PT09YilyZXR1cm4gZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDt2YXIgZT17fSxmO2ZvcihmIGluIGMpZVtmXT1iW2ZdO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1iLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9ZSk7cmV0dXJuIGV9ZnVuY3Rpb24gRmYoYSl7YT1hLmNoaWxkQ29udGV4dFR5cGVzO3JldHVybiBudWxsIT09YSYmdm9pZCAwIT09YX1mdW5jdGlvbiBHZigpe0goTik7SChNKX1mdW5jdGlvbiBIZihhLGIsYyl7aWYoTS5jdXJyZW50IT09Q2YpdGhyb3cgRXJyb3IoeSgxNjgpKTtJKE0sYik7SShOLGMpfVxuZnVuY3Rpb24gSWYoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2E9Yi5jaGlsZENvbnRleHRUeXBlcztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5nZXRDaGlsZENvbnRleHQpcmV0dXJuIGM7ZD1kLmdldENoaWxkQ29udGV4dCgpO2Zvcih2YXIgZSBpbiBkKWlmKCEoZSBpbiBhKSl0aHJvdyBFcnJvcih5KDEwOCxSYShiKXx8XCJVbmtub3duXCIsZSkpO3JldHVybiBtKHt9LGMsZCl9ZnVuY3Rpb24gSmYoYSl7YT0oYT1hLnN0YXRlTm9kZSkmJmEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHR8fENmO0RmPU0uY3VycmVudDtJKE0sYSk7SShOLE4uY3VycmVudCk7cmV0dXJuITB9ZnVuY3Rpb24gS2YoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2lmKCFkKXRocm93IEVycm9yKHkoMTY5KSk7Yz8oYT1JZihhLGIsRGYpLGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ9YSxIKE4pLEgoTSksSShNLGEpKTpIKE4pO0koTixjKX1cbnZhciBMZj1udWxsLE1mPW51bGwsTmY9ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHksT2Y9ci51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrLFBmPXIudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2ssUWY9ci51bnN0YWJsZV9zaG91bGRZaWVsZCxSZj1yLnVuc3RhYmxlX3JlcXVlc3RQYWludCxTZj1yLnVuc3RhYmxlX25vdyxUZj1yLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsLFVmPXIudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHksVmY9ci51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxXZj1yLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5LFhmPXIudW5zdGFibGVfTG93UHJpb3JpdHksWWY9ci51bnN0YWJsZV9JZGxlUHJpb3JpdHksWmY9e30sJGY9dm9pZCAwIT09UmY/UmY6ZnVuY3Rpb24oKXt9LGFnPW51bGwsYmc9bnVsbCxjZz0hMSxkZz1TZigpLE89MUU0PmRnP1NmOmZ1bmN0aW9uKCl7cmV0dXJuIFNmKCktZGd9O1xuZnVuY3Rpb24gZWcoKXtzd2l0Y2goVGYoKSl7Y2FzZSBVZjpyZXR1cm4gOTk7Y2FzZSBWZjpyZXR1cm4gOTg7Y2FzZSBXZjpyZXR1cm4gOTc7Y2FzZSBYZjpyZXR1cm4gOTY7Y2FzZSBZZjpyZXR1cm4gOTU7ZGVmYXVsdDp0aHJvdyBFcnJvcih5KDMzMikpO319ZnVuY3Rpb24gZmcoYSl7c3dpdGNoKGEpe2Nhc2UgOTk6cmV0dXJuIFVmO2Nhc2UgOTg6cmV0dXJuIFZmO2Nhc2UgOTc6cmV0dXJuIFdmO2Nhc2UgOTY6cmV0dXJuIFhmO2Nhc2UgOTU6cmV0dXJuIFlmO2RlZmF1bHQ6dGhyb3cgRXJyb3IoeSgzMzIpKTt9fWZ1bmN0aW9uIGdnKGEsYil7YT1mZyhhKTtyZXR1cm4gTmYoYSxiKX1mdW5jdGlvbiBoZyhhLGIsYyl7YT1mZyhhKTtyZXR1cm4gT2YoYSxiLGMpfWZ1bmN0aW9uIGlnKCl7aWYobnVsbCE9PWJnKXt2YXIgYT1iZztiZz1udWxsO1BmKGEpfWpnKCl9XG5mdW5jdGlvbiBqZygpe2lmKCFjZyYmbnVsbCE9PWFnKXtjZz0hMDt2YXIgYT0wO3RyeXt2YXIgYj1hZztnZyg5OSxmdW5jdGlvbigpe2Zvcig7YTxiLmxlbmd0aDthKyspe3ZhciBjPWJbYV07ZG8gYz1jKCEwKTt3aGlsZShudWxsIT09Yyl9fSk7YWc9bnVsbH1jYXRjaChjKXt0aHJvdyBudWxsIT09YWcmJihhZz1hZy5zbGljZShhKzEpKSxPZihVZixpZyksYzt9ZmluYWxseXtjZz0hMX19fXZhciBrZz1yYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZztmdW5jdGlvbiBsZyhhLGIpe2lmKGEmJmEuZGVmYXVsdFByb3BzKXtiPW0oe30sYik7YT1hLmRlZmF1bHRQcm9wcztmb3IodmFyIGMgaW4gYSl2b2lkIDA9PT1iW2NdJiYoYltjXT1hW2NdKTtyZXR1cm4gYn1yZXR1cm4gYn12YXIgbWc9QmYobnVsbCksbmc9bnVsbCxvZz1udWxsLHBnPW51bGw7ZnVuY3Rpb24gcWcoKXtwZz1vZz1uZz1udWxsfVxuZnVuY3Rpb24gcmcoYSl7dmFyIGI9bWcuY3VycmVudDtIKG1nKTthLnR5cGUuX2NvbnRleHQuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIHNnKGEsYil7Zm9yKDtudWxsIT09YTspe3ZhciBjPWEuYWx0ZXJuYXRlO2lmKChhLmNoaWxkTGFuZXMmYik9PT1iKWlmKG51bGw9PT1jfHwoYy5jaGlsZExhbmVzJmIpPT09YilicmVhaztlbHNlIGMuY2hpbGRMYW5lc3w9YjtlbHNlIGEuY2hpbGRMYW5lc3w9YixudWxsIT09YyYmKGMuY2hpbGRMYW5lc3w9Yik7YT1hLnJldHVybn19ZnVuY3Rpb24gdGcoYSxiKXtuZz1hO3BnPW9nPW51bGw7YT1hLmRlcGVuZGVuY2llcztudWxsIT09YSYmbnVsbCE9PWEuZmlyc3RDb250ZXh0JiYoMCE9PShhLmxhbmVzJmIpJiYodWc9ITApLGEuZmlyc3RDb250ZXh0PW51bGwpfVxuZnVuY3Rpb24gdmcoYSxiKXtpZihwZyE9PWEmJiExIT09YiYmMCE9PWIpe2lmKFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MTA3Mzc0MTgyMz09PWIpcGc9YSxiPTEwNzM3NDE4MjM7Yj17Y29udGV4dDphLG9ic2VydmVkQml0czpiLG5leHQ6bnVsbH07aWYobnVsbD09PW9nKXtpZihudWxsPT09bmcpdGhyb3cgRXJyb3IoeSgzMDgpKTtvZz1iO25nLmRlcGVuZGVuY2llcz17bGFuZXM6MCxmaXJzdENvbnRleHQ6YixyZXNwb25kZXJzOm51bGx9fWVsc2Ugb2c9b2cubmV4dD1ifXJldHVybiBhLl9jdXJyZW50VmFsdWV9dmFyIHdnPSExO2Z1bmN0aW9uIHhnKGEpe2EudXBkYXRlUXVldWU9e2Jhc2VTdGF0ZTphLm1lbW9pemVkU3RhdGUsZmlyc3RCYXNlVXBkYXRlOm51bGwsbGFzdEJhc2VVcGRhdGU6bnVsbCxzaGFyZWQ6e3BlbmRpbmc6bnVsbH0sZWZmZWN0czpudWxsfX1cbmZ1bmN0aW9uIHlnKGEsYil7YT1hLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9PT1hJiYoYi51cGRhdGVRdWV1ZT17YmFzZVN0YXRlOmEuYmFzZVN0YXRlLGZpcnN0QmFzZVVwZGF0ZTphLmZpcnN0QmFzZVVwZGF0ZSxsYXN0QmFzZVVwZGF0ZTphLmxhc3RCYXNlVXBkYXRlLHNoYXJlZDphLnNoYXJlZCxlZmZlY3RzOmEuZWZmZWN0c30pfWZ1bmN0aW9uIHpnKGEsYil7cmV0dXJue2V2ZW50VGltZTphLGxhbmU6Yix0YWc6MCxwYXlsb2FkOm51bGwsY2FsbGJhY2s6bnVsbCxuZXh0Om51bGx9fWZ1bmN0aW9uIEFnKGEsYil7YT1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1hKXthPWEuc2hhcmVkO3ZhciBjPWEucGVuZGluZztudWxsPT09Yz9iLm5leHQ9YjooYi5uZXh0PWMubmV4dCxjLm5leHQ9Yik7YS5wZW5kaW5nPWJ9fVxuZnVuY3Rpb24gQmcoYSxiKXt2YXIgYz1hLnVwZGF0ZVF1ZXVlLGQ9YS5hbHRlcm5hdGU7aWYobnVsbCE9PWQmJihkPWQudXBkYXRlUXVldWUsYz09PWQpKXt2YXIgZT1udWxsLGY9bnVsbDtjPWMuZmlyc3RCYXNlVXBkYXRlO2lmKG51bGwhPT1jKXtkb3t2YXIgZz17ZXZlbnRUaW1lOmMuZXZlbnRUaW1lLGxhbmU6Yy5sYW5lLHRhZzpjLnRhZyxwYXlsb2FkOmMucGF5bG9hZCxjYWxsYmFjazpjLmNhbGxiYWNrLG5leHQ6bnVsbH07bnVsbD09PWY/ZT1mPWc6Zj1mLm5leHQ9ZztjPWMubmV4dH13aGlsZShudWxsIT09Yyk7bnVsbD09PWY/ZT1mPWI6Zj1mLm5leHQ9Yn1lbHNlIGU9Zj1iO2M9e2Jhc2VTdGF0ZTpkLmJhc2VTdGF0ZSxmaXJzdEJhc2VVcGRhdGU6ZSxsYXN0QmFzZVVwZGF0ZTpmLHNoYXJlZDpkLnNoYXJlZCxlZmZlY3RzOmQuZWZmZWN0c307YS51cGRhdGVRdWV1ZT1jO3JldHVybn1hPWMubGFzdEJhc2VVcGRhdGU7bnVsbD09PWE/Yy5maXJzdEJhc2VVcGRhdGU9YjphLm5leHQ9XG5iO2MubGFzdEJhc2VVcGRhdGU9Yn1cbmZ1bmN0aW9uIENnKGEsYixjLGQpe3ZhciBlPWEudXBkYXRlUXVldWU7d2c9ITE7dmFyIGY9ZS5maXJzdEJhc2VVcGRhdGUsZz1lLmxhc3RCYXNlVXBkYXRlLGg9ZS5zaGFyZWQucGVuZGluZztpZihudWxsIT09aCl7ZS5zaGFyZWQucGVuZGluZz1udWxsO3ZhciBrPWgsbD1rLm5leHQ7ay5uZXh0PW51bGw7bnVsbD09PWc/Zj1sOmcubmV4dD1sO2c9azt2YXIgbj1hLmFsdGVybmF0ZTtpZihudWxsIT09bil7bj1uLnVwZGF0ZVF1ZXVlO3ZhciBBPW4ubGFzdEJhc2VVcGRhdGU7QSE9PWcmJihudWxsPT09QT9uLmZpcnN0QmFzZVVwZGF0ZT1sOkEubmV4dD1sLG4ubGFzdEJhc2VVcGRhdGU9ayl9fWlmKG51bGwhPT1mKXtBPWUuYmFzZVN0YXRlO2c9MDtuPWw9az1udWxsO2Rve2g9Zi5sYW5lO3ZhciBwPWYuZXZlbnRUaW1lO2lmKChkJmgpPT09aCl7bnVsbCE9PW4mJihuPW4ubmV4dD17ZXZlbnRUaW1lOnAsbGFuZTowLHRhZzpmLnRhZyxwYXlsb2FkOmYucGF5bG9hZCxjYWxsYmFjazpmLmNhbGxiYWNrLFxubmV4dDpudWxsfSk7YTp7dmFyIEM9YSx4PWY7aD1iO3A9Yztzd2l0Y2goeC50YWcpe2Nhc2UgMTpDPXgucGF5bG9hZDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgQyl7QT1DLmNhbGwocCxBLGgpO2JyZWFrIGF9QT1DO2JyZWFrIGE7Y2FzZSAzOkMuZmxhZ3M9Qy5mbGFncyYtNDA5N3w2NDtjYXNlIDA6Qz14LnBheWxvYWQ7aD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgQz9DLmNhbGwocCxBLGgpOkM7aWYobnVsbD09PWh8fHZvaWQgMD09PWgpYnJlYWsgYTtBPW0oe30sQSxoKTticmVhayBhO2Nhc2UgMjp3Zz0hMH19bnVsbCE9PWYuY2FsbGJhY2smJihhLmZsYWdzfD0zMixoPWUuZWZmZWN0cyxudWxsPT09aD9lLmVmZmVjdHM9W2ZdOmgucHVzaChmKSl9ZWxzZSBwPXtldmVudFRpbWU6cCxsYW5lOmgsdGFnOmYudGFnLHBheWxvYWQ6Zi5wYXlsb2FkLGNhbGxiYWNrOmYuY2FsbGJhY2ssbmV4dDpudWxsfSxudWxsPT09bj8obD1uPXAsaz1BKTpuPW4ubmV4dD1wLGd8PWg7Zj1mLm5leHQ7aWYobnVsbD09PVxuZilpZihoPWUuc2hhcmVkLnBlbmRpbmcsbnVsbD09PWgpYnJlYWs7ZWxzZSBmPWgubmV4dCxoLm5leHQ9bnVsbCxlLmxhc3RCYXNlVXBkYXRlPWgsZS5zaGFyZWQucGVuZGluZz1udWxsfXdoaWxlKDEpO251bGw9PT1uJiYoaz1BKTtlLmJhc2VTdGF0ZT1rO2UuZmlyc3RCYXNlVXBkYXRlPWw7ZS5sYXN0QmFzZVVwZGF0ZT1uO0RnfD1nO2EubGFuZXM9ZzthLm1lbW9pemVkU3RhdGU9QX19ZnVuY3Rpb24gRWcoYSxiLGMpe2E9Yi5lZmZlY3RzO2IuZWZmZWN0cz1udWxsO2lmKG51bGwhPT1hKWZvcihiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBkPWFbYl0sZT1kLmNhbGxiYWNrO2lmKG51bGwhPT1lKXtkLmNhbGxiYWNrPW51bGw7ZD1jO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlKXRocm93IEVycm9yKHkoMTkxLGUpKTtlLmNhbGwoZCl9fX12YXIgRmc9KG5ldyBhYS5Db21wb25lbnQpLnJlZnM7XG5mdW5jdGlvbiBHZyhhLGIsYyxkKXtiPWEubWVtb2l6ZWRTdGF0ZTtjPWMoZCxiKTtjPW51bGw9PT1jfHx2b2lkIDA9PT1jP2I6bSh7fSxiLGMpO2EubWVtb2l6ZWRTdGF0ZT1jOzA9PT1hLmxhbmVzJiYoYS51cGRhdGVRdWV1ZS5iYXNlU3RhdGU9Yyl9XG52YXIgS2c9e2lzTW91bnRlZDpmdW5jdGlvbihhKXtyZXR1cm4oYT1hLl9yZWFjdEludGVybmFscyk/WmIoYSk9PT1hOiExfSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbHM7dmFyIGQ9SGcoKSxlPUlnKGEpLGY9emcoZCxlKTtmLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGYuY2FsbGJhY2s9Yyk7QWcoYSxmKTtKZyhhLGUsZCl9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbHM7dmFyIGQ9SGcoKSxlPUlnKGEpLGY9emcoZCxlKTtmLnRhZz0xO2YucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZi5jYWxsYmFjaz1jKTtBZyhhLGYpO0pnKGEsZSxkKX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKGEsYil7YT1hLl9yZWFjdEludGVybmFsczt2YXIgYz1IZygpLGQ9SWcoYSksZT16ZyhjLGQpO2UudGFnPTI7dm9pZCAwIT09YiYmbnVsbCE9PWImJihlLmNhbGxiYWNrPVxuYik7QWcoYSxlKTtKZyhhLGQsYyl9fTtmdW5jdGlvbiBMZyhhLGIsYyxkLGUsZixnKXthPWEuc3RhdGVOb2RlO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnNob3VsZENvbXBvbmVudFVwZGF0ZT9hLnNob3VsZENvbXBvbmVudFVwZGF0ZShkLGYsZyk6Yi5wcm90b3R5cGUmJmIucHJvdG90eXBlLmlzUHVyZVJlYWN0Q29tcG9uZW50PyFKZShjLGQpfHwhSmUoZSxmKTohMH1cbmZ1bmN0aW9uIE1nKGEsYixjKXt2YXIgZD0hMSxlPUNmO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9mPXZnKGYpOihlPUZmKGIpP0RmOk0uY3VycmVudCxkPWIuY29udGV4dFR5cGVzLGY9KGQ9bnVsbCE9PWQmJnZvaWQgMCE9PWQpP0VmKGEsZSk6Q2YpO2I9bmV3IGIoYyxmKTthLm1lbW9pemVkU3RhdGU9bnVsbCE9PWIuc3RhdGUmJnZvaWQgMCE9PWIuc3RhdGU/Yi5zdGF0ZTpudWxsO2IudXBkYXRlcj1LZzthLnN0YXRlTm9kZT1iO2IuX3JlYWN0SW50ZXJuYWxzPWE7ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1mKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIE5nKGEsYixjLGQpe2E9Yi5zdGF0ZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO2Iuc3RhdGUhPT1hJiZLZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGIsYi5zdGF0ZSxudWxsKX1cbmZ1bmN0aW9uIE9nKGEsYixjLGQpe3ZhciBlPWEuc3RhdGVOb2RlO2UucHJvcHM9YztlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtlLnJlZnM9Rmc7eGcoYSk7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2UuY29udGV4dD12ZyhmKTooZj1GZihiKT9EZjpNLmN1cnJlbnQsZS5jb250ZXh0PUVmKGEsZikpO0NnKGEsYyxlLGQpO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2Y9Yi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGYmJihHZyhhLGIsZixjKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50fHxcbihiPWUuc3RhdGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50JiZlLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpLGIhPT1lLnN0YXRlJiZLZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGUsZS5zdGF0ZSxudWxsKSxDZyhhLGMsZSxkKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50RGlkTW91bnQmJihhLmZsYWdzfD00KX12YXIgUGc9QXJyYXkuaXNBcnJheTtcbmZ1bmN0aW9uIFFnKGEsYixjKXthPWMucmVmO2lmKG51bGwhPT1hJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmXCJvYmplY3RcIiE9PXR5cGVvZiBhKXtpZihjLl9vd25lcil7Yz1jLl9vd25lcjtpZihjKXtpZigxIT09Yy50YWcpdGhyb3cgRXJyb3IoeSgzMDkpKTt2YXIgZD1jLnN0YXRlTm9kZX1pZighZCl0aHJvdyBFcnJvcih5KDE0NyxhKSk7dmFyIGU9XCJcIithO2lmKG51bGwhPT1iJiZudWxsIT09Yi5yZWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLnJlZiYmYi5yZWYuX3N0cmluZ1JlZj09PWUpcmV0dXJuIGIucmVmO2I9ZnVuY3Rpb24oYSl7dmFyIGI9ZC5yZWZzO2I9PT1GZyYmKGI9ZC5yZWZzPXt9KTtudWxsPT09YT9kZWxldGUgYltlXTpiW2VdPWF9O2IuX3N0cmluZ1JlZj1lO3JldHVybiBifWlmKFwic3RyaW5nXCIhPT10eXBlb2YgYSl0aHJvdyBFcnJvcih5KDI4NCkpO2lmKCFjLl9vd25lcil0aHJvdyBFcnJvcih5KDI5MCxhKSk7fXJldHVybiBhfVxuZnVuY3Rpb24gUmcoYSxiKXtpZihcInRleHRhcmVhXCIhPT1hLnR5cGUpdGhyb3cgRXJyb3IoeSgzMSxcIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYikuam9pbihcIiwgXCIpK1wifVwiOmIpKTt9XG5mdW5jdGlvbiBTZyhhKXtmdW5jdGlvbiBiKGIsYyl7aWYoYSl7dmFyIGQ9Yi5sYXN0RWZmZWN0O251bGwhPT1kPyhkLm5leHRFZmZlY3Q9YyxiLmxhc3RFZmZlY3Q9Yyk6Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9YztjLm5leHRFZmZlY3Q9bnVsbDtjLmZsYWdzPTh9fWZ1bmN0aW9uIGMoYyxkKXtpZighYSlyZXR1cm4gbnVsbDtmb3IoO251bGwhPT1kOyliKGMsZCksZD1kLnNpYmxpbmc7cmV0dXJuIG51bGx9ZnVuY3Rpb24gZChhLGIpe2ZvcihhPW5ldyBNYXA7bnVsbCE9PWI7KW51bGwhPT1iLmtleT9hLnNldChiLmtleSxiKTphLnNldChiLmluZGV4LGIpLGI9Yi5zaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIGUoYSxiKXthPVRnKGEsYik7YS5pbmRleD0wO2Euc2libGluZz1udWxsO3JldHVybiBhfWZ1bmN0aW9uIGYoYixjLGQpe2IuaW5kZXg9ZDtpZighYSlyZXR1cm4gYztkPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1kKXJldHVybiBkPWQuaW5kZXgsZDxjPyhiLmZsYWdzPTIsXG5jKTpkO2IuZmxhZ3M9MjtyZXR1cm4gY31mdW5jdGlvbiBnKGIpe2EmJm51bGw9PT1iLmFsdGVybmF0ZSYmKGIuZmxhZ3M9Mik7cmV0dXJuIGJ9ZnVuY3Rpb24gaChhLGIsYyxkKXtpZihudWxsPT09Ynx8NiE9PWIudGFnKXJldHVybiBiPVVnKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIGsoYSxiLGMsZCl7aWYobnVsbCE9PWImJmIuZWxlbWVudFR5cGU9PT1jLnR5cGUpcmV0dXJuIGQ9ZShiLGMucHJvcHMpLGQucmVmPVFnKGEsYixjKSxkLnJldHVybj1hLGQ7ZD1WZyhjLnR5cGUsYy5rZXksYy5wcm9wcyxudWxsLGEubW9kZSxkKTtkLnJlZj1RZyhhLGIsYyk7ZC5yZXR1cm49YTtyZXR1cm4gZH1mdW5jdGlvbiBsKGEsYixjLGQpe2lmKG51bGw9PT1ifHw0IT09Yi50YWd8fGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8hPT1jLmNvbnRhaW5lckluZm98fGIuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uIT09Yy5pbXBsZW1lbnRhdGlvbilyZXR1cm4gYj1cbldnKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjLmNoaWxkcmVufHxbXSk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBuKGEsYixjLGQsZil7aWYobnVsbD09PWJ8fDchPT1iLnRhZylyZXR1cm4gYj1YZyhjLGEubW9kZSxkLGYpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIEEoYSxiLGMpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYnx8XCJudW1iZXJcIj09PXR5cGVvZiBiKXJldHVybiBiPVVnKFwiXCIrYixhLm1vZGUsYyksYi5yZXR1cm49YSxiO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWIpe3N3aXRjaChiLiQkdHlwZW9mKXtjYXNlIHNhOnJldHVybiBjPVZnKGIudHlwZSxiLmtleSxiLnByb3BzLG51bGwsYS5tb2RlLGMpLGMucmVmPVFnKGEsbnVsbCxiKSxjLnJldHVybj1hLGM7Y2FzZSB0YTpyZXR1cm4gYj1XZyhiLGEubW9kZSxjKSxiLnJldHVybj1hLGJ9aWYoUGcoYil8fExhKGIpKXJldHVybiBiPVhnKGIsXG5hLm1vZGUsYyxudWxsKSxiLnJldHVybj1hLGI7UmcoYSxiKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBwKGEsYixjLGQpe3ZhciBlPW51bGwhPT1iP2Iua2V5Om51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBjfHxcIm51bWJlclwiPT09dHlwZW9mIGMpcmV0dXJuIG51bGwhPT1lP251bGw6aChhLGIsXCJcIitjLGQpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3N3aXRjaChjLiQkdHlwZW9mKXtjYXNlIHNhOnJldHVybiBjLmtleT09PWU/Yy50eXBlPT09dWE/bihhLGIsYy5wcm9wcy5jaGlsZHJlbixkLGUpOmsoYSxiLGMsZCk6bnVsbDtjYXNlIHRhOnJldHVybiBjLmtleT09PWU/bChhLGIsYyxkKTpudWxsfWlmKFBnKGMpfHxMYShjKSlyZXR1cm4gbnVsbCE9PWU/bnVsbDpuKGEsYixjLGQsbnVsbCk7UmcoYSxjKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBDKGEsYixjLGQsZSl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBkfHxcIm51bWJlclwiPT09dHlwZW9mIGQpcmV0dXJuIGE9YS5nZXQoYyl8fFxubnVsbCxoKGIsYSxcIlwiK2QsZSk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCl7c3dpdGNoKGQuJCR0eXBlb2Ype2Nhc2Ugc2E6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGQudHlwZT09PXVhP24oYixhLGQucHJvcHMuY2hpbGRyZW4sZSxkLmtleSk6ayhiLGEsZCxlKTtjYXNlIHRhOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxsKGIsYSxkLGUpfWlmKFBnKGQpfHxMYShkKSlyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxuKGIsYSxkLGUsbnVsbCk7UmcoYixkKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB4KGUsZyxoLGspe2Zvcih2YXIgbD1udWxsLHQ9bnVsbCx1PWcsej1nPTAscT1udWxsO251bGwhPT11JiZ6PGgubGVuZ3RoO3orKyl7dS5pbmRleD56PyhxPXUsdT1udWxsKTpxPXUuc2libGluZzt2YXIgbj1wKGUsdSxoW3pdLGspO2lmKG51bGw9PT1uKXtudWxsPT09dSYmKHU9cSk7YnJlYWt9YSYmdSYmbnVsbD09PVxubi5hbHRlcm5hdGUmJmIoZSx1KTtnPWYobixnLHopO251bGw9PT10P2w9bjp0LnNpYmxpbmc9bjt0PW47dT1xfWlmKHo9PT1oLmxlbmd0aClyZXR1cm4gYyhlLHUpLGw7aWYobnVsbD09PXUpe2Zvcig7ejxoLmxlbmd0aDt6KyspdT1BKGUsaFt6XSxrKSxudWxsIT09dSYmKGc9Zih1LGcseiksbnVsbD09PXQ/bD11OnQuc2libGluZz11LHQ9dSk7cmV0dXJuIGx9Zm9yKHU9ZChlLHUpO3o8aC5sZW5ndGg7eisrKXE9Qyh1LGUseixoW3pdLGspLG51bGwhPT1xJiYoYSYmbnVsbCE9PXEuYWx0ZXJuYXRlJiZ1LmRlbGV0ZShudWxsPT09cS5rZXk/ejpxLmtleSksZz1mKHEsZyx6KSxudWxsPT09dD9sPXE6dC5zaWJsaW5nPXEsdD1xKTthJiZ1LmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfWZ1bmN0aW9uIHcoZSxnLGgsayl7dmFyIGw9TGEoaCk7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGwpdGhyb3cgRXJyb3IoeSgxNTApKTtoPWwuY2FsbChoKTtpZihudWxsPT1cbmgpdGhyb3cgRXJyb3IoeSgxNTEpKTtmb3IodmFyIHQ9bD1udWxsLHU9Zyx6PWc9MCxxPW51bGwsbj1oLm5leHQoKTtudWxsIT09dSYmIW4uZG9uZTt6Kyssbj1oLm5leHQoKSl7dS5pbmRleD56PyhxPXUsdT1udWxsKTpxPXUuc2libGluZzt2YXIgdz1wKGUsdSxuLnZhbHVlLGspO2lmKG51bGw9PT13KXtudWxsPT09dSYmKHU9cSk7YnJlYWt9YSYmdSYmbnVsbD09PXcuYWx0ZXJuYXRlJiZiKGUsdSk7Zz1mKHcsZyx6KTtudWxsPT09dD9sPXc6dC5zaWJsaW5nPXc7dD13O3U9cX1pZihuLmRvbmUpcmV0dXJuIGMoZSx1KSxsO2lmKG51bGw9PT11KXtmb3IoOyFuLmRvbmU7eisrLG49aC5uZXh0KCkpbj1BKGUsbi52YWx1ZSxrKSxudWxsIT09biYmKGc9ZihuLGcseiksbnVsbD09PXQ/bD1uOnQuc2libGluZz1uLHQ9bik7cmV0dXJuIGx9Zm9yKHU9ZChlLHUpOyFuLmRvbmU7eisrLG49aC5uZXh0KCkpbj1DKHUsZSx6LG4udmFsdWUsayksbnVsbCE9PW4mJihhJiZudWxsIT09bi5hbHRlcm5hdGUmJlxudS5kZWxldGUobnVsbD09PW4ua2V5P3o6bi5rZXkpLGc9ZihuLGcseiksbnVsbD09PXQ/bD1uOnQuc2libGluZz1uLHQ9bik7YSYmdS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gbH1yZXR1cm4gZnVuY3Rpb24oYSxkLGYsaCl7dmFyIGs9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmZi50eXBlPT09dWEmJm51bGw9PT1mLmtleTtrJiYoZj1mLnByb3BzLmNoaWxkcmVuKTt2YXIgbD1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mO2lmKGwpc3dpdGNoKGYuJCR0eXBlb2Ype2Nhc2Ugc2E6YTp7bD1mLmtleTtmb3Ioaz1kO251bGwhPT1rOyl7aWYoay5rZXk9PT1sKXtzd2l0Y2goay50YWcpe2Nhc2UgNzppZihmLnR5cGU9PT11YSl7YyhhLGsuc2libGluZyk7ZD1lKGssZi5wcm9wcy5jaGlsZHJlbik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1icmVhaztkZWZhdWx0OmlmKGsuZWxlbWVudFR5cGU9PT1mLnR5cGUpe2MoYSxrLnNpYmxpbmcpO1xuZD1lKGssZi5wcm9wcyk7ZC5yZWY9UWcoYSxrLGYpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9fWMoYSxrKTticmVha31lbHNlIGIoYSxrKTtrPWsuc2libGluZ31mLnR5cGU9PT11YT8oZD1YZyhmLnByb3BzLmNoaWxkcmVuLGEubW9kZSxoLGYua2V5KSxkLnJldHVybj1hLGE9ZCk6KGg9VmcoZi50eXBlLGYua2V5LGYucHJvcHMsbnVsbCxhLm1vZGUsaCksaC5yZWY9UWcoYSxkLGYpLGgucmV0dXJuPWEsYT1oKX1yZXR1cm4gZyhhKTtjYXNlIHRhOmE6e2ZvcihrPWYua2V5O251bGwhPT1kOyl7aWYoZC5rZXk9PT1rKWlmKDQ9PT1kLnRhZyYmZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbz09PWYuY29udGFpbmVySW5mbyYmZC5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb249PT1mLmltcGxlbWVudGF0aW9uKXtjKGEsZC5zaWJsaW5nKTtkPWUoZCxmLmNoaWxkcmVufHxbXSk7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxkKTticmVha31lbHNlIGIoYSxkKTtkPWQuc2libGluZ31kPVxuV2coZixhLm1vZGUsaCk7ZC5yZXR1cm49YTthPWR9cmV0dXJuIGcoYSl9aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBmfHxcIm51bWJlclwiPT09dHlwZW9mIGYpcmV0dXJuIGY9XCJcIitmLG51bGwhPT1kJiY2PT09ZC50YWc/KGMoYSxkLnNpYmxpbmcpLGQ9ZShkLGYpLGQucmV0dXJuPWEsYT1kKTooYyhhLGQpLGQ9VWcoZixhLm1vZGUsaCksZC5yZXR1cm49YSxhPWQpLGcoYSk7aWYoUGcoZikpcmV0dXJuIHgoYSxkLGYsaCk7aWYoTGEoZikpcmV0dXJuIHcoYSxkLGYsaCk7bCYmUmcoYSxmKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGYmJiFrKXN3aXRjaChhLnRhZyl7Y2FzZSAxOmNhc2UgMjI6Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTp0aHJvdyBFcnJvcih5KDE1MixSYShhLnR5cGUpfHxcIkNvbXBvbmVudFwiKSk7fXJldHVybiBjKGEsZCl9fXZhciBZZz1TZyghMCksWmc9U2coITEpLCRnPXt9LGFoPUJmKCRnKSxiaD1CZigkZyksY2g9QmYoJGcpO1xuZnVuY3Rpb24gZGgoYSl7aWYoYT09PSRnKXRocm93IEVycm9yKHkoMTc0KSk7cmV0dXJuIGF9ZnVuY3Rpb24gZWgoYSxiKXtJKGNoLGIpO0koYmgsYSk7SShhaCwkZyk7YT1iLm5vZGVUeXBlO3N3aXRjaChhKXtjYXNlIDk6Y2FzZSAxMTpiPShiPWIuZG9jdW1lbnRFbGVtZW50KT9iLm5hbWVzcGFjZVVSSTptYihudWxsLFwiXCIpO2JyZWFrO2RlZmF1bHQ6YT04PT09YT9iLnBhcmVudE5vZGU6YixiPWEubmFtZXNwYWNlVVJJfHxudWxsLGE9YS50YWdOYW1lLGI9bWIoYixhKX1IKGFoKTtJKGFoLGIpfWZ1bmN0aW9uIGZoKCl7SChhaCk7SChiaCk7SChjaCl9ZnVuY3Rpb24gZ2goYSl7ZGgoY2guY3VycmVudCk7dmFyIGI9ZGgoYWguY3VycmVudCk7dmFyIGM9bWIoYixhLnR5cGUpO2IhPT1jJiYoSShiaCxhKSxJKGFoLGMpKX1mdW5jdGlvbiBoaChhKXtiaC5jdXJyZW50PT09YSYmKEgoYWgpLEgoYmgpKX12YXIgUD1CZigwKTtcbmZ1bmN0aW9uIGloKGEpe2Zvcih2YXIgYj1hO251bGwhPT1iOyl7aWYoMTM9PT1iLnRhZyl7dmFyIGM9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1jJiYoYz1jLmRlaHlkcmF0ZWQsbnVsbD09PWN8fFwiJD9cIj09PWMuZGF0YXx8XCIkIVwiPT09Yy5kYXRhKSlyZXR1cm4gYn1lbHNlIGlmKDE5PT09Yi50YWcmJnZvaWQgMCE9PWIubWVtb2l6ZWRQcm9wcy5yZXZlYWxPcmRlcil7aWYoMCE9PShiLmZsYWdzJjY0KSlyZXR1cm4gYn1lbHNlIGlmKG51bGwhPT1iLmNoaWxkKXtiLmNoaWxkLnJldHVybj1iO2I9Yi5jaGlsZDtjb250aW51ZX1pZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09Yi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9cmV0dXJuIG51bGx9dmFyIGpoPW51bGwsa2g9bnVsbCxsaD0hMTtcbmZ1bmN0aW9uIG1oKGEsYil7dmFyIGM9bmgoNSxudWxsLG51bGwsMCk7Yy5lbGVtZW50VHlwZT1cIkRFTEVURURcIjtjLnR5cGU9XCJERUxFVEVEXCI7Yy5zdGF0ZU5vZGU9YjtjLnJldHVybj1hO2MuZmxhZ3M9ODtudWxsIT09YS5sYXN0RWZmZWN0PyhhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGEubGFzdEVmZmVjdD1jKTphLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1jfWZ1bmN0aW9uIG9oKGEsYil7c3dpdGNoKGEudGFnKXtjYXNlIDU6dmFyIGM9YS50eXBlO2I9MSE9PWIubm9kZVR5cGV8fGMudG9Mb3dlckNhc2UoKSE9PWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKT9udWxsOmI7cmV0dXJuIG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDY6cmV0dXJuIGI9XCJcIj09PWEucGVuZGluZ1Byb3BzfHwzIT09Yi5ub2RlVHlwZT9udWxsOmIsbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgMTM6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBwaChhKXtpZihsaCl7dmFyIGI9a2g7aWYoYil7dmFyIGM9YjtpZighb2goYSxiKSl7Yj1yZihjLm5leHRTaWJsaW5nKTtpZighYnx8IW9oKGEsYikpe2EuZmxhZ3M9YS5mbGFncyYtMTAyNXwyO2xoPSExO2poPWE7cmV0dXJufW1oKGpoLGMpfWpoPWE7a2g9cmYoYi5maXJzdENoaWxkKX1lbHNlIGEuZmxhZ3M9YS5mbGFncyYtMTAyNXwyLGxoPSExLGpoPWF9fWZ1bmN0aW9uIHFoKGEpe2ZvcihhPWEucmV0dXJuO251bGwhPT1hJiY1IT09YS50YWcmJjMhPT1hLnRhZyYmMTMhPT1hLnRhZzspYT1hLnJldHVybjtqaD1hfVxuZnVuY3Rpb24gcmgoYSl7aWYoYSE9PWpoKXJldHVybiExO2lmKCFsaClyZXR1cm4gcWgoYSksbGg9ITAsITE7dmFyIGI9YS50eXBlO2lmKDUhPT1hLnRhZ3x8XCJoZWFkXCIhPT1iJiZcImJvZHlcIiE9PWImJiFuZihiLGEubWVtb2l6ZWRQcm9wcykpZm9yKGI9a2g7YjspbWgoYSxiKSxiPXJmKGIubmV4dFNpYmxpbmcpO3FoKGEpO2lmKDEzPT09YS50YWcpe2E9YS5tZW1vaXplZFN0YXRlO2E9bnVsbCE9PWE/YS5kZWh5ZHJhdGVkOm51bGw7aWYoIWEpdGhyb3cgRXJyb3IoeSgzMTcpKTthOnthPWEubmV4dFNpYmxpbmc7Zm9yKGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihcIi8kXCI9PT1jKXtpZigwPT09Yil7a2g9cmYoYS5uZXh0U2libGluZyk7YnJlYWsgYX1iLS19ZWxzZVwiJFwiIT09YyYmXCIkIVwiIT09YyYmXCIkP1wiIT09Y3x8YisrfWE9YS5uZXh0U2libGluZ31raD1udWxsfX1lbHNlIGtoPWpoP3JmKGEuc3RhdGVOb2RlLm5leHRTaWJsaW5nKTpudWxsO3JldHVybiEwfVxuZnVuY3Rpb24gc2goKXtraD1qaD1udWxsO2xoPSExfXZhciB0aD1bXTtmdW5jdGlvbiB1aCgpe2Zvcih2YXIgYT0wO2E8dGgubGVuZ3RoO2ErKyl0aFthXS5fd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeT1udWxsO3RoLmxlbmd0aD0wfXZhciB2aD1yYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLHdoPXJhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnLHhoPTAsUj1udWxsLFM9bnVsbCxUPW51bGwseWg9ITEsemg9ITE7ZnVuY3Rpb24gQWgoKXt0aHJvdyBFcnJvcih5KDMyMSkpO31mdW5jdGlvbiBCaChhLGIpe2lmKG51bGw9PT1iKXJldHVybiExO2Zvcih2YXIgYz0wO2M8Yi5sZW5ndGgmJmM8YS5sZW5ndGg7YysrKWlmKCFIZShhW2NdLGJbY10pKXJldHVybiExO3JldHVybiEwfVxuZnVuY3Rpb24gQ2goYSxiLGMsZCxlLGYpe3hoPWY7Uj1iO2IubWVtb2l6ZWRTdGF0ZT1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtiLmxhbmVzPTA7dmguY3VycmVudD1udWxsPT09YXx8bnVsbD09PWEubWVtb2l6ZWRTdGF0ZT9EaDpFaDthPWMoZCxlKTtpZih6aCl7Zj0wO2Rve3poPSExO2lmKCEoMjU+ZikpdGhyb3cgRXJyb3IoeSgzMDEpKTtmKz0xO1Q9Uz1udWxsO2IudXBkYXRlUXVldWU9bnVsbDt2aC5jdXJyZW50PUZoO2E9YyhkLGUpfXdoaWxlKHpoKX12aC5jdXJyZW50PUdoO2I9bnVsbCE9PVMmJm51bGwhPT1TLm5leHQ7eGg9MDtUPVM9Uj1udWxsO3loPSExO2lmKGIpdGhyb3cgRXJyb3IoeSgzMDApKTtyZXR1cm4gYX1mdW5jdGlvbiBIaCgpe3ZhciBhPXttZW1vaXplZFN0YXRlOm51bGwsYmFzZVN0YXRlOm51bGwsYmFzZVF1ZXVlOm51bGwscXVldWU6bnVsbCxuZXh0Om51bGx9O251bGw9PT1UP1IubWVtb2l6ZWRTdGF0ZT1UPWE6VD1ULm5leHQ9YTtyZXR1cm4gVH1cbmZ1bmN0aW9uIEloKCl7aWYobnVsbD09PVMpe3ZhciBhPVIuYWx0ZXJuYXRlO2E9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGx9ZWxzZSBhPVMubmV4dDt2YXIgYj1udWxsPT09VD9SLm1lbW9pemVkU3RhdGU6VC5uZXh0O2lmKG51bGwhPT1iKVQ9YixTPWE7ZWxzZXtpZihudWxsPT09YSl0aHJvdyBFcnJvcih5KDMxMCkpO1M9YTthPXttZW1vaXplZFN0YXRlOlMubWVtb2l6ZWRTdGF0ZSxiYXNlU3RhdGU6Uy5iYXNlU3RhdGUsYmFzZVF1ZXVlOlMuYmFzZVF1ZXVlLHF1ZXVlOlMucXVldWUsbmV4dDpudWxsfTtudWxsPT09VD9SLm1lbW9pemVkU3RhdGU9VD1hOlQ9VC5uZXh0PWF9cmV0dXJuIFR9ZnVuY3Rpb24gSmgoYSxiKXtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYj9iKGEpOmJ9XG5mdW5jdGlvbiBLaChhKXt2YXIgYj1JaCgpLGM9Yi5xdWV1ZTtpZihudWxsPT09Yyl0aHJvdyBFcnJvcih5KDMxMSkpO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO3ZhciBkPVMsZT1kLmJhc2VRdWV1ZSxmPWMucGVuZGluZztpZihudWxsIT09Zil7aWYobnVsbCE9PWUpe3ZhciBnPWUubmV4dDtlLm5leHQ9Zi5uZXh0O2YubmV4dD1nfWQuYmFzZVF1ZXVlPWU9ZjtjLnBlbmRpbmc9bnVsbH1pZihudWxsIT09ZSl7ZT1lLm5leHQ7ZD1kLmJhc2VTdGF0ZTt2YXIgaD1nPWY9bnVsbCxrPWU7ZG97dmFyIGw9ay5sYW5lO2lmKCh4aCZsKT09PWwpbnVsbCE9PWgmJihoPWgubmV4dD17bGFuZTowLGFjdGlvbjprLmFjdGlvbixlYWdlclJlZHVjZXI6ay5lYWdlclJlZHVjZXIsZWFnZXJTdGF0ZTprLmVhZ2VyU3RhdGUsbmV4dDpudWxsfSksZD1rLmVhZ2VyUmVkdWNlcj09PWE/ay5lYWdlclN0YXRlOmEoZCxrLmFjdGlvbik7ZWxzZXt2YXIgbj17bGFuZTpsLGFjdGlvbjprLmFjdGlvbixlYWdlclJlZHVjZXI6ay5lYWdlclJlZHVjZXIsXG5lYWdlclN0YXRlOmsuZWFnZXJTdGF0ZSxuZXh0Om51bGx9O251bGw9PT1oPyhnPWg9bixmPWQpOmg9aC5uZXh0PW47Ui5sYW5lc3w9bDtEZ3w9bH1rPWsubmV4dH13aGlsZShudWxsIT09ayYmayE9PWUpO251bGw9PT1oP2Y9ZDpoLm5leHQ9ZztIZShkLGIubWVtb2l6ZWRTdGF0ZSl8fCh1Zz0hMCk7Yi5tZW1vaXplZFN0YXRlPWQ7Yi5iYXNlU3RhdGU9ZjtiLmJhc2VRdWV1ZT1oO2MubGFzdFJlbmRlcmVkU3RhdGU9ZH1yZXR1cm5bYi5tZW1vaXplZFN0YXRlLGMuZGlzcGF0Y2hdfVxuZnVuY3Rpb24gTGgoYSl7dmFyIGI9SWgoKSxjPWIucXVldWU7aWYobnVsbD09PWMpdGhyb3cgRXJyb3IoeSgzMTEpKTtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTt2YXIgZD1jLmRpc3BhdGNoLGU9Yy5wZW5kaW5nLGY9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1lKXtjLnBlbmRpbmc9bnVsbDt2YXIgZz1lPWUubmV4dDtkbyBmPWEoZixnLmFjdGlvbiksZz1nLm5leHQ7d2hpbGUoZyE9PWUpO0hlKGYsYi5tZW1vaXplZFN0YXRlKXx8KHVnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZjtudWxsPT09Yi5iYXNlUXVldWUmJihiLmJhc2VTdGF0ZT1mKTtjLmxhc3RSZW5kZXJlZFN0YXRlPWZ9cmV0dXJuW2YsZF19XG5mdW5jdGlvbiBNaChhLGIsYyl7dmFyIGQ9Yi5fZ2V0VmVyc2lvbjtkPWQoYi5fc291cmNlKTt2YXIgZT1iLl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5O2lmKG51bGwhPT1lKWE9ZT09PWQ7ZWxzZSBpZihhPWEubXV0YWJsZVJlYWRMYW5lcyxhPSh4aCZhKT09PWEpYi5fd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeT1kLHRoLnB1c2goYik7aWYoYSlyZXR1cm4gYyhiLl9zb3VyY2UpO3RoLnB1c2goYik7dGhyb3cgRXJyb3IoeSgzNTApKTt9XG5mdW5jdGlvbiBOaChhLGIsYyxkKXt2YXIgZT1VO2lmKG51bGw9PT1lKXRocm93IEVycm9yKHkoMzQ5KSk7dmFyIGY9Yi5fZ2V0VmVyc2lvbixnPWYoYi5fc291cmNlKSxoPXZoLmN1cnJlbnQsaz1oLnVzZVN0YXRlKGZ1bmN0aW9uKCl7cmV0dXJuIE1oKGUsYixjKX0pLGw9a1sxXSxuPWtbMF07az1UO3ZhciBBPWEubWVtb2l6ZWRTdGF0ZSxwPUEucmVmcyxDPXAuZ2V0U25hcHNob3QseD1BLnNvdXJjZTtBPUEuc3Vic2NyaWJlO3ZhciB3PVI7YS5tZW1vaXplZFN0YXRlPXtyZWZzOnAsc291cmNlOmIsc3Vic2NyaWJlOmR9O2gudXNlRWZmZWN0KGZ1bmN0aW9uKCl7cC5nZXRTbmFwc2hvdD1jO3Auc2V0U25hcHNob3Q9bDt2YXIgYT1mKGIuX3NvdXJjZSk7aWYoIUhlKGcsYSkpe2E9YyhiLl9zb3VyY2UpO0hlKG4sYSl8fChsKGEpLGE9SWcodyksZS5tdXRhYmxlUmVhZExhbmVzfD1hJmUucGVuZGluZ0xhbmVzKTthPWUubXV0YWJsZVJlYWRMYW5lcztlLmVudGFuZ2xlZExhbmVzfD1hO2Zvcih2YXIgZD1cbmUuZW50YW5nbGVtZW50cyxoPWE7MDxoOyl7dmFyIGs9MzEtVmMoaCksdj0xPDxrO2Rba118PWE7aCY9fnZ9fX0sW2MsYixkXSk7aC51c2VFZmZlY3QoZnVuY3Rpb24oKXtyZXR1cm4gZChiLl9zb3VyY2UsZnVuY3Rpb24oKXt2YXIgYT1wLmdldFNuYXBzaG90LGM9cC5zZXRTbmFwc2hvdDt0cnl7YyhhKGIuX3NvdXJjZSkpO3ZhciBkPUlnKHcpO2UubXV0YWJsZVJlYWRMYW5lc3w9ZCZlLnBlbmRpbmdMYW5lc31jYXRjaChxKXtjKGZ1bmN0aW9uKCl7dGhyb3cgcTt9KX19KX0sW2IsZF0pO0hlKEMsYykmJkhlKHgsYikmJkhlKEEsZCl8fChhPXtwZW5kaW5nOm51bGwsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOkpoLGxhc3RSZW5kZXJlZFN0YXRlOm59LGEuZGlzcGF0Y2g9bD1PaC5iaW5kKG51bGwsUixhKSxrLnF1ZXVlPWEsay5iYXNlUXVldWU9bnVsbCxuPU1oKGUsYixjKSxrLm1lbW9pemVkU3RhdGU9ay5iYXNlU3RhdGU9bik7cmV0dXJuIG59XG5mdW5jdGlvbiBQaChhLGIsYyl7dmFyIGQ9SWgoKTtyZXR1cm4gTmgoZCxhLGIsYyl9ZnVuY3Rpb24gUWgoYSl7dmFyIGI9SGgoKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSYmKGE9YSgpKTtiLm1lbW9pemVkU3RhdGU9Yi5iYXNlU3RhdGU9YTthPWIucXVldWU9e3BlbmRpbmc6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6SmgsbGFzdFJlbmRlcmVkU3RhdGU6YX07YT1hLmRpc3BhdGNoPU9oLmJpbmQobnVsbCxSLGEpO3JldHVybltiLm1lbW9pemVkU3RhdGUsYV19XG5mdW5jdGlvbiBSaChhLGIsYyxkKXthPXt0YWc6YSxjcmVhdGU6YixkZXN0cm95OmMsZGVwczpkLG5leHQ6bnVsbH07Yj1SLnVwZGF0ZVF1ZXVlO251bGw9PT1iPyhiPXtsYXN0RWZmZWN0Om51bGx9LFIudXBkYXRlUXVldWU9YixiLmxhc3RFZmZlY3Q9YS5uZXh0PWEpOihjPWIubGFzdEVmZmVjdCxudWxsPT09Yz9iLmxhc3RFZmZlY3Q9YS5uZXh0PWE6KGQ9Yy5uZXh0LGMubmV4dD1hLGEubmV4dD1kLGIubGFzdEVmZmVjdD1hKSk7cmV0dXJuIGF9ZnVuY3Rpb24gU2goYSl7dmFyIGI9SGgoKTthPXtjdXJyZW50OmF9O3JldHVybiBiLm1lbW9pemVkU3RhdGU9YX1mdW5jdGlvbiBUaCgpe3JldHVybiBJaCgpLm1lbW9pemVkU3RhdGV9ZnVuY3Rpb24gVWgoYSxiLGMsZCl7dmFyIGU9SGgoKTtSLmZsYWdzfD1hO2UubWVtb2l6ZWRTdGF0ZT1SaCgxfGIsYyx2b2lkIDAsdm9pZCAwPT09ZD9udWxsOmQpfVxuZnVuY3Rpb24gVmgoYSxiLGMsZCl7dmFyIGU9SWgoKTtkPXZvaWQgMD09PWQ/bnVsbDpkO3ZhciBmPXZvaWQgMDtpZihudWxsIT09Uyl7dmFyIGc9Uy5tZW1vaXplZFN0YXRlO2Y9Zy5kZXN0cm95O2lmKG51bGwhPT1kJiZCaChkLGcuZGVwcykpe1JoKGIsYyxmLGQpO3JldHVybn19Ui5mbGFnc3w9YTtlLm1lbW9pemVkU3RhdGU9UmgoMXxiLGMsZixkKX1mdW5jdGlvbiBXaChhLGIpe3JldHVybiBVaCg1MTYsNCxhLGIpfWZ1bmN0aW9uIFhoKGEsYil7cmV0dXJuIFZoKDUxNiw0LGEsYil9ZnVuY3Rpb24gWWgoYSxiKXtyZXR1cm4gVmgoNCwyLGEsYil9ZnVuY3Rpb24gWmgoYSxiKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYilyZXR1cm4gYT1hKCksYihhKSxmdW5jdGlvbigpe2IobnVsbCl9O2lmKG51bGwhPT1iJiZ2b2lkIDAhPT1iKXJldHVybiBhPWEoKSxiLmN1cnJlbnQ9YSxmdW5jdGlvbigpe2IuY3VycmVudD1udWxsfX1cbmZ1bmN0aW9uICRoKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gVmgoNCwyLFpoLmJpbmQobnVsbCxiLGEpLGMpfWZ1bmN0aW9uIGFpKCl7fWZ1bmN0aW9uIGJpKGEsYil7dmFyIGM9SWgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJkJoKGIsZFsxXSkpcmV0dXJuIGRbMF07Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfWZ1bmN0aW9uIGNpKGEsYil7dmFyIGM9SWgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJkJoKGIsZFsxXSkpcmV0dXJuIGRbMF07YT1hKCk7Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfVxuZnVuY3Rpb24gZGkoYSxiKXt2YXIgYz1lZygpO2dnKDk4PmM/OTg6YyxmdW5jdGlvbigpe2EoITApfSk7Z2coOTc8Yz85NzpjLGZ1bmN0aW9uKCl7dmFyIGM9d2gudHJhbnNpdGlvbjt3aC50cmFuc2l0aW9uPTE7dHJ5e2EoITEpLGIoKX1maW5hbGx5e3doLnRyYW5zaXRpb249Y319KX1cbmZ1bmN0aW9uIE9oKGEsYixjKXt2YXIgZD1IZygpLGU9SWcoYSksZj17bGFuZTplLGFjdGlvbjpjLGVhZ2VyUmVkdWNlcjpudWxsLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9LGc9Yi5wZW5kaW5nO251bGw9PT1nP2YubmV4dD1mOihmLm5leHQ9Zy5uZXh0LGcubmV4dD1mKTtiLnBlbmRpbmc9ZjtnPWEuYWx0ZXJuYXRlO2lmKGE9PT1SfHxudWxsIT09ZyYmZz09PVIpemg9eWg9ITA7ZWxzZXtpZigwPT09YS5sYW5lcyYmKG51bGw9PT1nfHwwPT09Zy5sYW5lcykmJihnPWIubGFzdFJlbmRlcmVkUmVkdWNlcixudWxsIT09ZykpdHJ5e3ZhciBoPWIubGFzdFJlbmRlcmVkU3RhdGUsaz1nKGgsYyk7Zi5lYWdlclJlZHVjZXI9ZztmLmVhZ2VyU3RhdGU9aztpZihIZShrLGgpKXJldHVybn1jYXRjaChsKXt9ZmluYWxseXt9SmcoYSxlLGQpfX1cbnZhciBHaD17cmVhZENvbnRleHQ6dmcsdXNlQ2FsbGJhY2s6QWgsdXNlQ29udGV4dDpBaCx1c2VFZmZlY3Q6QWgsdXNlSW1wZXJhdGl2ZUhhbmRsZTpBaCx1c2VMYXlvdXRFZmZlY3Q6QWgsdXNlTWVtbzpBaCx1c2VSZWR1Y2VyOkFoLHVzZVJlZjpBaCx1c2VTdGF0ZTpBaCx1c2VEZWJ1Z1ZhbHVlOkFoLHVzZURlZmVycmVkVmFsdWU6QWgsdXNlVHJhbnNpdGlvbjpBaCx1c2VNdXRhYmxlU291cmNlOkFoLHVzZU9wYXF1ZUlkZW50aWZpZXI6QWgsdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxEaD17cmVhZENvbnRleHQ6dmcsdXNlQ2FsbGJhY2s6ZnVuY3Rpb24oYSxiKXtIaCgpLm1lbW9pemVkU3RhdGU9W2Esdm9pZCAwPT09Yj9udWxsOmJdO3JldHVybiBhfSx1c2VDb250ZXh0OnZnLHVzZUVmZmVjdDpXaCx1c2VJbXBlcmF0aXZlSGFuZGxlOmZ1bmN0aW9uKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gVWgoNCwyLFpoLmJpbmQobnVsbCxcbmIsYSksYyl9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBVaCg0LDIsYSxiKX0sdXNlTWVtbzpmdW5jdGlvbihhLGIpe3ZhciBjPUhoKCk7Yj12b2lkIDA9PT1iP251bGw6YjthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZVJlZHVjZXI6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPUhoKCk7Yj12b2lkIDAhPT1jP2MoYik6YjtkLm1lbW9pemVkU3RhdGU9ZC5iYXNlU3RhdGU9YjthPWQucXVldWU9e3BlbmRpbmc6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6YSxsYXN0UmVuZGVyZWRTdGF0ZTpifTthPWEuZGlzcGF0Y2g9T2guYmluZChudWxsLFIsYSk7cmV0dXJuW2QubWVtb2l6ZWRTdGF0ZSxhXX0sdXNlUmVmOlNoLHVzZVN0YXRlOlFoLHVzZURlYnVnVmFsdWU6YWksdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhKXt2YXIgYj1RaChhKSxjPWJbMF0sZD1iWzFdO1doKGZ1bmN0aW9uKCl7dmFyIGI9d2gudHJhbnNpdGlvbjtcbndoLnRyYW5zaXRpb249MTt0cnl7ZChhKX1maW5hbGx5e3doLnRyYW5zaXRpb249Yn19LFthXSk7cmV0dXJuIGN9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oKXt2YXIgYT1RaCghMSksYj1hWzBdO2E9ZGkuYmluZChudWxsLGFbMV0pO1NoKGEpO3JldHVyblthLGJdfSx1c2VNdXRhYmxlU291cmNlOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD1IaCgpO2QubWVtb2l6ZWRTdGF0ZT17cmVmczp7Z2V0U25hcHNob3Q6YixzZXRTbmFwc2hvdDpudWxsfSxzb3VyY2U6YSxzdWJzY3JpYmU6Y307cmV0dXJuIE5oKGQsYSxiLGMpfSx1c2VPcGFxdWVJZGVudGlmaWVyOmZ1bmN0aW9uKCl7aWYobGgpe3ZhciBhPSExLGI9dWYoZnVuY3Rpb24oKXthfHwoYT0hMCxjKFwicjpcIisodGYrKykudG9TdHJpbmcoMzYpKSk7dGhyb3cgRXJyb3IoeSgzNTUpKTt9KSxjPVFoKGIpWzFdOzA9PT0oUi5tb2RlJjIpJiYoUi5mbGFnc3w9NTE2LFJoKDUsZnVuY3Rpb24oKXtjKFwicjpcIisodGYrKykudG9TdHJpbmcoMzYpKX0sXG52b2lkIDAsbnVsbCkpO3JldHVybiBifWI9XCJyOlwiKyh0ZisrKS50b1N0cmluZygzNik7UWgoYik7cmV0dXJuIGJ9LHVuc3RhYmxlX2lzTmV3UmVjb25jaWxlcjohMX0sRWg9e3JlYWRDb250ZXh0OnZnLHVzZUNhbGxiYWNrOmJpLHVzZUNvbnRleHQ6dmcsdXNlRWZmZWN0OlhoLHVzZUltcGVyYXRpdmVIYW5kbGU6JGgsdXNlTGF5b3V0RWZmZWN0OlloLHVzZU1lbW86Y2ksdXNlUmVkdWNlcjpLaCx1c2VSZWY6VGgsdXNlU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gS2goSmgpfSx1c2VEZWJ1Z1ZhbHVlOmFpLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSl7dmFyIGI9S2goSmgpLGM9YlswXSxkPWJbMV07WGgoZnVuY3Rpb24oKXt2YXIgYj13aC50cmFuc2l0aW9uO3doLnRyYW5zaXRpb249MTt0cnl7ZChhKX1maW5hbGx5e3doLnRyYW5zaXRpb249Yn19LFthXSk7cmV0dXJuIGN9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oKXt2YXIgYT1LaChKaClbMF07cmV0dXJuW1RoKCkuY3VycmVudCxcbmFdfSx1c2VNdXRhYmxlU291cmNlOlBoLHVzZU9wYXF1ZUlkZW50aWZpZXI6ZnVuY3Rpb24oKXtyZXR1cm4gS2goSmgpWzBdfSx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9LEZoPXtyZWFkQ29udGV4dDp2Zyx1c2VDYWxsYmFjazpiaSx1c2VDb250ZXh0OnZnLHVzZUVmZmVjdDpYaCx1c2VJbXBlcmF0aXZlSGFuZGxlOiRoLHVzZUxheW91dEVmZmVjdDpZaCx1c2VNZW1vOmNpLHVzZVJlZHVjZXI6TGgsdXNlUmVmOlRoLHVzZVN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIExoKEpoKX0sdXNlRGVidWdWYWx1ZTphaSx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEpe3ZhciBiPUxoKEpoKSxjPWJbMF0sZD1iWzFdO1hoKGZ1bmN0aW9uKCl7dmFyIGI9d2gudHJhbnNpdGlvbjt3aC50cmFuc2l0aW9uPTE7dHJ5e2QoYSl9ZmluYWxseXt3aC50cmFuc2l0aW9uPWJ9fSxbYV0pO3JldHVybiBjfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9TGgoSmgpWzBdO3JldHVybltUaCgpLmN1cnJlbnQsXG5hXX0sdXNlTXV0YWJsZVNvdXJjZTpQaCx1c2VPcGFxdWVJZGVudGlmaWVyOmZ1bmN0aW9uKCl7cmV0dXJuIExoKEpoKVswXX0sdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxlaT1yYS5SZWFjdEN1cnJlbnRPd25lcix1Zz0hMTtmdW5jdGlvbiBmaShhLGIsYyxkKXtiLmNoaWxkPW51bGw9PT1hP1pnKGIsbnVsbCxjLGQpOllnKGIsYS5jaGlsZCxjLGQpfWZ1bmN0aW9uIGdpKGEsYixjLGQsZSl7Yz1jLnJlbmRlcjt2YXIgZj1iLnJlZjt0ZyhiLGUpO2Q9Q2goYSxiLGMsZCxmLGUpO2lmKG51bGwhPT1hJiYhdWcpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmZsYWdzJj0tNTE3LGEubGFuZXMmPX5lLGhpKGEsYixlKTtiLmZsYWdzfD0xO2ZpKGEsYixkLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gaWkoYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hKXt2YXIgZz1jLnR5cGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJiFqaShnKSYmdm9pZCAwPT09Zy5kZWZhdWx0UHJvcHMmJm51bGw9PT1jLmNvbXBhcmUmJnZvaWQgMD09PWMuZGVmYXVsdFByb3BzKXJldHVybiBiLnRhZz0xNSxiLnR5cGU9ZyxraShhLGIsZyxkLGUsZik7YT1WZyhjLnR5cGUsbnVsbCxkLGIsYi5tb2RlLGYpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1nPWEuY2hpbGQ7aWYoMD09PShlJmYpJiYoZT1nLm1lbW9pemVkUHJvcHMsYz1jLmNvbXBhcmUsYz1udWxsIT09Yz9jOkplLGMoZSxkKSYmYS5yZWY9PT1iLnJlZikpcmV0dXJuIGhpKGEsYixmKTtiLmZsYWdzfD0xO2E9VGcoZyxkKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9XG5mdW5jdGlvbiBraShhLGIsYyxkLGUsZil7aWYobnVsbCE9PWEmJkplKGEubWVtb2l6ZWRQcm9wcyxkKSYmYS5yZWY9PT1iLnJlZilpZih1Zz0hMSwwIT09KGYmZSkpMCE9PShhLmZsYWdzJjE2Mzg0KSYmKHVnPSEwKTtlbHNlIHJldHVybiBiLmxhbmVzPWEubGFuZXMsaGkoYSxiLGYpO3JldHVybiBsaShhLGIsYyxkLGYpfVxuZnVuY3Rpb24gbWkoYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9ZC5jaGlsZHJlbixmPW51bGwhPT1hP2EubWVtb2l6ZWRTdGF0ZTpudWxsO2lmKFwiaGlkZGVuXCI9PT1kLm1vZGV8fFwidW5zdGFibGUtZGVmZXItd2l0aG91dC1oaWRpbmdcIj09PWQubW9kZSlpZigwPT09KGIubW9kZSY0KSliLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczowfSxuaShiLGMpO2Vsc2UgaWYoMCE9PShjJjEwNzM3NDE4MjQpKWIubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOjB9LG5pKGIsbnVsbCE9PWY/Zi5iYXNlTGFuZXM6Yyk7ZWxzZSByZXR1cm4gYT1udWxsIT09Zj9mLmJhc2VMYW5lc3xjOmMsYi5sYW5lcz1iLmNoaWxkTGFuZXM9MTA3Mzc0MTgyNCxiLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczphfSxuaShiLGEpLG51bGw7ZWxzZSBudWxsIT09Zj8oZD1mLmJhc2VMYW5lc3xjLGIubWVtb2l6ZWRTdGF0ZT1udWxsKTpkPWMsbmkoYixkKTtmaShhLGIsZSxjKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIG9pKGEsYil7dmFyIGM9Yi5yZWY7aWYobnVsbD09PWEmJm51bGwhPT1jfHxudWxsIT09YSYmYS5yZWYhPT1jKWIuZmxhZ3N8PTEyOH1mdW5jdGlvbiBsaShhLGIsYyxkLGUpe3ZhciBmPUZmKGMpP0RmOk0uY3VycmVudDtmPUVmKGIsZik7dGcoYixlKTtjPUNoKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXVnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5mbGFncyY9LTUxNyxhLmxhbmVzJj1+ZSxoaShhLGIsZSk7Yi5mbGFnc3w9MTtmaShhLGIsYyxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIHBpKGEsYixjLGQsZSl7aWYoRmYoYykpe3ZhciBmPSEwO0pmKGIpfWVsc2UgZj0hMTt0ZyhiLGUpO2lmKG51bGw9PT1iLnN0YXRlTm9kZSludWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmZsYWdzfD0yKSxNZyhiLGMsZCksT2coYixjLGQsZSksZD0hMDtlbHNlIGlmKG51bGw9PT1hKXt2YXIgZz1iLnN0YXRlTm9kZSxoPWIubWVtb2l6ZWRQcm9wcztnLnByb3BzPWg7dmFyIGs9Zy5jb250ZXh0LGw9Yy5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGwmJm51bGwhPT1sP2w9dmcobCk6KGw9RmYoYyk/RGY6TS5jdXJyZW50LGw9RWYoYixsKSk7dmFyIG49Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMsQT1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygbnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGU7QXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlxuXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1kfHxrIT09bCkmJk5nKGIsZyxkLGwpO3dnPSExO3ZhciBwPWIubWVtb2l6ZWRTdGF0ZTtnLnN0YXRlPXA7Q2coYixkLGcsZSk7az1iLm1lbW9pemVkU3RhdGU7aCE9PWR8fHAhPT1rfHxOLmN1cnJlbnR8fHdnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbiYmKEdnKGIsYyxuLGQpLGs9Yi5tZW1vaXplZFN0YXRlKSwoaD13Z3x8TGcoYixjLGgsZCxwLGssbCkpPyhBfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnR8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnQmJmcuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLFwiZnVuY3Rpb25cIj09PVxudHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmZsYWdzfD00KSk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5mbGFnc3w9NCksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPWspLGcucHJvcHM9ZCxnLnN0YXRlPWssZy5jb250ZXh0PWwsZD1oKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmZsYWdzfD00KSxkPSExKX1lbHNle2c9Yi5zdGF0ZU5vZGU7eWcoYSxiKTtoPWIubWVtb2l6ZWRQcm9wcztsPWIudHlwZT09PWIuZWxlbWVudFR5cGU/aDpsZyhiLnR5cGUsaCk7Zy5wcm9wcz1sO0E9Yi5wZW5kaW5nUHJvcHM7cD1nLmNvbnRleHQ7az1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgayYmbnVsbCE9PWs/az12ZyhrKTooaz1GZihjKT9EZjpNLmN1cnJlbnQsaz1FZihiLGspKTt2YXIgQz1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczsobj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgQ3x8XG5cImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PUF8fHAhPT1rKSYmTmcoYixnLGQsayk7d2c9ITE7cD1iLm1lbW9pemVkU3RhdGU7Zy5zdGF0ZT1wO0NnKGIsZCxnLGUpO3ZhciB4PWIubWVtb2l6ZWRTdGF0ZTtoIT09QXx8cCE9PXh8fE4uY3VycmVudHx8d2c/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBDJiYoR2coYixjLEMsZCkseD1iLm1lbW9pemVkU3RhdGUpLChsPXdnfHxMZyhiLGMsbCxkLHAseCxrKSk/KG58fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlfHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5jb21wb25lbnRXaWxsVXBkYXRlKGQsXG54LGspLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlKGQseCxrKSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlJiYoYi5mbGFnc3w9NCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUmJihiLmZsYWdzfD0yNTYpKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZwPT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnA9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD0yNTYpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT14KSxnLnByb3BzPWQsZy5zdGF0ZT14LGcuY29udGV4dD1rLGQ9bCk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8XG5oPT09YS5tZW1vaXplZFByb3BzJiZwPT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnA9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD0yNTYpLGQ9ITEpfXJldHVybiBxaShhLGIsYyxkLGYsZSl9XG5mdW5jdGlvbiBxaShhLGIsYyxkLGUsZil7b2koYSxiKTt2YXIgZz0wIT09KGIuZmxhZ3MmNjQpO2lmKCFkJiYhZylyZXR1cm4gZSYmS2YoYixjLCExKSxoaShhLGIsZik7ZD1iLnN0YXRlTm9kZTtlaS5jdXJyZW50PWI7dmFyIGg9ZyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yP251bGw6ZC5yZW5kZXIoKTtiLmZsYWdzfD0xO251bGwhPT1hJiZnPyhiLmNoaWxkPVlnKGIsYS5jaGlsZCxudWxsLGYpLGIuY2hpbGQ9WWcoYixudWxsLGgsZikpOmZpKGEsYixoLGYpO2IubWVtb2l6ZWRTdGF0ZT1kLnN0YXRlO2UmJktmKGIsYywhMCk7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gcmkoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yi5wZW5kaW5nQ29udGV4dD9IZihhLGIucGVuZGluZ0NvbnRleHQsYi5wZW5kaW5nQ29udGV4dCE9PWIuY29udGV4dCk6Yi5jb250ZXh0JiZIZihhLGIuY29udGV4dCwhMSk7ZWgoYSxiLmNvbnRhaW5lckluZm8pfVxudmFyIHNpPXtkZWh5ZHJhdGVkOm51bGwscmV0cnlMYW5lOjB9O1xuZnVuY3Rpb24gdGkoYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9UC5jdXJyZW50LGY9ITEsZzsoZz0wIT09KGIuZmxhZ3MmNjQpKXx8KGc9bnVsbCE9PWEmJm51bGw9PT1hLm1lbW9pemVkU3RhdGU/ITE6MCE9PShlJjIpKTtnPyhmPSEwLGIuZmxhZ3MmPS02NSk6bnVsbCE9PWEmJm51bGw9PT1hLm1lbW9pemVkU3RhdGV8fHZvaWQgMD09PWQuZmFsbGJhY2t8fCEwPT09ZC51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFja3x8KGV8PTEpO0koUCxlJjEpO2lmKG51bGw9PT1hKXt2b2lkIDAhPT1kLmZhbGxiYWNrJiZwaChiKTthPWQuY2hpbGRyZW47ZT1kLmZhbGxiYWNrO2lmKGYpcmV0dXJuIGE9dWkoYixhLGUsYyksYi5jaGlsZC5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6Y30sYi5tZW1vaXplZFN0YXRlPXNpLGE7aWYoXCJudW1iZXJcIj09PXR5cGVvZiBkLnVuc3RhYmxlX2V4cGVjdGVkTG9hZFRpbWUpcmV0dXJuIGE9dWkoYixhLGUsYyksYi5jaGlsZC5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6Y30sXG5iLm1lbW9pemVkU3RhdGU9c2ksYi5sYW5lcz0zMzU1NDQzMixhO2M9dmkoe21vZGU6XCJ2aXNpYmxlXCIsY2hpbGRyZW46YX0sYi5tb2RlLGMsbnVsbCk7Yy5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1jfWlmKG51bGwhPT1hLm1lbW9pemVkU3RhdGUpe2lmKGYpcmV0dXJuIGQ9d2koYSxiLGQuY2hpbGRyZW4sZC5mYWxsYmFjayxjKSxmPWIuY2hpbGQsZT1hLmNoaWxkLm1lbW9pemVkU3RhdGUsZi5tZW1vaXplZFN0YXRlPW51bGw9PT1lP3tiYXNlTGFuZXM6Y306e2Jhc2VMYW5lczplLmJhc2VMYW5lc3xjfSxmLmNoaWxkTGFuZXM9YS5jaGlsZExhbmVzJn5jLGIubWVtb2l6ZWRTdGF0ZT1zaSxkO2M9eGkoYSxiLGQuY2hpbGRyZW4sYyk7Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGN9aWYoZilyZXR1cm4gZD13aShhLGIsZC5jaGlsZHJlbixkLmZhbGxiYWNrLGMpLGY9Yi5jaGlsZCxlPWEuY2hpbGQubWVtb2l6ZWRTdGF0ZSxmLm1lbW9pemVkU3RhdGU9bnVsbD09PWU/e2Jhc2VMYW5lczpjfTpcbntiYXNlTGFuZXM6ZS5iYXNlTGFuZXN8Y30sZi5jaGlsZExhbmVzPWEuY2hpbGRMYW5lcyZ+YyxiLm1lbW9pemVkU3RhdGU9c2ksZDtjPXhpKGEsYixkLmNoaWxkcmVuLGMpO2IubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBjfWZ1bmN0aW9uIHVpKGEsYixjLGQpe3ZhciBlPWEubW9kZSxmPWEuY2hpbGQ7Yj17bW9kZTpcImhpZGRlblwiLGNoaWxkcmVuOmJ9OzA9PT0oZSYyKSYmbnVsbCE9PWY/KGYuY2hpbGRMYW5lcz0wLGYucGVuZGluZ1Byb3BzPWIpOmY9dmkoYixlLDAsbnVsbCk7Yz1YZyhjLGUsZCxudWxsKTtmLnJldHVybj1hO2MucmV0dXJuPWE7Zi5zaWJsaW5nPWM7YS5jaGlsZD1mO3JldHVybiBjfVxuZnVuY3Rpb24geGkoYSxiLGMsZCl7dmFyIGU9YS5jaGlsZDthPWUuc2libGluZztjPVRnKGUse21vZGU6XCJ2aXNpYmxlXCIsY2hpbGRyZW46Y30pOzA9PT0oYi5tb2RlJjIpJiYoYy5sYW5lcz1kKTtjLnJldHVybj1iO2Muc2libGluZz1udWxsO251bGwhPT1hJiYoYS5uZXh0RWZmZWN0PW51bGwsYS5mbGFncz04LGIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWEpO3JldHVybiBiLmNoaWxkPWN9XG5mdW5jdGlvbiB3aShhLGIsYyxkLGUpe3ZhciBmPWIubW9kZSxnPWEuY2hpbGQ7YT1nLnNpYmxpbmc7dmFyIGg9e21vZGU6XCJoaWRkZW5cIixjaGlsZHJlbjpjfTswPT09KGYmMikmJmIuY2hpbGQhPT1nPyhjPWIuY2hpbGQsYy5jaGlsZExhbmVzPTAsYy5wZW5kaW5nUHJvcHM9aCxnPWMubGFzdEVmZmVjdCxudWxsIT09Zz8oYi5maXJzdEVmZmVjdD1jLmZpcnN0RWZmZWN0LGIubGFzdEVmZmVjdD1nLGcubmV4dEVmZmVjdD1udWxsKTpiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1udWxsKTpjPVRnKGcsaCk7bnVsbCE9PWE/ZD1UZyhhLGQpOihkPVhnKGQsZixlLG51bGwpLGQuZmxhZ3N8PTIpO2QucmV0dXJuPWI7Yy5yZXR1cm49YjtjLnNpYmxpbmc9ZDtiLmNoaWxkPWM7cmV0dXJuIGR9ZnVuY3Rpb24geWkoYSxiKXthLmxhbmVzfD1iO3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiYoYy5sYW5lc3w9Yik7c2coYS5yZXR1cm4sYil9XG5mdW5jdGlvbiB6aShhLGIsYyxkLGUsZil7dmFyIGc9YS5tZW1vaXplZFN0YXRlO251bGw9PT1nP2EubWVtb2l6ZWRTdGF0ZT17aXNCYWNrd2FyZHM6YixyZW5kZXJpbmc6bnVsbCxyZW5kZXJpbmdTdGFydFRpbWU6MCxsYXN0OmQsdGFpbDpjLHRhaWxNb2RlOmUsbGFzdEVmZmVjdDpmfTooZy5pc0JhY2t3YXJkcz1iLGcucmVuZGVyaW5nPW51bGwsZy5yZW5kZXJpbmdTdGFydFRpbWU9MCxnLmxhc3Q9ZCxnLnRhaWw9YyxnLnRhaWxNb2RlPWUsZy5sYXN0RWZmZWN0PWYpfVxuZnVuY3Rpb24gQWkoYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9ZC5yZXZlYWxPcmRlcixmPWQudGFpbDtmaShhLGIsZC5jaGlsZHJlbixjKTtkPVAuY3VycmVudDtpZigwIT09KGQmMikpZD1kJjF8MixiLmZsYWdzfD02NDtlbHNle2lmKG51bGwhPT1hJiYwIT09KGEuZmxhZ3MmNjQpKWE6Zm9yKGE9Yi5jaGlsZDtudWxsIT09YTspe2lmKDEzPT09YS50YWcpbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSYmeWkoYSxjKTtlbHNlIGlmKDE5PT09YS50YWcpeWkoYSxjKTtlbHNlIGlmKG51bGwhPT1hLmNoaWxkKXthLmNoaWxkLnJldHVybj1hO2E9YS5jaGlsZDtjb250aW51ZX1pZihhPT09YilicmVhayBhO2Zvcig7bnVsbD09PWEuc2libGluZzspe2lmKG51bGw9PT1hLnJldHVybnx8YS5yZXR1cm49PT1iKWJyZWFrIGE7YT1hLnJldHVybn1hLnNpYmxpbmcucmV0dXJuPWEucmV0dXJuO2E9YS5zaWJsaW5nfWQmPTF9SShQLGQpO2lmKDA9PT0oYi5tb2RlJjIpKWIubWVtb2l6ZWRTdGF0ZT1cbm51bGw7ZWxzZSBzd2l0Y2goZSl7Y2FzZSBcImZvcndhcmRzXCI6Yz1iLmNoaWxkO2ZvcihlPW51bGw7bnVsbCE9PWM7KWE9Yy5hbHRlcm5hdGUsbnVsbCE9PWEmJm51bGw9PT1paChhKSYmKGU9YyksYz1jLnNpYmxpbmc7Yz1lO251bGw9PT1jPyhlPWIuY2hpbGQsYi5jaGlsZD1udWxsKTooZT1jLnNpYmxpbmcsYy5zaWJsaW5nPW51bGwpO3ppKGIsITEsZSxjLGYsYi5sYXN0RWZmZWN0KTticmVhaztjYXNlIFwiYmFja3dhcmRzXCI6Yz1udWxsO2U9Yi5jaGlsZDtmb3IoYi5jaGlsZD1udWxsO251bGwhPT1lOyl7YT1lLmFsdGVybmF0ZTtpZihudWxsIT09YSYmbnVsbD09PWloKGEpKXtiLmNoaWxkPWU7YnJlYWt9YT1lLnNpYmxpbmc7ZS5zaWJsaW5nPWM7Yz1lO2U9YX16aShiLCEwLGMsbnVsbCxmLGIubGFzdEVmZmVjdCk7YnJlYWs7Y2FzZSBcInRvZ2V0aGVyXCI6emkoYiwhMSxudWxsLG51bGwsdm9pZCAwLGIubGFzdEVmZmVjdCk7YnJlYWs7ZGVmYXVsdDpiLm1lbW9pemVkU3RhdGU9bnVsbH1yZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIGhpKGEsYixjKXtudWxsIT09YSYmKGIuZGVwZW5kZW5jaWVzPWEuZGVwZW5kZW5jaWVzKTtEZ3w9Yi5sYW5lcztpZigwIT09KGMmYi5jaGlsZExhbmVzKSl7aWYobnVsbCE9PWEmJmIuY2hpbGQhPT1hLmNoaWxkKXRocm93IEVycm9yKHkoMTUzKSk7aWYobnVsbCE9PWIuY2hpbGQpe2E9Yi5jaGlsZDtjPVRnKGEsYS5wZW5kaW5nUHJvcHMpO2IuY2hpbGQ9Yztmb3IoYy5yZXR1cm49YjtudWxsIT09YS5zaWJsaW5nOylhPWEuc2libGluZyxjPWMuc2libGluZz1UZyhhLGEucGVuZGluZ1Byb3BzKSxjLnJldHVybj1iO2Muc2libGluZz1udWxsfXJldHVybiBiLmNoaWxkfXJldHVybiBudWxsfXZhciBCaSxDaSxEaSxFaTtcbkJpPWZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPWIuY2hpbGQ7bnVsbCE9PWM7KXtpZig1PT09Yy50YWd8fDY9PT1jLnRhZylhLmFwcGVuZENoaWxkKGMuc3RhdGVOb2RlKTtlbHNlIGlmKDQhPT1jLnRhZyYmbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1iKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8Yy5yZXR1cm49PT1iKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fTtDaT1mdW5jdGlvbigpe307XG5EaT1mdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1hLm1lbW9pemVkUHJvcHM7aWYoZSE9PWQpe2E9Yi5zdGF0ZU5vZGU7ZGgoYWguY3VycmVudCk7dmFyIGY9bnVsbDtzd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6ZT1ZYShhLGUpO2Q9WWEoYSxkKTtmPVtdO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjplPWViKGEsZSk7ZD1lYihhLGQpO2Y9W107YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmU9bSh7fSxlLHt2YWx1ZTp2b2lkIDB9KTtkPW0oe30sZCx7dmFsdWU6dm9pZCAwfSk7Zj1bXTticmVhaztjYXNlIFwidGV4dGFyZWFcIjplPWdiKGEsZSk7ZD1nYihhLGQpO2Y9W107YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5vbkNsaWNrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoYS5vbmNsaWNrPWpmKX12YihjLGQpO3ZhciBnO2M9bnVsbDtmb3IobCBpbiBlKWlmKCFkLmhhc093blByb3BlcnR5KGwpJiZlLmhhc093blByb3BlcnR5KGwpJiZudWxsIT1lW2xdKWlmKFwic3R5bGVcIj09PVxubCl7dmFyIGg9ZVtsXTtmb3IoZyBpbiBoKWguaGFzT3duUHJvcGVydHkoZykmJihjfHwoYz17fSksY1tnXT1cIlwiKX1lbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiIT09bCYmXCJjaGlsZHJlblwiIT09bCYmXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWwmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1sJiZcImF1dG9Gb2N1c1wiIT09bCYmKGNhLmhhc093blByb3BlcnR5KGwpP2Z8fChmPVtdKTooZj1mfHxbXSkucHVzaChsLG51bGwpKTtmb3IobCBpbiBkKXt2YXIgaz1kW2xdO2g9bnVsbCE9ZT9lW2xdOnZvaWQgMDtpZihkLmhhc093blByb3BlcnR5KGwpJiZrIT09aCYmKG51bGwhPWt8fG51bGwhPWgpKWlmKFwic3R5bGVcIj09PWwpaWYoaCl7Zm9yKGcgaW4gaCkhaC5oYXNPd25Qcm9wZXJ0eShnKXx8ayYmay5oYXNPd25Qcm9wZXJ0eShnKXx8KGN8fChjPXt9KSxjW2ddPVwiXCIpO2ZvcihnIGluIGspay5oYXNPd25Qcm9wZXJ0eShnKSYmaFtnXSE9PWtbZ10mJihjfHxcbihjPXt9KSxjW2ddPWtbZ10pfWVsc2UgY3x8KGZ8fChmPVtdKSxmLnB1c2gobCxjKSksYz1rO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1sPyhrPWs/ay5fX2h0bWw6dm9pZCAwLGg9aD9oLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmaCE9PWsmJihmPWZ8fFtdKS5wdXNoKGwsaykpOlwiY2hpbGRyZW5cIj09PWw/XCJzdHJpbmdcIiE9PXR5cGVvZiBrJiZcIm51bWJlclwiIT09dHlwZW9mIGt8fChmPWZ8fFtdKS5wdXNoKGwsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09bCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWwmJihjYS5oYXNPd25Qcm9wZXJ0eShsKT8obnVsbCE9ayYmXCJvblNjcm9sbFwiPT09bCYmRyhcInNjcm9sbFwiLGEpLGZ8fGg9PT1rfHwoZj1bXSkpOlwib2JqZWN0XCI9PT10eXBlb2YgayYmbnVsbCE9PWsmJmsuJCR0eXBlb2Y9PT1HYT9rLnRvU3RyaW5nKCk6KGY9Znx8W10pLnB1c2gobCxrKSl9YyYmKGY9Znx8W10pLnB1c2goXCJzdHlsZVwiLFxuYyk7dmFyIGw9ZjtpZihiLnVwZGF0ZVF1ZXVlPWwpYi5mbGFnc3w9NH19O0VpPWZ1bmN0aW9uKGEsYixjLGQpe2MhPT1kJiYoYi5mbGFnc3w9NCl9O2Z1bmN0aW9uIEZpKGEsYil7aWYoIWxoKXN3aXRjaChhLnRhaWxNb2RlKXtjYXNlIFwiaGlkZGVuXCI6Yj1hLnRhaWw7Zm9yKHZhciBjPW51bGw7bnVsbCE9PWI7KW51bGwhPT1iLmFsdGVybmF0ZSYmKGM9YiksYj1iLnNpYmxpbmc7bnVsbD09PWM/YS50YWlsPW51bGw6Yy5zaWJsaW5nPW51bGw7YnJlYWs7Y2FzZSBcImNvbGxhcHNlZFwiOmM9YS50YWlsO2Zvcih2YXIgZD1udWxsO251bGwhPT1jOyludWxsIT09Yy5hbHRlcm5hdGUmJihkPWMpLGM9Yy5zaWJsaW5nO251bGw9PT1kP2J8fG51bGw9PT1hLnRhaWw/YS50YWlsPW51bGw6YS50YWlsLnNpYmxpbmc9bnVsbDpkLnNpYmxpbmc9bnVsbH19XG5mdW5jdGlvbiBHaShhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHM7c3dpdGNoKGIudGFnKXtjYXNlIDI6Y2FzZSAxNjpjYXNlIDE1OmNhc2UgMDpjYXNlIDExOmNhc2UgNzpjYXNlIDg6Y2FzZSAxMjpjYXNlIDk6Y2FzZSAxNDpyZXR1cm4gbnVsbDtjYXNlIDE6cmV0dXJuIEZmKGIudHlwZSkmJkdmKCksbnVsbDtjYXNlIDM6ZmgoKTtIKE4pO0goTSk7dWgoKTtkPWIuc3RhdGVOb2RlO2QucGVuZGluZ0NvbnRleHQmJihkLmNvbnRleHQ9ZC5wZW5kaW5nQ29udGV4dCxkLnBlbmRpbmdDb250ZXh0PW51bGwpO2lmKG51bGw9PT1hfHxudWxsPT09YS5jaGlsZClyaChiKT9iLmZsYWdzfD00OmQuaHlkcmF0ZXx8KGIuZmxhZ3N8PTI1Nik7Q2koYik7cmV0dXJuIG51bGw7Y2FzZSA1OmhoKGIpO3ZhciBlPWRoKGNoLmN1cnJlbnQpO2M9Yi50eXBlO2lmKG51bGwhPT1hJiZudWxsIT1iLnN0YXRlTm9kZSlEaShhLGIsYyxkLGUpLGEucmVmIT09Yi5yZWYmJihiLmZsYWdzfD0xMjgpO2Vsc2V7aWYoIWQpe2lmKG51bGw9PT1cbmIuc3RhdGVOb2RlKXRocm93IEVycm9yKHkoMTY2KSk7cmV0dXJuIG51bGx9YT1kaChhaC5jdXJyZW50KTtpZihyaChiKSl7ZD1iLnN0YXRlTm9kZTtjPWIudHlwZTt2YXIgZj1iLm1lbW9pemVkUHJvcHM7ZFt3Zl09YjtkW3hmXT1mO3N3aXRjaChjKXtjYXNlIFwiZGlhbG9nXCI6RyhcImNhbmNlbFwiLGQpO0coXCJjbG9zZVwiLGQpO2JyZWFrO2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RyhcImxvYWRcIixkKTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoYT0wO2E8WGUubGVuZ3RoO2ErKylHKFhlW2FdLGQpO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpHKFwiZXJyb3JcIixkKTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpHKFwiZXJyb3JcIixkKTtHKFwibG9hZFwiLGQpO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RyhcInRvZ2dsZVwiLGQpO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOlphKGQsZik7RyhcImludmFsaWRcIixkKTticmVhaztjYXNlIFwic2VsZWN0XCI6ZC5fd3JhcHBlclN0YXRlPVxue3dhc011bHRpcGxlOiEhZi5tdWx0aXBsZX07RyhcImludmFsaWRcIixkKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpoYihkLGYpLEcoXCJpbnZhbGlkXCIsZCl9dmIoYyxmKTthPW51bGw7Zm9yKHZhciBnIGluIGYpZi5oYXNPd25Qcm9wZXJ0eShnKSYmKGU9ZltnXSxcImNoaWxkcmVuXCI9PT1nP1wic3RyaW5nXCI9PT10eXBlb2YgZT9kLnRleHRDb250ZW50IT09ZSYmKGE9W1wiY2hpbGRyZW5cIixlXSk6XCJudW1iZXJcIj09PXR5cGVvZiBlJiZkLnRleHRDb250ZW50IT09XCJcIitlJiYoYT1bXCJjaGlsZHJlblwiLFwiXCIrZV0pOmNhLmhhc093blByb3BlcnR5KGcpJiZudWxsIT1lJiZcIm9uU2Nyb2xsXCI9PT1nJiZHKFwic2Nyb2xsXCIsZCkpO3N3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpWYShkKTtjYihkLGYsITApO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlZhKGQpO2piKGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpjYXNlIFwib3B0aW9uXCI6YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5vbkNsaWNrJiYoZC5vbmNsaWNrPVxuamYpfWQ9YTtiLnVwZGF0ZVF1ZXVlPWQ7bnVsbCE9PWQmJihiLmZsYWdzfD00KX1lbHNle2c9OT09PWUubm9kZVR5cGU/ZTplLm93bmVyRG9jdW1lbnQ7YT09PWtiLmh0bWwmJihhPWxiKGMpKTthPT09a2IuaHRtbD9cInNjcmlwdFwiPT09Yz8oYT1nLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYS5pbm5lckhUTUw9XCI8c2NyaXB0PlxceDNjL3NjcmlwdD5cIixhPWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKSk6XCJzdHJpbmdcIj09PXR5cGVvZiBkLmlzP2E9Zy5jcmVhdGVFbGVtZW50KGMse2lzOmQuaXN9KTooYT1nLmNyZWF0ZUVsZW1lbnQoYyksXCJzZWxlY3RcIj09PWMmJihnPWEsZC5tdWx0aXBsZT9nLm11bHRpcGxlPSEwOmQuc2l6ZSYmKGcuc2l6ZT1kLnNpemUpKSk6YT1nLmNyZWF0ZUVsZW1lbnROUyhhLGMpO2Fbd2ZdPWI7YVt4Zl09ZDtCaShhLGIsITEsITEpO2Iuc3RhdGVOb2RlPWE7Zz13YihjLGQpO3N3aXRjaChjKXtjYXNlIFwiZGlhbG9nXCI6RyhcImNhbmNlbFwiLGEpO0coXCJjbG9zZVwiLGEpO1xuZT1kO2JyZWFrO2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RyhcImxvYWRcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGU9MDtlPFhlLmxlbmd0aDtlKyspRyhYZVtlXSxhKTtlPWQ7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkcoXCJlcnJvclwiLGEpO2U9ZDticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpHKFwiZXJyb3JcIixhKTtHKFwibG9hZFwiLGEpO2U9ZDticmVhaztjYXNlIFwiZGV0YWlsc1wiOkcoXCJ0b2dnbGVcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcImlucHV0XCI6WmEoYSxkKTtlPVlhKGEsZCk7RyhcImludmFsaWRcIixhKTticmVhaztjYXNlIFwib3B0aW9uXCI6ZT1lYihhLGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphLl93cmFwcGVyU3RhdGU9e3dhc011bHRpcGxlOiEhZC5tdWx0aXBsZX07ZT1tKHt9LGQse3ZhbHVlOnZvaWQgMH0pO0coXCJpbnZhbGlkXCIsYSk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aGIoYSxkKTtlPVxuZ2IoYSxkKTtHKFwiaW52YWxpZFwiLGEpO2JyZWFrO2RlZmF1bHQ6ZT1kfXZiKGMsZSk7dmFyIGg9ZTtmb3IoZiBpbiBoKWlmKGguaGFzT3duUHJvcGVydHkoZikpe3ZhciBrPWhbZl07XCJzdHlsZVwiPT09Zj90YihhLGspOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWY/KGs9az9rLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmb2IoYSxrKSk6XCJjaGlsZHJlblwiPT09Zj9cInN0cmluZ1wiPT09dHlwZW9mIGs/KFwidGV4dGFyZWFcIiE9PWN8fFwiXCIhPT1rKSYmcGIoYSxrKTpcIm51bWJlclwiPT09dHlwZW9mIGsmJnBiKGEsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09ZiYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWYmJlwiYXV0b0ZvY3VzXCIhPT1mJiYoY2EuaGFzT3duUHJvcGVydHkoZik/bnVsbCE9ayYmXCJvblNjcm9sbFwiPT09ZiYmRyhcInNjcm9sbFwiLGEpOm51bGwhPWsmJnFhKGEsZixrLGcpKX1zd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6VmEoYSk7Y2IoYSxkLCExKTtcbmJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlZhKGEpO2piKGEpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpudWxsIT1kLnZhbHVlJiZhLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsXCJcIitTYShkLnZhbHVlKSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEubXVsdGlwbGU9ISFkLm11bHRpcGxlO2Y9ZC52YWx1ZTtudWxsIT1mP2ZiKGEsISFkLm11bHRpcGxlLGYsITEpOm51bGwhPWQuZGVmYXVsdFZhbHVlJiZmYihhLCEhZC5tdWx0aXBsZSxkLmRlZmF1bHRWYWx1ZSwhMCk7YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5vbkNsaWNrJiYoYS5vbmNsaWNrPWpmKX1tZihjLGQpJiYoYi5mbGFnc3w9NCl9bnVsbCE9PWIucmVmJiYoYi5mbGFnc3w9MTI4KX1yZXR1cm4gbnVsbDtjYXNlIDY6aWYoYSYmbnVsbCE9Yi5zdGF0ZU5vZGUpRWkoYSxiLGEubWVtb2l6ZWRQcm9wcyxkKTtlbHNle2lmKFwic3RyaW5nXCIhPT10eXBlb2YgZCYmbnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHkoMTY2KSk7XG5jPWRoKGNoLmN1cnJlbnQpO2RoKGFoLmN1cnJlbnQpO3JoKGIpPyhkPWIuc3RhdGVOb2RlLGM9Yi5tZW1vaXplZFByb3BzLGRbd2ZdPWIsZC5ub2RlVmFsdWUhPT1jJiYoYi5mbGFnc3w9NCkpOihkPSg5PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUoZCksZFt3Zl09YixiLnN0YXRlTm9kZT1kKX1yZXR1cm4gbnVsbDtjYXNlIDEzOkgoUCk7ZD1iLm1lbW9pemVkU3RhdGU7aWYoMCE9PShiLmZsYWdzJjY0KSlyZXR1cm4gYi5sYW5lcz1jLGI7ZD1udWxsIT09ZDtjPSExO251bGw9PT1hP3ZvaWQgMCE9PWIubWVtb2l6ZWRQcm9wcy5mYWxsYmFjayYmcmgoYik6Yz1udWxsIT09YS5tZW1vaXplZFN0YXRlO2lmKGQmJiFjJiYwIT09KGIubW9kZSYyKSlpZihudWxsPT09YSYmITAhPT1iLm1lbW9pemVkUHJvcHMudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2t8fDAhPT0oUC5jdXJyZW50JjEpKTA9PT1WJiYoVj0zKTtlbHNle2lmKDA9PT1WfHwzPT09VilWPVxuNDtudWxsPT09VXx8MD09PShEZyYxMzQyMTc3MjcpJiYwPT09KEhpJjEzNDIxNzcyNyl8fElpKFUsVyl9aWYoZHx8YyliLmZsYWdzfD00O3JldHVybiBudWxsO2Nhc2UgNDpyZXR1cm4gZmgoKSxDaShiKSxudWxsPT09YSYmY2YoYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksbnVsbDtjYXNlIDEwOnJldHVybiByZyhiKSxudWxsO2Nhc2UgMTc6cmV0dXJuIEZmKGIudHlwZSkmJkdmKCksbnVsbDtjYXNlIDE5OkgoUCk7ZD1iLm1lbW9pemVkU3RhdGU7aWYobnVsbD09PWQpcmV0dXJuIG51bGw7Zj0wIT09KGIuZmxhZ3MmNjQpO2c9ZC5yZW5kZXJpbmc7aWYobnVsbD09PWcpaWYoZilGaShkLCExKTtlbHNle2lmKDAhPT1WfHxudWxsIT09YSYmMCE9PShhLmZsYWdzJjY0KSlmb3IoYT1iLmNoaWxkO251bGwhPT1hOyl7Zz1paChhKTtpZihudWxsIT09Zyl7Yi5mbGFnc3w9NjQ7RmkoZCwhMSk7Zj1nLnVwZGF0ZVF1ZXVlO251bGwhPT1mJiYoYi51cGRhdGVRdWV1ZT1mLGIuZmxhZ3N8PTQpO1xubnVsbD09PWQubGFzdEVmZmVjdCYmKGIuZmlyc3RFZmZlY3Q9bnVsbCk7Yi5sYXN0RWZmZWN0PWQubGFzdEVmZmVjdDtkPWM7Zm9yKGM9Yi5jaGlsZDtudWxsIT09YzspZj1jLGE9ZCxmLmZsYWdzJj0yLGYubmV4dEVmZmVjdD1udWxsLGYuZmlyc3RFZmZlY3Q9bnVsbCxmLmxhc3RFZmZlY3Q9bnVsbCxnPWYuYWx0ZXJuYXRlLG51bGw9PT1nPyhmLmNoaWxkTGFuZXM9MCxmLmxhbmVzPWEsZi5jaGlsZD1udWxsLGYubWVtb2l6ZWRQcm9wcz1udWxsLGYubWVtb2l6ZWRTdGF0ZT1udWxsLGYudXBkYXRlUXVldWU9bnVsbCxmLmRlcGVuZGVuY2llcz1udWxsLGYuc3RhdGVOb2RlPW51bGwpOihmLmNoaWxkTGFuZXM9Zy5jaGlsZExhbmVzLGYubGFuZXM9Zy5sYW5lcyxmLmNoaWxkPWcuY2hpbGQsZi5tZW1vaXplZFByb3BzPWcubWVtb2l6ZWRQcm9wcyxmLm1lbW9pemVkU3RhdGU9Zy5tZW1vaXplZFN0YXRlLGYudXBkYXRlUXVldWU9Zy51cGRhdGVRdWV1ZSxmLnR5cGU9Zy50eXBlLGE9Zy5kZXBlbmRlbmNpZXMsXG5mLmRlcGVuZGVuY2llcz1udWxsPT09YT9udWxsOntsYW5lczphLmxhbmVzLGZpcnN0Q29udGV4dDphLmZpcnN0Q29udGV4dH0pLGM9Yy5zaWJsaW5nO0koUCxQLmN1cnJlbnQmMXwyKTtyZXR1cm4gYi5jaGlsZH1hPWEuc2libGluZ31udWxsIT09ZC50YWlsJiZPKCk+SmkmJihiLmZsYWdzfD02NCxmPSEwLEZpKGQsITEpLGIubGFuZXM9MzM1NTQ0MzIpfWVsc2V7aWYoIWYpaWYoYT1paChnKSxudWxsIT09YSl7aWYoYi5mbGFnc3w9NjQsZj0hMCxjPWEudXBkYXRlUXVldWUsbnVsbCE9PWMmJihiLnVwZGF0ZVF1ZXVlPWMsYi5mbGFnc3w9NCksRmkoZCwhMCksbnVsbD09PWQudGFpbCYmXCJoaWRkZW5cIj09PWQudGFpbE1vZGUmJiFnLmFsdGVybmF0ZSYmIWxoKXJldHVybiBiPWIubGFzdEVmZmVjdD1kLmxhc3RFZmZlY3QsbnVsbCE9PWImJihiLm5leHRFZmZlY3Q9bnVsbCksbnVsbH1lbHNlIDIqTygpLWQucmVuZGVyaW5nU3RhcnRUaW1lPkppJiYxMDczNzQxODI0IT09YyYmKGIuZmxhZ3N8PVxuNjQsZj0hMCxGaShkLCExKSxiLmxhbmVzPTMzNTU0NDMyKTtkLmlzQmFja3dhcmRzPyhnLnNpYmxpbmc9Yi5jaGlsZCxiLmNoaWxkPWcpOihjPWQubGFzdCxudWxsIT09Yz9jLnNpYmxpbmc9ZzpiLmNoaWxkPWcsZC5sYXN0PWcpfXJldHVybiBudWxsIT09ZC50YWlsPyhjPWQudGFpbCxkLnJlbmRlcmluZz1jLGQudGFpbD1jLnNpYmxpbmcsZC5sYXN0RWZmZWN0PWIubGFzdEVmZmVjdCxkLnJlbmRlcmluZ1N0YXJ0VGltZT1PKCksYy5zaWJsaW5nPW51bGwsYj1QLmN1cnJlbnQsSShQLGY/YiYxfDI6YiYxKSxjKTpudWxsO2Nhc2UgMjM6Y2FzZSAyNDpyZXR1cm4gS2koKSxudWxsIT09YSYmbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSE9PShudWxsIT09Yi5tZW1vaXplZFN0YXRlKSYmXCJ1bnN0YWJsZS1kZWZlci13aXRob3V0LWhpZGluZ1wiIT09ZC5tb2RlJiYoYi5mbGFnc3w9NCksbnVsbH10aHJvdyBFcnJvcih5KDE1NixiLnRhZykpO31cbmZ1bmN0aW9uIExpKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSAxOkZmKGEudHlwZSkmJkdmKCk7dmFyIGI9YS5mbGFncztyZXR1cm4gYiY0MDk2PyhhLmZsYWdzPWImLTQwOTd8NjQsYSk6bnVsbDtjYXNlIDM6ZmgoKTtIKE4pO0goTSk7dWgoKTtiPWEuZmxhZ3M7aWYoMCE9PShiJjY0KSl0aHJvdyBFcnJvcih5KDI4NSkpO2EuZmxhZ3M9YiYtNDA5N3w2NDtyZXR1cm4gYTtjYXNlIDU6cmV0dXJuIGhoKGEpLG51bGw7Y2FzZSAxMzpyZXR1cm4gSChQKSxiPWEuZmxhZ3MsYiY0MDk2PyhhLmZsYWdzPWImLTQwOTd8NjQsYSk6bnVsbDtjYXNlIDE5OnJldHVybiBIKFApLG51bGw7Y2FzZSA0OnJldHVybiBmaCgpLG51bGw7Y2FzZSAxMDpyZXR1cm4gcmcoYSksbnVsbDtjYXNlIDIzOmNhc2UgMjQ6cmV0dXJuIEtpKCksbnVsbDtkZWZhdWx0OnJldHVybiBudWxsfX1cbmZ1bmN0aW9uIE1pKGEsYil7dHJ5e3ZhciBjPVwiXCIsZD1iO2RvIGMrPVFhKGQpLGQ9ZC5yZXR1cm47d2hpbGUoZCk7dmFyIGU9Y31jYXRjaChmKXtlPVwiXFxuRXJyb3IgZ2VuZXJhdGluZyBzdGFjazogXCIrZi5tZXNzYWdlK1wiXFxuXCIrZi5zdGFja31yZXR1cm57dmFsdWU6YSxzb3VyY2U6YixzdGFjazplfX1mdW5jdGlvbiBOaShhLGIpe3RyeXtjb25zb2xlLmVycm9yKGIudmFsdWUpfWNhdGNoKGMpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXt0aHJvdyBjO30pfX12YXIgT2k9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtNYXA/V2Vha01hcDpNYXA7ZnVuY3Rpb24gUGkoYSxiLGMpe2M9emcoLTEsYyk7Yy50YWc9MztjLnBheWxvYWQ9e2VsZW1lbnQ6bnVsbH07dmFyIGQ9Yi52YWx1ZTtjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7UWl8fChRaT0hMCxSaT1kKTtOaShhLGIpfTtyZXR1cm4gY31cbmZ1bmN0aW9uIFNpKGEsYixjKXtjPXpnKC0xLGMpO2MudGFnPTM7dmFyIGQ9YS50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcjtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7dmFyIGU9Yi52YWx1ZTtjLnBheWxvYWQ9ZnVuY3Rpb24oKXtOaShhLGIpO3JldHVybiBkKGUpfX12YXIgZj1hLnN0YXRlTm9kZTtudWxsIT09ZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuY29tcG9uZW50RGlkQ2F0Y2gmJihjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7XCJmdW5jdGlvblwiIT09dHlwZW9mIGQmJihudWxsPT09VGk/VGk9bmV3IFNldChbdGhpc10pOlRpLmFkZCh0aGlzKSxOaShhLGIpKTt2YXIgYz1iLnN0YWNrO3RoaXMuY29tcG9uZW50RGlkQ2F0Y2goYi52YWx1ZSx7Y29tcG9uZW50U3RhY2s6bnVsbCE9PWM/YzpcIlwifSl9KTtyZXR1cm4gY312YXIgVWk9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtTZXQ/V2Vha1NldDpTZXQ7XG5mdW5jdGlvbiBWaShhKXt2YXIgYj1hLnJlZjtpZihudWxsIT09YilpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYil0cnl7YihudWxsKX1jYXRjaChjKXtXaShhLGMpfWVsc2UgYi5jdXJyZW50PW51bGx9ZnVuY3Rpb24gWGkoYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6Y2FzZSAyMjpyZXR1cm47Y2FzZSAxOmlmKGIuZmxhZ3MmMjU2JiZudWxsIT09YSl7dmFyIGM9YS5tZW1vaXplZFByb3BzLGQ9YS5tZW1vaXplZFN0YXRlO2E9Yi5zdGF0ZU5vZGU7Yj1hLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKGIuZWxlbWVudFR5cGU9PT1iLnR5cGU/YzpsZyhiLnR5cGUsYyksZCk7YS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZT1ifXJldHVybjtjYXNlIDM6Yi5mbGFncyYyNTYmJnFmKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pO3JldHVybjtjYXNlIDU6Y2FzZSA2OmNhc2UgNDpjYXNlIDE3OnJldHVybn10aHJvdyBFcnJvcih5KDE2MykpO31cbmZ1bmN0aW9uIFlpKGEsYixjKXtzd2l0Y2goYy50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6Y2FzZSAyMjpiPWMudXBkYXRlUXVldWU7Yj1udWxsIT09Yj9iLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yil7YT1iPWIubmV4dDtkb3tpZigzPT09KGEudGFnJjMpKXt2YXIgZD1hLmNyZWF0ZTthLmRlc3Ryb3k9ZCgpfWE9YS5uZXh0fXdoaWxlKGEhPT1iKX1iPWMudXBkYXRlUXVldWU7Yj1udWxsIT09Yj9iLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yil7YT1iPWIubmV4dDtkb3t2YXIgZT1hO2Q9ZS5uZXh0O2U9ZS50YWc7MCE9PShlJjQpJiYwIT09KGUmMSkmJihaaShjLGEpLCRpKGMsYSkpO2E9ZH13aGlsZShhIT09Yil9cmV0dXJuO2Nhc2UgMTphPWMuc3RhdGVOb2RlO2MuZmxhZ3MmNCYmKG51bGw9PT1iP2EuY29tcG9uZW50RGlkTW91bnQoKTooZD1jLmVsZW1lbnRUeXBlPT09Yy50eXBlP2IubWVtb2l6ZWRQcm9wczpsZyhjLnR5cGUsYi5tZW1vaXplZFByb3BzKSxhLmNvbXBvbmVudERpZFVwZGF0ZShkLFxuYi5tZW1vaXplZFN0YXRlLGEuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUpKSk7Yj1jLnVwZGF0ZVF1ZXVlO251bGwhPT1iJiZFZyhjLGIsYSk7cmV0dXJuO2Nhc2UgMzpiPWMudXBkYXRlUXVldWU7aWYobnVsbCE9PWIpe2E9bnVsbDtpZihudWxsIT09Yy5jaGlsZClzd2l0Y2goYy5jaGlsZC50YWcpe2Nhc2UgNTphPWMuY2hpbGQuc3RhdGVOb2RlO2JyZWFrO2Nhc2UgMTphPWMuY2hpbGQuc3RhdGVOb2RlfUVnKGMsYixhKX1yZXR1cm47Y2FzZSA1OmE9Yy5zdGF0ZU5vZGU7bnVsbD09PWImJmMuZmxhZ3MmNCYmbWYoYy50eXBlLGMubWVtb2l6ZWRQcm9wcykmJmEuZm9jdXMoKTtyZXR1cm47Y2FzZSA2OnJldHVybjtjYXNlIDQ6cmV0dXJuO2Nhc2UgMTI6cmV0dXJuO2Nhc2UgMTM6bnVsbD09PWMubWVtb2l6ZWRTdGF0ZSYmKGM9Yy5hbHRlcm5hdGUsbnVsbCE9PWMmJihjPWMubWVtb2l6ZWRTdGF0ZSxudWxsIT09YyYmKGM9Yy5kZWh5ZHJhdGVkLG51bGwhPT1jJiZDYyhjKSkpKTtcbnJldHVybjtjYXNlIDE5OmNhc2UgMTc6Y2FzZSAyMDpjYXNlIDIxOmNhc2UgMjM6Y2FzZSAyNDpyZXR1cm59dGhyb3cgRXJyb3IoeSgxNjMpKTt9XG5mdW5jdGlvbiBhaihhLGIpe2Zvcih2YXIgYz1hOzspe2lmKDU9PT1jLnRhZyl7dmFyIGQ9Yy5zdGF0ZU5vZGU7aWYoYilkPWQuc3R5bGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuc2V0UHJvcGVydHk/ZC5zZXRQcm9wZXJ0eShcImRpc3BsYXlcIixcIm5vbmVcIixcImltcG9ydGFudFwiKTpkLmRpc3BsYXk9XCJub25lXCI7ZWxzZXtkPWMuc3RhdGVOb2RlO3ZhciBlPWMubWVtb2l6ZWRQcm9wcy5zdHlsZTtlPXZvaWQgMCE9PWUmJm51bGwhPT1lJiZlLmhhc093blByb3BlcnR5KFwiZGlzcGxheVwiKT9lLmRpc3BsYXk6bnVsbDtkLnN0eWxlLmRpc3BsYXk9c2IoXCJkaXNwbGF5XCIsZSl9fWVsc2UgaWYoNj09PWMudGFnKWMuc3RhdGVOb2RlLm5vZGVWYWx1ZT1iP1wiXCI6Yy5tZW1vaXplZFByb3BzO2Vsc2UgaWYoKDIzIT09Yy50YWcmJjI0IT09Yy50YWd8fG51bGw9PT1jLm1lbW9pemVkU3RhdGV8fGM9PT1hKSYmbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1cbmEpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWEpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319XG5mdW5jdGlvbiBiaihhLGIpe2lmKE1mJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgTWYub25Db21taXRGaWJlclVubW91bnQpdHJ5e01mLm9uQ29tbWl0RmliZXJVbm1vdW50KExmLGIpfWNhdGNoKGYpe31zd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTpjYXNlIDIyOmE9Yi51cGRhdGVRdWV1ZTtpZihudWxsIT09YSYmKGE9YS5sYXN0RWZmZWN0LG51bGwhPT1hKSl7dmFyIGM9YT1hLm5leHQ7ZG97dmFyIGQ9YyxlPWQuZGVzdHJveTtkPWQudGFnO2lmKHZvaWQgMCE9PWUpaWYoMCE9PShkJjQpKVppKGIsYyk7ZWxzZXtkPWI7dHJ5e2UoKX1jYXRjaChmKXtXaShkLGYpfX1jPWMubmV4dH13aGlsZShjIT09YSl9YnJlYWs7Y2FzZSAxOlZpKGIpO2E9Yi5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEuY29tcG9uZW50V2lsbFVubW91bnQpdHJ5e2EucHJvcHM9Yi5tZW1vaXplZFByb3BzLGEuc3RhdGU9Yi5tZW1vaXplZFN0YXRlLGEuY29tcG9uZW50V2lsbFVubW91bnQoKX1jYXRjaChmKXtXaShiLFxuZil9YnJlYWs7Y2FzZSA1OlZpKGIpO2JyZWFrO2Nhc2UgNDpjaihhLGIpfX1mdW5jdGlvbiBkaihhKXthLmFsdGVybmF0ZT1udWxsO2EuY2hpbGQ9bnVsbDthLmRlcGVuZGVuY2llcz1udWxsO2EuZmlyc3RFZmZlY3Q9bnVsbDthLmxhc3RFZmZlY3Q9bnVsbDthLm1lbW9pemVkUHJvcHM9bnVsbDthLm1lbW9pemVkU3RhdGU9bnVsbDthLnBlbmRpbmdQcm9wcz1udWxsO2EucmV0dXJuPW51bGw7YS51cGRhdGVRdWV1ZT1udWxsfWZ1bmN0aW9uIGVqKGEpe3JldHVybiA1PT09YS50YWd8fDM9PT1hLnRhZ3x8ND09PWEudGFnfVxuZnVuY3Rpb24gZmooYSl7YTp7Zm9yKHZhciBiPWEucmV0dXJuO251bGwhPT1iOyl7aWYoZWooYikpYnJlYWsgYTtiPWIucmV0dXJufXRocm93IEVycm9yKHkoMTYwKSk7fXZhciBjPWI7Yj1jLnN0YXRlTm9kZTtzd2l0Y2goYy50YWcpe2Nhc2UgNTp2YXIgZD0hMTticmVhaztjYXNlIDM6Yj1iLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztjYXNlIDQ6Yj1iLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHkoMTYxKSk7fWMuZmxhZ3MmMTYmJihwYihiLFwiXCIpLGMuZmxhZ3MmPS0xNyk7YTpiOmZvcihjPWE7Oyl7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxlaihjLnJldHVybikpe2M9bnVsbDticmVhayBhfWM9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtmb3IoYz1jLnNpYmxpbmc7NSE9PWMudGFnJiY2IT09Yy50YWcmJjE4IT09Yy50YWc7KXtpZihjLmZsYWdzJjIpY29udGludWUgYjtpZihudWxsPT09XG5jLmNoaWxkfHw0PT09Yy50YWcpY29udGludWUgYjtlbHNlIGMuY2hpbGQucmV0dXJuPWMsYz1jLmNoaWxkfWlmKCEoYy5mbGFncyYyKSl7Yz1jLnN0YXRlTm9kZTticmVhayBhfX1kP2dqKGEsYyxiKTpoaihhLGMsYil9XG5mdW5jdGlvbiBnaihhLGIsYyl7dmFyIGQ9YS50YWcsZT01PT09ZHx8Nj09PWQ7aWYoZSlhPWU/YS5zdGF0ZU5vZGU6YS5zdGF0ZU5vZGUuaW5zdGFuY2UsYj84PT09Yy5ub2RlVHlwZT9jLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGEsYik6Yy5pbnNlcnRCZWZvcmUoYSxiKTooOD09PWMubm9kZVR5cGU/KGI9Yy5wYXJlbnROb2RlLGIuaW5zZXJ0QmVmb3JlKGEsYykpOihiPWMsYi5hcHBlbmRDaGlsZChhKSksYz1jLl9yZWFjdFJvb3RDb250YWluZXIsbnVsbCE9PWMmJnZvaWQgMCE9PWN8fG51bGwhPT1iLm9uY2xpY2t8fChiLm9uY2xpY2s9amYpKTtlbHNlIGlmKDQhPT1kJiYoYT1hLmNoaWxkLG51bGwhPT1hKSlmb3IoZ2ooYSxiLGMpLGE9YS5zaWJsaW5nO251bGwhPT1hOylnaihhLGIsYyksYT1hLnNpYmxpbmd9XG5mdW5jdGlvbiBoaihhLGIsYyl7dmFyIGQ9YS50YWcsZT01PT09ZHx8Nj09PWQ7aWYoZSlhPWU/YS5zdGF0ZU5vZGU6YS5zdGF0ZU5vZGUuaW5zdGFuY2UsYj9jLmluc2VydEJlZm9yZShhLGIpOmMuYXBwZW5kQ2hpbGQoYSk7ZWxzZSBpZig0IT09ZCYmKGE9YS5jaGlsZCxudWxsIT09YSkpZm9yKGhqKGEsYixjKSxhPWEuc2libGluZztudWxsIT09YTspaGooYSxiLGMpLGE9YS5zaWJsaW5nfVxuZnVuY3Rpb24gY2ooYSxiKXtmb3IodmFyIGM9YixkPSExLGUsZjs7KXtpZighZCl7ZD1jLnJldHVybjthOmZvcig7Oyl7aWYobnVsbD09PWQpdGhyb3cgRXJyb3IoeSgxNjApKTtlPWQuc3RhdGVOb2RlO3N3aXRjaChkLnRhZyl7Y2FzZSA1OmY9ITE7YnJlYWsgYTtjYXNlIDM6ZT1lLmNvbnRhaW5lckluZm87Zj0hMDticmVhayBhO2Nhc2UgNDplPWUuY29udGFpbmVySW5mbztmPSEwO2JyZWFrIGF9ZD1kLnJldHVybn1kPSEwfWlmKDU9PT1jLnRhZ3x8Nj09PWMudGFnKXthOmZvcih2YXIgZz1hLGg9YyxrPWg7OylpZihiaihnLGspLG51bGwhPT1rLmNoaWxkJiY0IT09ay50YWcpay5jaGlsZC5yZXR1cm49ayxrPWsuY2hpbGQ7ZWxzZXtpZihrPT09aClicmVhayBhO2Zvcig7bnVsbD09PWsuc2libGluZzspe2lmKG51bGw9PT1rLnJldHVybnx8ay5yZXR1cm49PT1oKWJyZWFrIGE7az1rLnJldHVybn1rLnNpYmxpbmcucmV0dXJuPWsucmV0dXJuO2s9ay5zaWJsaW5nfWY/KGc9ZSxoPWMuc3RhdGVOb2RlLFxuOD09PWcubm9kZVR5cGU/Zy5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGgpOmcucmVtb3ZlQ2hpbGQoaCkpOmUucmVtb3ZlQ2hpbGQoYy5zdGF0ZU5vZGUpfWVsc2UgaWYoND09PWMudGFnKXtpZihudWxsIT09Yy5jaGlsZCl7ZT1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Y9ITA7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9fWVsc2UgaWYoYmooYSxjKSxudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWIpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWIpcmV0dXJuO2M9Yy5yZXR1cm47ND09PWMudGFnJiYoZD0hMSl9Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319XG5mdW5jdGlvbiBpaihhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OmNhc2UgMjI6dmFyIGM9Yi51cGRhdGVRdWV1ZTtjPW51bGwhPT1jP2MubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1jKXt2YXIgZD1jPWMubmV4dDtkbyAzPT09KGQudGFnJjMpJiYoYT1kLmRlc3Ryb3ksZC5kZXN0cm95PXZvaWQgMCx2b2lkIDAhPT1hJiZhKCkpLGQ9ZC5uZXh0O3doaWxlKGQhPT1jKX1yZXR1cm47Y2FzZSAxOnJldHVybjtjYXNlIDU6Yz1iLnN0YXRlTm9kZTtpZihudWxsIT1jKXtkPWIubWVtb2l6ZWRQcm9wczt2YXIgZT1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6ZDthPWIudHlwZTt2YXIgZj1iLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9bnVsbDtpZihudWxsIT09Zil7Y1t4Zl09ZDtcImlucHV0XCI9PT1hJiZcInJhZGlvXCI9PT1kLnR5cGUmJm51bGwhPWQubmFtZSYmJGEoYyxkKTt3YihhLGUpO2I9d2IoYSxkKTtmb3IoZT0wO2U8Zi5sZW5ndGg7ZSs9XG4yKXt2YXIgZz1mW2VdLGg9ZltlKzFdO1wic3R5bGVcIj09PWc/dGIoYyxoKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1nP29iKGMsaCk6XCJjaGlsZHJlblwiPT09Zz9wYihjLGgpOnFhKGMsZyxoLGIpfXN3aXRjaChhKXtjYXNlIFwiaW5wdXRcIjphYihjLGQpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmliKGMsZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmE9Yy5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlLGMuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZT0hIWQubXVsdGlwbGUsZj1kLnZhbHVlLG51bGwhPWY/ZmIoYywhIWQubXVsdGlwbGUsZiwhMSk6YSE9PSEhZC5tdWx0aXBsZSYmKG51bGwhPWQuZGVmYXVsdFZhbHVlP2ZiKGMsISFkLm11bHRpcGxlLGQuZGVmYXVsdFZhbHVlLCEwKTpmYihjLCEhZC5tdWx0aXBsZSxkLm11bHRpcGxlP1tdOlwiXCIsITEpKX19fXJldHVybjtjYXNlIDY6aWYobnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHkoMTYyKSk7Yi5zdGF0ZU5vZGUubm9kZVZhbHVlPVxuYi5tZW1vaXplZFByb3BzO3JldHVybjtjYXNlIDM6Yz1iLnN0YXRlTm9kZTtjLmh5ZHJhdGUmJihjLmh5ZHJhdGU9ITEsQ2MoYy5jb250YWluZXJJbmZvKSk7cmV0dXJuO2Nhc2UgMTI6cmV0dXJuO2Nhc2UgMTM6bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSYmKGpqPU8oKSxhaihiLmNoaWxkLCEwKSk7a2ooYik7cmV0dXJuO2Nhc2UgMTk6a2ooYik7cmV0dXJuO2Nhc2UgMTc6cmV0dXJuO2Nhc2UgMjM6Y2FzZSAyNDphaihiLG51bGwhPT1iLm1lbW9pemVkU3RhdGUpO3JldHVybn10aHJvdyBFcnJvcih5KDE2MykpO31mdW5jdGlvbiBraihhKXt2YXIgYj1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iKXthLnVwZGF0ZVF1ZXVlPW51bGw7dmFyIGM9YS5zdGF0ZU5vZGU7bnVsbD09PWMmJihjPWEuc3RhdGVOb2RlPW5ldyBVaSk7Yi5mb3JFYWNoKGZ1bmN0aW9uKGIpe3ZhciBkPWxqLmJpbmQobnVsbCxhLGIpO2MuaGFzKGIpfHwoYy5hZGQoYiksYi50aGVuKGQsZCkpfSl9fVxuZnVuY3Rpb24gbWooYSxiKXtyZXR1cm4gbnVsbCE9PWEmJihhPWEubWVtb2l6ZWRTdGF0ZSxudWxsPT09YXx8bnVsbCE9PWEuZGVoeWRyYXRlZCk/KGI9Yi5tZW1vaXplZFN0YXRlLG51bGwhPT1iJiZudWxsPT09Yi5kZWh5ZHJhdGVkKTohMX12YXIgbmo9TWF0aC5jZWlsLG9qPXJhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIscGo9cmEuUmVhY3RDdXJyZW50T3duZXIsWD0wLFU9bnVsbCxZPW51bGwsVz0wLHFqPTAscmo9QmYoMCksVj0wLHNqPW51bGwsdGo9MCxEZz0wLEhpPTAsdWo9MCx2aj1udWxsLGpqPTAsSmk9SW5maW5pdHk7ZnVuY3Rpb24gd2ooKXtKaT1PKCkrNTAwfXZhciBaPW51bGwsUWk9ITEsUmk9bnVsbCxUaT1udWxsLHhqPSExLHlqPW51bGwsemo9OTAsQWo9W10sQmo9W10sQ2o9bnVsbCxEaj0wLEVqPW51bGwsRmo9LTEsR2o9MCxIaj0wLElqPW51bGwsSmo9ITE7ZnVuY3Rpb24gSGcoKXtyZXR1cm4gMCE9PShYJjQ4KT9PKCk6LTEhPT1Gaj9GajpGaj1PKCl9XG5mdW5jdGlvbiBJZyhhKXthPWEubW9kZTtpZigwPT09KGEmMikpcmV0dXJuIDE7aWYoMD09PShhJjQpKXJldHVybiA5OT09PWVnKCk/MToyOzA9PT1HaiYmKEdqPXRqKTtpZigwIT09a2cudHJhbnNpdGlvbil7MCE9PUhqJiYoSGo9bnVsbCE9PXZqP3ZqLnBlbmRpbmdMYW5lczowKTthPUdqO3ZhciBiPTQxODYxMTImfkhqO2ImPS1iOzA9PT1iJiYoYT00MTg2MTEyJn5hLGI9YSYtYSwwPT09YiYmKGI9ODE5MikpO3JldHVybiBifWE9ZWcoKTswIT09KFgmNCkmJjk4PT09YT9hPVhjKDEyLEdqKTooYT1TYyhhKSxhPVhjKGEsR2opKTtyZXR1cm4gYX1cbmZ1bmN0aW9uIEpnKGEsYixjKXtpZig1MDxEail0aHJvdyBEaj0wLEVqPW51bGwsRXJyb3IoeSgxODUpKTthPUtqKGEsYik7aWYobnVsbD09PWEpcmV0dXJuIG51bGw7JGMoYSxiLGMpO2E9PT1VJiYoSGl8PWIsND09PVYmJklpKGEsVykpO3ZhciBkPWVnKCk7MT09PWI/MCE9PShYJjgpJiYwPT09KFgmNDgpP0xqKGEpOihNaihhLGMpLDA9PT1YJiYod2ooKSxpZygpKSk6KDA9PT0oWCY0KXx8OTghPT1kJiY5OSE9PWR8fChudWxsPT09Q2o/Q2o9bmV3IFNldChbYV0pOkNqLmFkZChhKSksTWooYSxjKSk7dmo9YX1mdW5jdGlvbiBLaihhLGIpe2EubGFuZXN8PWI7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJihjLmxhbmVzfD1iKTtjPWE7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWE7KWEuY2hpbGRMYW5lc3w9YixjPWEuYWx0ZXJuYXRlLG51bGwhPT1jJiYoYy5jaGlsZExhbmVzfD1iKSxjPWEsYT1hLnJldHVybjtyZXR1cm4gMz09PWMudGFnP2Muc3RhdGVOb2RlOm51bGx9XG5mdW5jdGlvbiBNaihhLGIpe2Zvcih2YXIgYz1hLmNhbGxiYWNrTm9kZSxkPWEuc3VzcGVuZGVkTGFuZXMsZT1hLnBpbmdlZExhbmVzLGY9YS5leHBpcmF0aW9uVGltZXMsZz1hLnBlbmRpbmdMYW5lczswPGc7KXt2YXIgaD0zMS1WYyhnKSxrPTE8PGgsbD1mW2hdO2lmKC0xPT09bCl7aWYoMD09PShrJmQpfHwwIT09KGsmZSkpe2w9YjtSYyhrKTt2YXIgbj1GO2ZbaF09MTA8PW4/bCsyNTA6Njw9bj9sKzVFMzotMX19ZWxzZSBsPD1iJiYoYS5leHBpcmVkTGFuZXN8PWspO2cmPX5rfWQ9VWMoYSxhPT09VT9XOjApO2I9RjtpZigwPT09ZCludWxsIT09YyYmKGMhPT1aZiYmUGYoYyksYS5jYWxsYmFja05vZGU9bnVsbCxhLmNhbGxiYWNrUHJpb3JpdHk9MCk7ZWxzZXtpZihudWxsIT09Yyl7aWYoYS5jYWxsYmFja1ByaW9yaXR5PT09YilyZXR1cm47YyE9PVpmJiZQZihjKX0xNT09PWI/KGM9TGouYmluZChudWxsLGEpLG51bGw9PT1hZz8oYWc9W2NdLGJnPU9mKFVmLGpnKSk6YWcucHVzaChjKSxcbmM9WmYpOjE0PT09Yj9jPWhnKDk5LExqLmJpbmQobnVsbCxhKSk6KGM9VGMoYiksYz1oZyhjLE5qLmJpbmQobnVsbCxhKSkpO2EuY2FsbGJhY2tQcmlvcml0eT1iO2EuY2FsbGJhY2tOb2RlPWN9fVxuZnVuY3Rpb24gTmooYSl7Rmo9LTE7SGo9R2o9MDtpZigwIT09KFgmNDgpKXRocm93IEVycm9yKHkoMzI3KSk7dmFyIGI9YS5jYWxsYmFja05vZGU7aWYoT2ooKSYmYS5jYWxsYmFja05vZGUhPT1iKXJldHVybiBudWxsO3ZhciBjPVVjKGEsYT09PVU/VzowKTtpZigwPT09YylyZXR1cm4gbnVsbDt2YXIgZD1jO3ZhciBlPVg7WHw9MTY7dmFyIGY9UGooKTtpZihVIT09YXx8VyE9PWQpd2ooKSxRaihhLGQpO2RvIHRyeXtSaigpO2JyZWFrfWNhdGNoKGgpe1NqKGEsaCl9d2hpbGUoMSk7cWcoKTtvai5jdXJyZW50PWY7WD1lO251bGwhPT1ZP2Q9MDooVT1udWxsLFc9MCxkPVYpO2lmKDAhPT0odGomSGkpKVFqKGEsMCk7ZWxzZSBpZigwIT09ZCl7Mj09PWQmJihYfD02NCxhLmh5ZHJhdGUmJihhLmh5ZHJhdGU9ITEscWYoYS5jb250YWluZXJJbmZvKSksYz1XYyhhKSwwIT09YyYmKGQ9VGooYSxjKSkpO2lmKDE9PT1kKXRocm93IGI9c2osUWooYSwwKSxJaShhLGMpLE1qKGEsTygpKSxiO2EuZmluaXNoZWRXb3JrPVxuYS5jdXJyZW50LmFsdGVybmF0ZTthLmZpbmlzaGVkTGFuZXM9Yztzd2l0Y2goZCl7Y2FzZSAwOmNhc2UgMTp0aHJvdyBFcnJvcih5KDM0NSkpO2Nhc2UgMjpVaihhKTticmVhaztjYXNlIDM6SWkoYSxjKTtpZigoYyY2MjkxNDU2MCk9PT1jJiYoZD1qais1MDAtTygpLDEwPGQpKXtpZigwIT09VWMoYSwwKSlicmVhaztlPWEuc3VzcGVuZGVkTGFuZXM7aWYoKGUmYykhPT1jKXtIZygpO2EucGluZ2VkTGFuZXN8PWEuc3VzcGVuZGVkTGFuZXMmZTticmVha31hLnRpbWVvdXRIYW5kbGU9b2YoVWouYmluZChudWxsLGEpLGQpO2JyZWFrfVVqKGEpO2JyZWFrO2Nhc2UgNDpJaShhLGMpO2lmKChjJjQxODYxMTIpPT09YylicmVhaztkPWEuZXZlbnRUaW1lcztmb3IoZT0tMTswPGM7KXt2YXIgZz0zMS1WYyhjKTtmPTE8PGc7Zz1kW2ddO2c+ZSYmKGU9Zyk7YyY9fmZ9Yz1lO2M9TygpLWM7Yz0oMTIwPmM/MTIwOjQ4MD5jPzQ4MDoxMDgwPmM/MTA4MDoxOTIwPmM/MTkyMDozRTM+Yz8zRTM6NDMyMD5cbmM/NDMyMDoxOTYwKm5qKGMvMTk2MCkpLWM7aWYoMTA8Yyl7YS50aW1lb3V0SGFuZGxlPW9mKFVqLmJpbmQobnVsbCxhKSxjKTticmVha31VaihhKTticmVhaztjYXNlIDU6VWooYSk7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih5KDMyOSkpO319TWooYSxPKCkpO3JldHVybiBhLmNhbGxiYWNrTm9kZT09PWI/TmouYmluZChudWxsLGEpOm51bGx9ZnVuY3Rpb24gSWkoYSxiKXtiJj1+dWo7YiY9fkhpO2Euc3VzcGVuZGVkTGFuZXN8PWI7YS5waW5nZWRMYW5lcyY9fmI7Zm9yKGE9YS5leHBpcmF0aW9uVGltZXM7MDxiOyl7dmFyIGM9MzEtVmMoYiksZD0xPDxjO2FbY109LTE7YiY9fmR9fVxuZnVuY3Rpb24gTGooYSl7aWYoMCE9PShYJjQ4KSl0aHJvdyBFcnJvcih5KDMyNykpO09qKCk7aWYoYT09PVUmJjAhPT0oYS5leHBpcmVkTGFuZXMmVykpe3ZhciBiPVc7dmFyIGM9VGooYSxiKTswIT09KHRqJkhpKSYmKGI9VWMoYSxiKSxjPVRqKGEsYikpfWVsc2UgYj1VYyhhLDApLGM9VGooYSxiKTswIT09YS50YWcmJjI9PT1jJiYoWHw9NjQsYS5oeWRyYXRlJiYoYS5oeWRyYXRlPSExLHFmKGEuY29udGFpbmVySW5mbykpLGI9V2MoYSksMCE9PWImJihjPVRqKGEsYikpKTtpZigxPT09Yyl0aHJvdyBjPXNqLFFqKGEsMCksSWkoYSxiKSxNaihhLE8oKSksYzthLmZpbmlzaGVkV29yaz1hLmN1cnJlbnQuYWx0ZXJuYXRlO2EuZmluaXNoZWRMYW5lcz1iO1VqKGEpO01qKGEsTygpKTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIFZqKCl7aWYobnVsbCE9PUNqKXt2YXIgYT1DajtDaj1udWxsO2EuZm9yRWFjaChmdW5jdGlvbihhKXthLmV4cGlyZWRMYW5lc3w9MjQmYS5wZW5kaW5nTGFuZXM7TWooYSxPKCkpfSl9aWcoKX1mdW5jdGlvbiBXaihhLGIpe3ZhciBjPVg7WHw9MTt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtYPWMsMD09PVgmJih3aigpLGlnKCkpfX1mdW5jdGlvbiBYaihhLGIpe3ZhciBjPVg7WCY9LTI7WHw9ODt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtYPWMsMD09PVgmJih3aigpLGlnKCkpfX1mdW5jdGlvbiBuaShhLGIpe0kocmoscWopO3FqfD1iO3RqfD1ifWZ1bmN0aW9uIEtpKCl7cWo9cmouY3VycmVudDtIKHJqKX1cbmZ1bmN0aW9uIFFqKGEsYil7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkTGFuZXM9MDt2YXIgYz1hLnRpbWVvdXRIYW5kbGU7LTEhPT1jJiYoYS50aW1lb3V0SGFuZGxlPS0xLHBmKGMpKTtpZihudWxsIT09WSlmb3IoYz1ZLnJldHVybjtudWxsIT09Yzspe3ZhciBkPWM7c3dpdGNoKGQudGFnKXtjYXNlIDE6ZD1kLnR5cGUuY2hpbGRDb250ZXh0VHlwZXM7bnVsbCE9PWQmJnZvaWQgMCE9PWQmJkdmKCk7YnJlYWs7Y2FzZSAzOmZoKCk7SChOKTtIKE0pO3VoKCk7YnJlYWs7Y2FzZSA1OmhoKGQpO2JyZWFrO2Nhc2UgNDpmaCgpO2JyZWFrO2Nhc2UgMTM6SChQKTticmVhaztjYXNlIDE5OkgoUCk7YnJlYWs7Y2FzZSAxMDpyZyhkKTticmVhaztjYXNlIDIzOmNhc2UgMjQ6S2koKX1jPWMucmV0dXJufVU9YTtZPVRnKGEuY3VycmVudCxudWxsKTtXPXFqPXRqPWI7Vj0wO3NqPW51bGw7dWo9SGk9RGc9MH1cbmZ1bmN0aW9uIFNqKGEsYil7ZG97dmFyIGM9WTt0cnl7cWcoKTt2aC5jdXJyZW50PUdoO2lmKHloKXtmb3IodmFyIGQ9Ui5tZW1vaXplZFN0YXRlO251bGwhPT1kOyl7dmFyIGU9ZC5xdWV1ZTtudWxsIT09ZSYmKGUucGVuZGluZz1udWxsKTtkPWQubmV4dH15aD0hMX14aD0wO1Q9Uz1SPW51bGw7emg9ITE7cGouY3VycmVudD1udWxsO2lmKG51bGw9PT1jfHxudWxsPT09Yy5yZXR1cm4pe1Y9MTtzaj1iO1k9bnVsbDticmVha31hOnt2YXIgZj1hLGc9Yy5yZXR1cm4saD1jLGs9YjtiPVc7aC5mbGFnc3w9MjA0ODtoLmZpcnN0RWZmZWN0PWgubGFzdEVmZmVjdD1udWxsO2lmKG51bGwhPT1rJiZcIm9iamVjdFwiPT09dHlwZW9mIGsmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBrLnRoZW4pe3ZhciBsPWs7aWYoMD09PShoLm1vZGUmMikpe3ZhciBuPWguYWx0ZXJuYXRlO24/KGgudXBkYXRlUXVldWU9bi51cGRhdGVRdWV1ZSxoLm1lbW9pemVkU3RhdGU9bi5tZW1vaXplZFN0YXRlLGgubGFuZXM9bi5sYW5lcyk6XG4oaC51cGRhdGVRdWV1ZT1udWxsLGgubWVtb2l6ZWRTdGF0ZT1udWxsKX12YXIgQT0wIT09KFAuY3VycmVudCYxKSxwPWc7ZG97dmFyIEM7aWYoQz0xMz09PXAudGFnKXt2YXIgeD1wLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PXgpQz1udWxsIT09eC5kZWh5ZHJhdGVkPyEwOiExO2Vsc2V7dmFyIHc9cC5tZW1vaXplZFByb3BzO0M9dm9pZCAwPT09dy5mYWxsYmFjaz8hMTohMCE9PXcudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2s/ITA6QT8hMTohMH19aWYoQyl7dmFyIHo9cC51cGRhdGVRdWV1ZTtpZihudWxsPT09eil7dmFyIHU9bmV3IFNldDt1LmFkZChsKTtwLnVwZGF0ZVF1ZXVlPXV9ZWxzZSB6LmFkZChsKTtpZigwPT09KHAubW9kZSYyKSl7cC5mbGFnc3w9NjQ7aC5mbGFnc3w9MTYzODQ7aC5mbGFncyY9LTI5ODE7aWYoMT09PWgudGFnKWlmKG51bGw9PT1oLmFsdGVybmF0ZSloLnRhZz0xNztlbHNle3ZhciB0PXpnKC0xLDEpO3QudGFnPTI7QWcoaCx0KX1oLmxhbmVzfD0xO2JyZWFrIGF9az1cbnZvaWQgMDtoPWI7dmFyIHE9Zi5waW5nQ2FjaGU7bnVsbD09PXE/KHE9Zi5waW5nQ2FjaGU9bmV3IE9pLGs9bmV3IFNldCxxLnNldChsLGspKTooaz1xLmdldChsKSx2b2lkIDA9PT1rJiYoaz1uZXcgU2V0LHEuc2V0KGwsaykpKTtpZighay5oYXMoaCkpe2suYWRkKGgpO3ZhciB2PVlqLmJpbmQobnVsbCxmLGwsaCk7bC50aGVuKHYsdil9cC5mbGFnc3w9NDA5NjtwLmxhbmVzPWI7YnJlYWsgYX1wPXAucmV0dXJufXdoaWxlKG51bGwhPT1wKTtrPUVycm9yKChSYShoLnR5cGUpfHxcIkEgUmVhY3QgY29tcG9uZW50XCIpK1wiIHN1c3BlbmRlZCB3aGlsZSByZW5kZXJpbmcsIGJ1dCBubyBmYWxsYmFjayBVSSB3YXMgc3BlY2lmaWVkLlxcblxcbkFkZCBhIDxTdXNwZW5zZSBmYWxsYmFjaz0uLi4+IGNvbXBvbmVudCBoaWdoZXIgaW4gdGhlIHRyZWUgdG8gcHJvdmlkZSBhIGxvYWRpbmcgaW5kaWNhdG9yIG9yIHBsYWNlaG9sZGVyIHRvIGRpc3BsYXkuXCIpfTUhPT1WJiYoVj0yKTtrPU1pKGssaCk7cD1cbmc7ZG97c3dpdGNoKHAudGFnKXtjYXNlIDM6Zj1rO3AuZmxhZ3N8PTQwOTY7YiY9LWI7cC5sYW5lc3w9Yjt2YXIgSj1QaShwLGYsYik7QmcocCxKKTticmVhayBhO2Nhc2UgMTpmPWs7dmFyIEs9cC50eXBlLFE9cC5zdGF0ZU5vZGU7aWYoMD09PShwLmZsYWdzJjY0KSYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBLLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8bnVsbCE9PVEmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBRLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PVRpfHwhVGkuaGFzKFEpKSkpe3AuZmxhZ3N8PTQwOTY7YiY9LWI7cC5sYW5lc3w9Yjt2YXIgTD1TaShwLGYsYik7QmcocCxMKTticmVhayBhfX1wPXAucmV0dXJufXdoaWxlKG51bGwhPT1wKX1aaihjKX1jYXRjaCh2YSl7Yj12YTtZPT09YyYmbnVsbCE9PWMmJihZPWM9Yy5yZXR1cm4pO2NvbnRpbnVlfWJyZWFrfXdoaWxlKDEpfVxuZnVuY3Rpb24gUGooKXt2YXIgYT1vai5jdXJyZW50O29qLmN1cnJlbnQ9R2g7cmV0dXJuIG51bGw9PT1hP0doOmF9ZnVuY3Rpb24gVGooYSxiKXt2YXIgYz1YO1h8PTE2O3ZhciBkPVBqKCk7VT09PWEmJlc9PT1ifHxRaihhLGIpO2RvIHRyeXthaygpO2JyZWFrfWNhdGNoKGUpe1NqKGEsZSl9d2hpbGUoMSk7cWcoKTtYPWM7b2ouY3VycmVudD1kO2lmKG51bGwhPT1ZKXRocm93IEVycm9yKHkoMjYxKSk7VT1udWxsO1c9MDtyZXR1cm4gVn1mdW5jdGlvbiBhaygpe2Zvcig7bnVsbCE9PVk7KWJrKFkpfWZ1bmN0aW9uIFJqKCl7Zm9yKDtudWxsIT09WSYmIVFmKCk7KWJrKFkpfWZ1bmN0aW9uIGJrKGEpe3ZhciBiPWNrKGEuYWx0ZXJuYXRlLGEscWopO2EubWVtb2l6ZWRQcm9wcz1hLnBlbmRpbmdQcm9wcztudWxsPT09Yj9aaihhKTpZPWI7cGouY3VycmVudD1udWxsfVxuZnVuY3Rpb24gWmooYSl7dmFyIGI9YTtkb3t2YXIgYz1iLmFsdGVybmF0ZTthPWIucmV0dXJuO2lmKDA9PT0oYi5mbGFncyYyMDQ4KSl7Yz1HaShjLGIscWopO2lmKG51bGwhPT1jKXtZPWM7cmV0dXJufWM9YjtpZigyNCE9PWMudGFnJiYyMyE9PWMudGFnfHxudWxsPT09Yy5tZW1vaXplZFN0YXRlfHwwIT09KHFqJjEwNzM3NDE4MjQpfHwwPT09KGMubW9kZSY0KSl7Zm9yKHZhciBkPTAsZT1jLmNoaWxkO251bGwhPT1lOylkfD1lLmxhbmVzfGUuY2hpbGRMYW5lcyxlPWUuc2libGluZztjLmNoaWxkTGFuZXM9ZH1udWxsIT09YSYmMD09PShhLmZsYWdzJjIwNDgpJiYobnVsbD09PWEuZmlyc3RFZmZlY3QmJihhLmZpcnN0RWZmZWN0PWIuZmlyc3RFZmZlY3QpLG51bGwhPT1iLmxhc3RFZmZlY3QmJihudWxsIT09YS5sYXN0RWZmZWN0JiYoYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9Yi5maXJzdEVmZmVjdCksYS5sYXN0RWZmZWN0PWIubGFzdEVmZmVjdCksMTxiLmZsYWdzJiYobnVsbCE9PVxuYS5sYXN0RWZmZWN0P2EubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWI6YS5maXJzdEVmZmVjdD1iLGEubGFzdEVmZmVjdD1iKSl9ZWxzZXtjPUxpKGIpO2lmKG51bGwhPT1jKXtjLmZsYWdzJj0yMDQ3O1k9YztyZXR1cm59bnVsbCE9PWEmJihhLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1udWxsLGEuZmxhZ3N8PTIwNDgpfWI9Yi5zaWJsaW5nO2lmKG51bGwhPT1iKXtZPWI7cmV0dXJufVk9Yj1hfXdoaWxlKG51bGwhPT1iKTswPT09ViYmKFY9NSl9ZnVuY3Rpb24gVWooYSl7dmFyIGI9ZWcoKTtnZyg5OSxkay5iaW5kKG51bGwsYSxiKSk7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBkayhhLGIpe2RvIE9qKCk7d2hpbGUobnVsbCE9PXlqKTtpZigwIT09KFgmNDgpKXRocm93IEVycm9yKHkoMzI3KSk7dmFyIGM9YS5maW5pc2hlZFdvcms7aWYobnVsbD09PWMpcmV0dXJuIG51bGw7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkTGFuZXM9MDtpZihjPT09YS5jdXJyZW50KXRocm93IEVycm9yKHkoMTc3KSk7YS5jYWxsYmFja05vZGU9bnVsbDt2YXIgZD1jLmxhbmVzfGMuY2hpbGRMYW5lcyxlPWQsZj1hLnBlbmRpbmdMYW5lcyZ+ZTthLnBlbmRpbmdMYW5lcz1lO2Euc3VzcGVuZGVkTGFuZXM9MDthLnBpbmdlZExhbmVzPTA7YS5leHBpcmVkTGFuZXMmPWU7YS5tdXRhYmxlUmVhZExhbmVzJj1lO2EuZW50YW5nbGVkTGFuZXMmPWU7ZT1hLmVudGFuZ2xlbWVudHM7Zm9yKHZhciBnPWEuZXZlbnRUaW1lcyxoPWEuZXhwaXJhdGlvblRpbWVzOzA8Zjspe3ZhciBrPTMxLVZjKGYpLGw9MTw8aztlW2tdPTA7Z1trXT0tMTtoW2tdPS0xO2YmPX5sfW51bGwhPT1cbkNqJiYwPT09KGQmMjQpJiZDai5oYXMoYSkmJkNqLmRlbGV0ZShhKTthPT09VSYmKFk9VT1udWxsLFc9MCk7MTxjLmZsYWdzP251bGwhPT1jLmxhc3RFZmZlY3Q/KGMubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsZD1jLmZpcnN0RWZmZWN0KTpkPWM6ZD1jLmZpcnN0RWZmZWN0O2lmKG51bGwhPT1kKXtlPVg7WHw9MzI7cGouY3VycmVudD1udWxsO2tmPWZkO2c9TmUoKTtpZihPZShnKSl7aWYoXCJzZWxlY3Rpb25TdGFydFwiaW4gZyloPXtzdGFydDpnLnNlbGVjdGlvblN0YXJ0LGVuZDpnLnNlbGVjdGlvbkVuZH07ZWxzZSBhOmlmKGg9KGg9Zy5vd25lckRvY3VtZW50KSYmaC5kZWZhdWx0Vmlld3x8d2luZG93LChsPWguZ2V0U2VsZWN0aW9uJiZoLmdldFNlbGVjdGlvbigpKSYmMCE9PWwucmFuZ2VDb3VudCl7aD1sLmFuY2hvck5vZGU7Zj1sLmFuY2hvck9mZnNldDtrPWwuZm9jdXNOb2RlO2w9bC5mb2N1c09mZnNldDt0cnl7aC5ub2RlVHlwZSxrLm5vZGVUeXBlfWNhdGNoKHZhKXtoPW51bGw7XG5icmVhayBhfXZhciBuPTAsQT0tMSxwPS0xLEM9MCx4PTAsdz1nLHo9bnVsbDtiOmZvcig7Oyl7Zm9yKHZhciB1Ozspe3chPT1ofHwwIT09ZiYmMyE9PXcubm9kZVR5cGV8fChBPW4rZik7dyE9PWt8fDAhPT1sJiYzIT09dy5ub2RlVHlwZXx8KHA9bitsKTszPT09dy5ub2RlVHlwZSYmKG4rPXcubm9kZVZhbHVlLmxlbmd0aCk7aWYobnVsbD09PSh1PXcuZmlyc3RDaGlsZCkpYnJlYWs7ej13O3c9dX1mb3IoOzspe2lmKHc9PT1nKWJyZWFrIGI7ej09PWgmJisrQz09PWYmJihBPW4pO3o9PT1rJiYrK3g9PT1sJiYocD1uKTtpZihudWxsIT09KHU9dy5uZXh0U2libGluZykpYnJlYWs7dz16O3o9dy5wYXJlbnROb2RlfXc9dX1oPS0xPT09QXx8LTE9PT1wP251bGw6e3N0YXJ0OkEsZW5kOnB9fWVsc2UgaD1udWxsO2g9aHx8e3N0YXJ0OjAsZW5kOjB9fWVsc2UgaD1udWxsO2xmPXtmb2N1c2VkRWxlbTpnLHNlbGVjdGlvblJhbmdlOmh9O2ZkPSExO0lqPW51bGw7Smo9ITE7Wj1kO2RvIHRyeXtlaygpfWNhdGNoKHZhKXtpZihudWxsPT09XG5aKXRocm93IEVycm9yKHkoMzMwKSk7V2koWix2YSk7Wj1aLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVopO0lqPW51bGw7Wj1kO2RvIHRyeXtmb3IoZz1hO251bGwhPT1aOyl7dmFyIHQ9Wi5mbGFnczt0JjE2JiZwYihaLnN0YXRlTm9kZSxcIlwiKTtpZih0JjEyOCl7dmFyIHE9Wi5hbHRlcm5hdGU7aWYobnVsbCE9PXEpe3ZhciB2PXEucmVmO251bGwhPT12JiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIHY/dihudWxsKTp2LmN1cnJlbnQ9bnVsbCl9fXN3aXRjaCh0JjEwMzgpe2Nhc2UgMjpmaihaKTtaLmZsYWdzJj0tMzticmVhaztjYXNlIDY6ZmooWik7Wi5mbGFncyY9LTM7aWooWi5hbHRlcm5hdGUsWik7YnJlYWs7Y2FzZSAxMDI0OlouZmxhZ3MmPS0xMDI1O2JyZWFrO2Nhc2UgMTAyODpaLmZsYWdzJj0tMTAyNTtpaihaLmFsdGVybmF0ZSxaKTticmVhaztjYXNlIDQ6aWooWi5hbHRlcm5hdGUsWik7YnJlYWs7Y2FzZSA4Omg9WjtjaihnLGgpO3ZhciBKPWguYWx0ZXJuYXRlO2RqKGgpO251bGwhPT1cbkomJmRqKEopfVo9Wi5uZXh0RWZmZWN0fX1jYXRjaCh2YSl7aWYobnVsbD09PVopdGhyb3cgRXJyb3IoeSgzMzApKTtXaShaLHZhKTtaPVoubmV4dEVmZmVjdH13aGlsZShudWxsIT09Wik7dj1sZjtxPU5lKCk7dD12LmZvY3VzZWRFbGVtO2c9di5zZWxlY3Rpb25SYW5nZTtpZihxIT09dCYmdCYmdC5vd25lckRvY3VtZW50JiZNZSh0Lm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LHQpKXtudWxsIT09ZyYmT2UodCkmJihxPWcuc3RhcnQsdj1nLmVuZCx2b2lkIDA9PT12JiYodj1xKSxcInNlbGVjdGlvblN0YXJ0XCJpbiB0Pyh0LnNlbGVjdGlvblN0YXJ0PXEsdC5zZWxlY3Rpb25FbmQ9TWF0aC5taW4odix0LnZhbHVlLmxlbmd0aCkpOih2PShxPXQub3duZXJEb2N1bWVudHx8ZG9jdW1lbnQpJiZxLmRlZmF1bHRWaWV3fHx3aW5kb3csdi5nZXRTZWxlY3Rpb24mJih2PXYuZ2V0U2VsZWN0aW9uKCksaD10LnRleHRDb250ZW50Lmxlbmd0aCxKPU1hdGgubWluKGcuc3RhcnQsaCksZz12b2lkIDA9PT1cbmcuZW5kP0o6TWF0aC5taW4oZy5lbmQsaCksIXYuZXh0ZW5kJiZKPmcmJihoPWcsZz1KLEo9aCksaD1MZSh0LEopLGY9TGUodCxnKSxoJiZmJiYoMSE9PXYucmFuZ2VDb3VudHx8di5hbmNob3JOb2RlIT09aC5ub2RlfHx2LmFuY2hvck9mZnNldCE9PWgub2Zmc2V0fHx2LmZvY3VzTm9kZSE9PWYubm9kZXx8di5mb2N1c09mZnNldCE9PWYub2Zmc2V0KSYmKHE9cS5jcmVhdGVSYW5nZSgpLHEuc2V0U3RhcnQoaC5ub2RlLGgub2Zmc2V0KSx2LnJlbW92ZUFsbFJhbmdlcygpLEo+Zz8odi5hZGRSYW5nZShxKSx2LmV4dGVuZChmLm5vZGUsZi5vZmZzZXQpKToocS5zZXRFbmQoZi5ub2RlLGYub2Zmc2V0KSx2LmFkZFJhbmdlKHEpKSkpKSk7cT1bXTtmb3Iodj10O3Y9di5wYXJlbnROb2RlOykxPT09di5ub2RlVHlwZSYmcS5wdXNoKHtlbGVtZW50OnYsbGVmdDp2LnNjcm9sbExlZnQsdG9wOnYuc2Nyb2xsVG9wfSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIHQuZm9jdXMmJnQuZm9jdXMoKTtmb3IodD1cbjA7dDxxLmxlbmd0aDt0Kyspdj1xW3RdLHYuZWxlbWVudC5zY3JvbGxMZWZ0PXYubGVmdCx2LmVsZW1lbnQuc2Nyb2xsVG9wPXYudG9wfWZkPSEha2Y7bGY9a2Y9bnVsbDthLmN1cnJlbnQ9YztaPWQ7ZG8gdHJ5e2Zvcih0PWE7bnVsbCE9PVo7KXt2YXIgSz1aLmZsYWdzO0smMzYmJllpKHQsWi5hbHRlcm5hdGUsWik7aWYoSyYxMjgpe3E9dm9pZCAwO3ZhciBRPVoucmVmO2lmKG51bGwhPT1RKXt2YXIgTD1aLnN0YXRlTm9kZTtzd2l0Y2goWi50YWcpe2Nhc2UgNTpxPUw7YnJlYWs7ZGVmYXVsdDpxPUx9XCJmdW5jdGlvblwiPT09dHlwZW9mIFE/UShxKTpRLmN1cnJlbnQ9cX19Wj1aLm5leHRFZmZlY3R9fWNhdGNoKHZhKXtpZihudWxsPT09Wil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKFosdmEpO1o9Wi5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1aKTtaPW51bGw7JGYoKTtYPWV9ZWxzZSBhLmN1cnJlbnQ9YztpZih4ail4aj0hMSx5aj1hLHpqPWI7ZWxzZSBmb3IoWj1kO251bGwhPT1aOyliPVxuWi5uZXh0RWZmZWN0LFoubmV4dEVmZmVjdD1udWxsLFouZmxhZ3MmOCYmKEs9WixLLnNpYmxpbmc9bnVsbCxLLnN0YXRlTm9kZT1udWxsKSxaPWI7ZD1hLnBlbmRpbmdMYW5lczswPT09ZCYmKFRpPW51bGwpOzE9PT1kP2E9PT1Faj9EaisrOihEaj0wLEVqPWEpOkRqPTA7Yz1jLnN0YXRlTm9kZTtpZihNZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIE1mLm9uQ29tbWl0RmliZXJSb290KXRyeXtNZi5vbkNvbW1pdEZpYmVyUm9vdChMZixjLHZvaWQgMCw2ND09PShjLmN1cnJlbnQuZmxhZ3MmNjQpKX1jYXRjaCh2YSl7fU1qKGEsTygpKTtpZihRaSl0aHJvdyBRaT0hMSxhPVJpLFJpPW51bGwsYTtpZigwIT09KFgmOCkpcmV0dXJuIG51bGw7aWcoKTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGVrKCl7Zm9yKDtudWxsIT09Wjspe3ZhciBhPVouYWx0ZXJuYXRlO0pqfHxudWxsPT09SWp8fCgwIT09KFouZmxhZ3MmOCk/ZGMoWixJaikmJihKaj0hMCk6MTM9PT1aLnRhZyYmbWooYSxaKSYmZGMoWixJaikmJihKaj0hMCkpO3ZhciBiPVouZmxhZ3M7MCE9PShiJjI1NikmJlhpKGEsWik7MD09PShiJjUxMil8fHhqfHwoeGo9ITAsaGcoOTcsZnVuY3Rpb24oKXtPaigpO3JldHVybiBudWxsfSkpO1o9Wi5uZXh0RWZmZWN0fX1mdW5jdGlvbiBPaigpe2lmKDkwIT09emope3ZhciBhPTk3PHpqPzk3OnpqO3pqPTkwO3JldHVybiBnZyhhLGZrKX1yZXR1cm4hMX1mdW5jdGlvbiAkaShhLGIpe0FqLnB1c2goYixhKTt4anx8KHhqPSEwLGhnKDk3LGZ1bmN0aW9uKCl7T2ooKTtyZXR1cm4gbnVsbH0pKX1mdW5jdGlvbiBaaShhLGIpe0JqLnB1c2goYixhKTt4anx8KHhqPSEwLGhnKDk3LGZ1bmN0aW9uKCl7T2ooKTtyZXR1cm4gbnVsbH0pKX1cbmZ1bmN0aW9uIGZrKCl7aWYobnVsbD09PXlqKXJldHVybiExO3ZhciBhPXlqO3lqPW51bGw7aWYoMCE9PShYJjQ4KSl0aHJvdyBFcnJvcih5KDMzMSkpO3ZhciBiPVg7WHw9MzI7dmFyIGM9Qmo7Qmo9W107Zm9yKHZhciBkPTA7ZDxjLmxlbmd0aDtkKz0yKXt2YXIgZT1jW2RdLGY9Y1tkKzFdLGc9ZS5kZXN0cm95O2UuZGVzdHJveT12b2lkIDA7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcpdHJ5e2coKX1jYXRjaChrKXtpZihudWxsPT09Zil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKGYsayl9fWM9QWo7QWo9W107Zm9yKGQ9MDtkPGMubGVuZ3RoO2QrPTIpe2U9Y1tkXTtmPWNbZCsxXTt0cnl7dmFyIGg9ZS5jcmVhdGU7ZS5kZXN0cm95PWgoKX1jYXRjaChrKXtpZihudWxsPT09Zil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKGYsayl9fWZvcihoPWEuY3VycmVudC5maXJzdEVmZmVjdDtudWxsIT09aDspYT1oLm5leHRFZmZlY3QsaC5uZXh0RWZmZWN0PW51bGwsaC5mbGFncyY4JiYoaC5zaWJsaW5nPVxubnVsbCxoLnN0YXRlTm9kZT1udWxsKSxoPWE7WD1iO2lnKCk7cmV0dXJuITB9ZnVuY3Rpb24gZ2soYSxiLGMpe2I9TWkoYyxiKTtiPVBpKGEsYiwxKTtBZyhhLGIpO2I9SGcoKTthPUtqKGEsMSk7bnVsbCE9PWEmJigkYyhhLDEsYiksTWooYSxiKSl9XG5mdW5jdGlvbiBXaShhLGIpe2lmKDM9PT1hLnRhZylnayhhLGEsYik7ZWxzZSBmb3IodmFyIGM9YS5yZXR1cm47bnVsbCE9PWM7KXtpZigzPT09Yy50YWcpe2drKGMsYSxiKTticmVha31lbHNlIGlmKDE9PT1jLnRhZyl7dmFyIGQ9Yy5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGMudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PVRpfHwhVGkuaGFzKGQpKSl7YT1NaShiLGEpO3ZhciBlPVNpKGMsYSwxKTtBZyhjLGUpO2U9SGcoKTtjPUtqKGMsMSk7aWYobnVsbCE9PWMpJGMoYywxLGUpLE1qKGMsZSk7ZWxzZSBpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1UaXx8IVRpLmhhcyhkKSkpdHJ5e2QuY29tcG9uZW50RGlkQ2F0Y2goYixhKX1jYXRjaChmKXt9YnJlYWt9fWM9Yy5yZXR1cm59fVxuZnVuY3Rpb24gWWooYSxiLGMpe3ZhciBkPWEucGluZ0NhY2hlO251bGwhPT1kJiZkLmRlbGV0ZShiKTtiPUhnKCk7YS5waW5nZWRMYW5lc3w9YS5zdXNwZW5kZWRMYW5lcyZjO1U9PT1hJiYoVyZjKT09PWMmJig0PT09Vnx8Mz09PVYmJihXJjYyOTE0NTYwKT09PVcmJjUwMD5PKCktamo/UWooYSwwKTp1anw9Yyk7TWooYSxiKX1mdW5jdGlvbiBsaihhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO251bGwhPT1jJiZjLmRlbGV0ZShiKTtiPTA7MD09PWImJihiPWEubW9kZSwwPT09KGImMik/Yj0xOjA9PT0oYiY0KT9iPTk5PT09ZWcoKT8xOjI6KDA9PT1HaiYmKEdqPXRqKSxiPVljKDYyOTE0NTYwJn5HaiksMD09PWImJihiPTQxOTQzMDQpKSk7Yz1IZygpO2E9S2ooYSxiKTtudWxsIT09YSYmKCRjKGEsYixjKSxNaihhLGMpKX12YXIgY2s7XG5jaz1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9Yi5sYW5lcztpZihudWxsIT09YSlpZihhLm1lbW9pemVkUHJvcHMhPT1iLnBlbmRpbmdQcm9wc3x8Ti5jdXJyZW50KXVnPSEwO2Vsc2UgaWYoMCE9PShjJmQpKXVnPTAhPT0oYS5mbGFncyYxNjM4NCk/ITA6ITE7ZWxzZXt1Zz0hMTtzd2l0Y2goYi50YWcpe2Nhc2UgMzpyaShiKTtzaCgpO2JyZWFrO2Nhc2UgNTpnaChiKTticmVhaztjYXNlIDE6RmYoYi50eXBlKSYmSmYoYik7YnJlYWs7Y2FzZSA0OmVoKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7YnJlYWs7Y2FzZSAxMDpkPWIubWVtb2l6ZWRQcm9wcy52YWx1ZTt2YXIgZT1iLnR5cGUuX2NvbnRleHQ7SShtZyxlLl9jdXJyZW50VmFsdWUpO2UuX2N1cnJlbnRWYWx1ZT1kO2JyZWFrO2Nhc2UgMTM6aWYobnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSl7aWYoMCE9PShjJmIuY2hpbGQuY2hpbGRMYW5lcykpcmV0dXJuIHRpKGEsYixjKTtJKFAsUC5jdXJyZW50JjEpO2I9aGkoYSxiLGMpO3JldHVybiBudWxsIT09XG5iP2Iuc2libGluZzpudWxsfUkoUCxQLmN1cnJlbnQmMSk7YnJlYWs7Y2FzZSAxOTpkPTAhPT0oYyZiLmNoaWxkTGFuZXMpO2lmKDAhPT0oYS5mbGFncyY2NCkpe2lmKGQpcmV0dXJuIEFpKGEsYixjKTtiLmZsYWdzfD02NH1lPWIubWVtb2l6ZWRTdGF0ZTtudWxsIT09ZSYmKGUucmVuZGVyaW5nPW51bGwsZS50YWlsPW51bGwsZS5sYXN0RWZmZWN0PW51bGwpO0koUCxQLmN1cnJlbnQpO2lmKGQpYnJlYWs7ZWxzZSByZXR1cm4gbnVsbDtjYXNlIDIzOmNhc2UgMjQ6cmV0dXJuIGIubGFuZXM9MCxtaShhLGIsYyl9cmV0dXJuIGhpKGEsYixjKX1lbHNlIHVnPSExO2IubGFuZXM9MDtzd2l0Y2goYi50YWcpe2Nhc2UgMjpkPWIudHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmZsYWdzfD0yKTthPWIucGVuZGluZ1Byb3BzO2U9RWYoYixNLmN1cnJlbnQpO3RnKGIsYyk7ZT1DaChudWxsLGIsZCxhLGUsYyk7Yi5mbGFnc3w9MTtpZihcIm9iamVjdFwiPT09XG50eXBlb2YgZSYmbnVsbCE9PWUmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLnJlbmRlciYmdm9pZCAwPT09ZS4kJHR5cGVvZil7Yi50YWc9MTtiLm1lbW9pemVkU3RhdGU9bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7aWYoRmYoZCkpe3ZhciBmPSEwO0pmKGIpfWVsc2UgZj0hMTtiLm1lbW9pemVkU3RhdGU9bnVsbCE9PWUuc3RhdGUmJnZvaWQgMCE9PWUuc3RhdGU/ZS5zdGF0ZTpudWxsO3hnKGIpO3ZhciBnPWQuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiZHZyhiLGQsZyxhKTtlLnVwZGF0ZXI9S2c7Yi5zdGF0ZU5vZGU9ZTtlLl9yZWFjdEludGVybmFscz1iO09nKGIsZCxhLGMpO2I9cWkobnVsbCxiLGQsITAsZixjKX1lbHNlIGIudGFnPTAsZmkobnVsbCxiLGUsYyksYj1iLmNoaWxkO3JldHVybiBiO2Nhc2UgMTY6ZT1iLmVsZW1lbnRUeXBlO2E6e251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZmxhZ3N8PTIpO1xuYT1iLnBlbmRpbmdQcm9wcztmPWUuX2luaXQ7ZT1mKGUuX3BheWxvYWQpO2IudHlwZT1lO2Y9Yi50YWc9aGsoZSk7YT1sZyhlLGEpO3N3aXRjaChmKXtjYXNlIDA6Yj1saShudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxOmI9cGkobnVsbCxiLGUsYSxjKTticmVhayBhO2Nhc2UgMTE6Yj1naShudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxNDpiPWlpKG51bGwsYixlLGxnKGUudHlwZSxhKSxkLGMpO2JyZWFrIGF9dGhyb3cgRXJyb3IoeSgzMDYsZSxcIlwiKSk7fXJldHVybiBiO2Nhc2UgMDpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6bGcoZCxlKSxsaShhLGIsZCxlLGMpO2Nhc2UgMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6bGcoZCxlKSxwaShhLGIsZCxlLGMpO2Nhc2UgMzpyaShiKTtkPWIudXBkYXRlUXVldWU7aWYobnVsbD09PWF8fG51bGw9PT1kKXRocm93IEVycm9yKHkoMjgyKSk7XG5kPWIucGVuZGluZ1Byb3BzO2U9Yi5tZW1vaXplZFN0YXRlO2U9bnVsbCE9PWU/ZS5lbGVtZW50Om51bGw7eWcoYSxiKTtDZyhiLGQsbnVsbCxjKTtkPWIubWVtb2l6ZWRTdGF0ZS5lbGVtZW50O2lmKGQ9PT1lKXNoKCksYj1oaShhLGIsYyk7ZWxzZXtlPWIuc3RhdGVOb2RlO2lmKGY9ZS5oeWRyYXRlKWtoPXJmKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8uZmlyc3RDaGlsZCksamg9YixmPWxoPSEwO2lmKGYpe2E9ZS5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhO2lmKG51bGwhPWEpZm9yKGU9MDtlPGEubGVuZ3RoO2UrPTIpZj1hW2VdLGYuX3dvcmtJblByb2dyZXNzVmVyc2lvblByaW1hcnk9YVtlKzFdLHRoLnB1c2goZik7Yz1aZyhiLG51bGwsZCxjKTtmb3IoYi5jaGlsZD1jO2M7KWMuZmxhZ3M9Yy5mbGFncyYtM3wxMDI0LGM9Yy5zaWJsaW5nfWVsc2UgZmkoYSxiLGQsYyksc2goKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA1OnJldHVybiBnaChiKSxudWxsPT09YSYmXG5waChiKSxkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGY9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOm51bGwsZz1lLmNoaWxkcmVuLG5mKGQsZSk/Zz1udWxsOm51bGwhPT1mJiZuZihkLGYpJiYoYi5mbGFnc3w9MTYpLG9pKGEsYiksZmkoYSxiLGcsYyksYi5jaGlsZDtjYXNlIDY6cmV0dXJuIG51bGw9PT1hJiZwaChiKSxudWxsO2Nhc2UgMTM6cmV0dXJuIHRpKGEsYixjKTtjYXNlIDQ6cmV0dXJuIGVoKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksZD1iLnBlbmRpbmdQcm9wcyxudWxsPT09YT9iLmNoaWxkPVlnKGIsbnVsbCxkLGMpOmZpKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6bGcoZCxlKSxnaShhLGIsZCxlLGMpO2Nhc2UgNzpyZXR1cm4gZmkoYSxiLGIucGVuZGluZ1Byb3BzLGMpLGIuY2hpbGQ7Y2FzZSA4OnJldHVybiBmaShhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sXG5jKSxiLmNoaWxkO2Nhc2UgMTI6cmV0dXJuIGZpKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixjKSxiLmNoaWxkO2Nhc2UgMTA6YTp7ZD1iLnR5cGUuX2NvbnRleHQ7ZT1iLnBlbmRpbmdQcm9wcztnPWIubWVtb2l6ZWRQcm9wcztmPWUudmFsdWU7dmFyIGg9Yi50eXBlLl9jb250ZXh0O0kobWcsaC5fY3VycmVudFZhbHVlKTtoLl9jdXJyZW50VmFsdWU9ZjtpZihudWxsIT09ZylpZihoPWcudmFsdWUsZj1IZShoLGYpPzA6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLl9jYWxjdWxhdGVDaGFuZ2VkQml0cz9kLl9jYWxjdWxhdGVDaGFuZ2VkQml0cyhoLGYpOjEwNzM3NDE4MjMpfDAsMD09PWYpe2lmKGcuY2hpbGRyZW49PT1lLmNoaWxkcmVuJiYhTi5jdXJyZW50KXtiPWhpKGEsYixjKTticmVhayBhfX1lbHNlIGZvcihoPWIuY2hpbGQsbnVsbCE9PWgmJihoLnJldHVybj1iKTtudWxsIT09aDspe3ZhciBrPWguZGVwZW5kZW5jaWVzO2lmKG51bGwhPT1rKXtnPWguY2hpbGQ7Zm9yKHZhciBsPVxuay5maXJzdENvbnRleHQ7bnVsbCE9PWw7KXtpZihsLmNvbnRleHQ9PT1kJiYwIT09KGwub2JzZXJ2ZWRCaXRzJmYpKXsxPT09aC50YWcmJihsPXpnKC0xLGMmLWMpLGwudGFnPTIsQWcoaCxsKSk7aC5sYW5lc3w9YztsPWguYWx0ZXJuYXRlO251bGwhPT1sJiYobC5sYW5lc3w9Yyk7c2coaC5yZXR1cm4sYyk7ay5sYW5lc3w9YzticmVha31sPWwubmV4dH19ZWxzZSBnPTEwPT09aC50YWc/aC50eXBlPT09Yi50eXBlP251bGw6aC5jaGlsZDpoLmNoaWxkO2lmKG51bGwhPT1nKWcucmV0dXJuPWg7ZWxzZSBmb3IoZz1oO251bGwhPT1nOyl7aWYoZz09PWIpe2c9bnVsbDticmVha31oPWcuc2libGluZztpZihudWxsIT09aCl7aC5yZXR1cm49Zy5yZXR1cm47Zz1oO2JyZWFrfWc9Zy5yZXR1cm59aD1nfWZpKGEsYixlLmNoaWxkcmVuLGMpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDk6cmV0dXJuIGU9Yi50eXBlLGY9Yi5wZW5kaW5nUHJvcHMsZD1mLmNoaWxkcmVuLHRnKGIsYyksZT12ZyhlLFxuZi51bnN0YWJsZV9vYnNlcnZlZEJpdHMpLGQ9ZChlKSxiLmZsYWdzfD0xLGZpKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxNDpyZXR1cm4gZT1iLnR5cGUsZj1sZyhlLGIucGVuZGluZ1Byb3BzKSxmPWxnKGUudHlwZSxmKSxpaShhLGIsZSxmLGQsYyk7Y2FzZSAxNTpyZXR1cm4ga2koYSxiLGIudHlwZSxiLnBlbmRpbmdQcm9wcyxkLGMpO2Nhc2UgMTc6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmxnKGQsZSksbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5mbGFnc3w9MiksYi50YWc9MSxGZihkKT8oYT0hMCxKZihiKSk6YT0hMSx0ZyhiLGMpLE1nKGIsZCxlKSxPZyhiLGQsZSxjKSxxaShudWxsLGIsZCwhMCxhLGMpO2Nhc2UgMTk6cmV0dXJuIEFpKGEsYixjKTtjYXNlIDIzOnJldHVybiBtaShhLGIsYyk7Y2FzZSAyNDpyZXR1cm4gbWkoYSxiLGMpfXRocm93IEVycm9yKHkoMTU2LGIudGFnKSk7XG59O2Z1bmN0aW9uIGlrKGEsYixjLGQpe3RoaXMudGFnPWE7dGhpcy5rZXk9Yzt0aGlzLnNpYmxpbmc9dGhpcy5jaGlsZD10aGlzLnJldHVybj10aGlzLnN0YXRlTm9kZT10aGlzLnR5cGU9dGhpcy5lbGVtZW50VHlwZT1udWxsO3RoaXMuaW5kZXg9MDt0aGlzLnJlZj1udWxsO3RoaXMucGVuZGluZ1Byb3BzPWI7dGhpcy5kZXBlbmRlbmNpZXM9dGhpcy5tZW1vaXplZFN0YXRlPXRoaXMudXBkYXRlUXVldWU9dGhpcy5tZW1vaXplZFByb3BzPW51bGw7dGhpcy5tb2RlPWQ7dGhpcy5mbGFncz0wO3RoaXMubGFzdEVmZmVjdD10aGlzLmZpcnN0RWZmZWN0PXRoaXMubmV4dEVmZmVjdD1udWxsO3RoaXMuY2hpbGRMYW5lcz10aGlzLmxhbmVzPTA7dGhpcy5hbHRlcm5hdGU9bnVsbH1mdW5jdGlvbiBuaChhLGIsYyxkKXtyZXR1cm4gbmV3IGlrKGEsYixjLGQpfWZ1bmN0aW9uIGppKGEpe2E9YS5wcm90b3R5cGU7cmV0dXJuISghYXx8IWEuaXNSZWFjdENvbXBvbmVudCl9XG5mdW5jdGlvbiBoayhhKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gamkoYSk/MTowO2lmKHZvaWQgMCE9PWEmJm51bGwhPT1hKXthPWEuJCR0eXBlb2Y7aWYoYT09PUFhKXJldHVybiAxMTtpZihhPT09RGEpcmV0dXJuIDE0fXJldHVybiAyfVxuZnVuY3Rpb24gVGcoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsPT09Yz8oYz1uaChhLnRhZyxiLGEua2V5LGEubW9kZSksYy5lbGVtZW50VHlwZT1hLmVsZW1lbnRUeXBlLGMudHlwZT1hLnR5cGUsYy5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGUsYy5hbHRlcm5hdGU9YSxhLmFsdGVybmF0ZT1jKTooYy5wZW5kaW5nUHJvcHM9YixjLnR5cGU9YS50eXBlLGMuZmxhZ3M9MCxjLm5leHRFZmZlY3Q9bnVsbCxjLmZpcnN0RWZmZWN0PW51bGwsYy5sYXN0RWZmZWN0PW51bGwpO2MuY2hpbGRMYW5lcz1hLmNoaWxkTGFuZXM7Yy5sYW5lcz1hLmxhbmVzO2MuY2hpbGQ9YS5jaGlsZDtjLm1lbW9pemVkUHJvcHM9YS5tZW1vaXplZFByb3BzO2MubWVtb2l6ZWRTdGF0ZT1hLm1lbW9pemVkU3RhdGU7Yy51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlO2I9YS5kZXBlbmRlbmNpZXM7Yy5kZXBlbmRlbmNpZXM9bnVsbD09PWI/bnVsbDp7bGFuZXM6Yi5sYW5lcyxmaXJzdENvbnRleHQ6Yi5maXJzdENvbnRleHR9O1xuYy5zaWJsaW5nPWEuc2libGluZztjLmluZGV4PWEuaW5kZXg7Yy5yZWY9YS5yZWY7cmV0dXJuIGN9XG5mdW5jdGlvbiBWZyhhLGIsYyxkLGUsZil7dmFyIGc9MjtkPWE7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpamkoYSkmJihnPTEpO2Vsc2UgaWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKWc9NTtlbHNlIGE6c3dpdGNoKGEpe2Nhc2UgdWE6cmV0dXJuIFhnKGMuY2hpbGRyZW4sZSxmLGIpO2Nhc2UgSGE6Zz04O2V8PTE2O2JyZWFrO2Nhc2Ugd2E6Zz04O2V8PTE7YnJlYWs7Y2FzZSB4YTpyZXR1cm4gYT1uaCgxMixjLGIsZXw4KSxhLmVsZW1lbnRUeXBlPXhhLGEudHlwZT14YSxhLmxhbmVzPWYsYTtjYXNlIEJhOnJldHVybiBhPW5oKDEzLGMsYixlKSxhLnR5cGU9QmEsYS5lbGVtZW50VHlwZT1CYSxhLmxhbmVzPWYsYTtjYXNlIENhOnJldHVybiBhPW5oKDE5LGMsYixlKSxhLmVsZW1lbnRUeXBlPUNhLGEubGFuZXM9ZixhO2Nhc2UgSWE6cmV0dXJuIHZpKGMsZSxmLGIpO2Nhc2UgSmE6cmV0dXJuIGE9bmgoMjQsYyxiLGUpLGEuZWxlbWVudFR5cGU9SmEsYS5sYW5lcz1mLGE7ZGVmYXVsdDppZihcIm9iamVjdFwiPT09XG50eXBlb2YgYSYmbnVsbCE9PWEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgeWE6Zz0xMDticmVhayBhO2Nhc2UgemE6Zz05O2JyZWFrIGE7Y2FzZSBBYTpnPTExO2JyZWFrIGE7Y2FzZSBEYTpnPTE0O2JyZWFrIGE7Y2FzZSBFYTpnPTE2O2Q9bnVsbDticmVhayBhO2Nhc2UgRmE6Zz0yMjticmVhayBhfXRocm93IEVycm9yKHkoMTMwLG51bGw9PWE/YTp0eXBlb2YgYSxcIlwiKSk7fWI9bmgoZyxjLGIsZSk7Yi5lbGVtZW50VHlwZT1hO2IudHlwZT1kO2IubGFuZXM9ZjtyZXR1cm4gYn1mdW5jdGlvbiBYZyhhLGIsYyxkKXthPW5oKDcsYSxkLGIpO2EubGFuZXM9YztyZXR1cm4gYX1mdW5jdGlvbiB2aShhLGIsYyxkKXthPW5oKDIzLGEsZCxiKTthLmVsZW1lbnRUeXBlPUlhO2EubGFuZXM9YztyZXR1cm4gYX1mdW5jdGlvbiBVZyhhLGIsYyl7YT1uaCg2LGEsbnVsbCxiKTthLmxhbmVzPWM7cmV0dXJuIGF9XG5mdW5jdGlvbiBXZyhhLGIsYyl7Yj1uaCg0LG51bGwhPT1hLmNoaWxkcmVuP2EuY2hpbGRyZW46W10sYS5rZXksYik7Yi5sYW5lcz1jO2Iuc3RhdGVOb2RlPXtjb250YWluZXJJbmZvOmEuY29udGFpbmVySW5mbyxwZW5kaW5nQ2hpbGRyZW46bnVsbCxpbXBsZW1lbnRhdGlvbjphLmltcGxlbWVudGF0aW9ufTtyZXR1cm4gYn1cbmZ1bmN0aW9uIGprKGEsYixjKXt0aGlzLnRhZz1iO3RoaXMuY29udGFpbmVySW5mbz1hO3RoaXMuZmluaXNoZWRXb3JrPXRoaXMucGluZ0NhY2hlPXRoaXMuY3VycmVudD10aGlzLnBlbmRpbmdDaGlsZHJlbj1udWxsO3RoaXMudGltZW91dEhhbmRsZT0tMTt0aGlzLnBlbmRpbmdDb250ZXh0PXRoaXMuY29udGV4dD1udWxsO3RoaXMuaHlkcmF0ZT1jO3RoaXMuY2FsbGJhY2tOb2RlPW51bGw7dGhpcy5jYWxsYmFja1ByaW9yaXR5PTA7dGhpcy5ldmVudFRpbWVzPVpjKDApO3RoaXMuZXhwaXJhdGlvblRpbWVzPVpjKC0xKTt0aGlzLmVudGFuZ2xlZExhbmVzPXRoaXMuZmluaXNoZWRMYW5lcz10aGlzLm11dGFibGVSZWFkTGFuZXM9dGhpcy5leHBpcmVkTGFuZXM9dGhpcy5waW5nZWRMYW5lcz10aGlzLnN1c3BlbmRlZExhbmVzPXRoaXMucGVuZGluZ0xhbmVzPTA7dGhpcy5lbnRhbmdsZW1lbnRzPVpjKDApO3RoaXMubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YT1udWxsfVxuZnVuY3Rpb24ga2soYSxiLGMpe3ZhciBkPTM8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTpudWxsO3JldHVybnskJHR5cGVvZjp0YSxrZXk6bnVsbD09ZD9udWxsOlwiXCIrZCxjaGlsZHJlbjphLGNvbnRhaW5lckluZm86YixpbXBsZW1lbnRhdGlvbjpjfX1cbmZ1bmN0aW9uIGxrKGEsYixjLGQpe3ZhciBlPWIuY3VycmVudCxmPUhnKCksZz1JZyhlKTthOmlmKGMpe2M9Yy5fcmVhY3RJbnRlcm5hbHM7Yjp7aWYoWmIoYykhPT1jfHwxIT09Yy50YWcpdGhyb3cgRXJyb3IoeSgxNzApKTt2YXIgaD1jO2Rve3N3aXRjaChoLnRhZyl7Y2FzZSAzOmg9aC5zdGF0ZU5vZGUuY29udGV4dDticmVhayBiO2Nhc2UgMTppZihGZihoLnR5cGUpKXtoPWguc3RhdGVOb2RlLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0O2JyZWFrIGJ9fWg9aC5yZXR1cm59d2hpbGUobnVsbCE9PWgpO3Rocm93IEVycm9yKHkoMTcxKSk7fWlmKDE9PT1jLnRhZyl7dmFyIGs9Yy50eXBlO2lmKEZmKGspKXtjPUlmKGMsayxoKTticmVhayBhfX1jPWh9ZWxzZSBjPUNmO251bGw9PT1iLmNvbnRleHQ/Yi5jb250ZXh0PWM6Yi5wZW5kaW5nQ29udGV4dD1jO2I9emcoZixnKTtiLnBheWxvYWQ9e2VsZW1lbnQ6YX07ZD12b2lkIDA9PT1kP251bGw6ZDtudWxsIT09XG5kJiYoYi5jYWxsYmFjaz1kKTtBZyhlLGIpO0pnKGUsZyxmKTtyZXR1cm4gZ31mdW5jdGlvbiBtayhhKXthPWEuY3VycmVudDtpZighYS5jaGlsZClyZXR1cm4gbnVsbDtzd2l0Y2goYS5jaGlsZC50YWcpe2Nhc2UgNTpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGU7ZGVmYXVsdDpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGV9fWZ1bmN0aW9uIG5rKGEsYil7YT1hLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWEmJm51bGwhPT1hLmRlaHlkcmF0ZWQpe3ZhciBjPWEucmV0cnlMYW5lO2EucmV0cnlMYW5lPTAhPT1jJiZjPGI/YzpifX1mdW5jdGlvbiBvayhhLGIpe25rKGEsYik7KGE9YS5hbHRlcm5hdGUpJiZuayhhLGIpfWZ1bmN0aW9uIHBrKCl7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBxayhhLGIsYyl7dmFyIGQ9bnVsbCE9YyYmbnVsbCE9Yy5oeWRyYXRpb25PcHRpb25zJiZjLmh5ZHJhdGlvbk9wdGlvbnMubXV0YWJsZVNvdXJjZXN8fG51bGw7Yz1uZXcgamsoYSxiLG51bGwhPWMmJiEwPT09Yy5oeWRyYXRlKTtiPW5oKDMsbnVsbCxudWxsLDI9PT1iPzc6MT09PWI/MzowKTtjLmN1cnJlbnQ9YjtiLnN0YXRlTm9kZT1jO3hnKGIpO2FbZmZdPWMuY3VycmVudDtjZig4PT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YSk7aWYoZClmb3IoYT0wO2E8ZC5sZW5ndGg7YSsrKXtiPWRbYV07dmFyIGU9Yi5fZ2V0VmVyc2lvbjtlPWUoYi5fc291cmNlKTtudWxsPT1jLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGE/Yy5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhPVtiLGVdOmMubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YS5wdXNoKGIsZSl9dGhpcy5faW50ZXJuYWxSb290PWN9XG5xay5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEpe2xrKGEsdGhpcy5faW50ZXJuYWxSb290LG51bGwsbnVsbCl9O3FrLnByb3RvdHlwZS51bm1vdW50PWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5faW50ZXJuYWxSb290LGI9YS5jb250YWluZXJJbmZvO2xrKG51bGwsYSxudWxsLGZ1bmN0aW9uKCl7YltmZl09bnVsbH0pfTtmdW5jdGlvbiByayhhKXtyZXR1cm4hKCFhfHwxIT09YS5ub2RlVHlwZSYmOSE9PWEubm9kZVR5cGUmJjExIT09YS5ub2RlVHlwZSYmKDghPT1hLm5vZGVUeXBlfHxcIiByZWFjdC1tb3VudC1wb2ludC11bnN0YWJsZSBcIiE9PWEubm9kZVZhbHVlKSl9XG5mdW5jdGlvbiBzayhhLGIpe2J8fChiPWE/OT09PWEubm9kZVR5cGU/YS5kb2N1bWVudEVsZW1lbnQ6YS5maXJzdENoaWxkOm51bGwsYj0hKCFifHwxIT09Yi5ub2RlVHlwZXx8IWIuaGFzQXR0cmlidXRlKFwiZGF0YS1yZWFjdHJvb3RcIikpKTtpZighYilmb3IodmFyIGM7Yz1hLmxhc3RDaGlsZDspYS5yZW1vdmVDaGlsZChjKTtyZXR1cm4gbmV3IHFrKGEsMCxiP3toeWRyYXRlOiEwfTp2b2lkIDApfVxuZnVuY3Rpb24gdGsoYSxiLGMsZCxlKXt2YXIgZj1jLl9yZWFjdFJvb3RDb250YWluZXI7aWYoZil7dmFyIGc9Zi5faW50ZXJuYWxSb290O2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaD1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1tayhnKTtoLmNhbGwoYSl9fWxrKGIsZyxhLGUpfWVsc2V7Zj1jLl9yZWFjdFJvb3RDb250YWluZXI9c2soYyxkKTtnPWYuX2ludGVybmFsUm9vdDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGs9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9bWsoZyk7ay5jYWxsKGEpfX1YaihmdW5jdGlvbigpe2xrKGIsZyxhLGUpfSl9cmV0dXJuIG1rKGcpfWVjPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPUhnKCk7SmcoYSw0LGIpO29rKGEsNCl9fTtmYz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1IZygpO0pnKGEsNjcxMDg4NjQsYik7b2soYSw2NzEwODg2NCl9fTtcbmdjPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPUhnKCksYz1JZyhhKTtKZyhhLGMsYik7b2soYSxjKX19O2hjPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGIoKX07XG55Yj1mdW5jdGlvbihhLGIsYyl7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOmFiKGEsYyk7Yj1jLm5hbWU7aWYoXCJyYWRpb1wiPT09Yy50eXBlJiZudWxsIT1iKXtmb3IoYz1hO2MucGFyZW50Tm9kZTspYz1jLnBhcmVudE5vZGU7Yz1jLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFtuYW1lPVwiK0pTT04uc3RyaW5naWZ5KFwiXCIrYikrJ11bdHlwZT1cInJhZGlvXCJdJyk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKyl7dmFyIGQ9Y1tiXTtpZihkIT09YSYmZC5mb3JtPT09YS5mb3JtKXt2YXIgZT1EYihkKTtpZighZSl0aHJvdyBFcnJvcih5KDkwKSk7V2EoZCk7YWIoZCxlKX19fWJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmliKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy52YWx1ZSxudWxsIT1iJiZmYihhLCEhYy5tdWx0aXBsZSxiLCExKX19O0diPVdqO1xuSGI9ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1YO1h8PTQ7dHJ5e3JldHVybiBnZyg5OCxhLmJpbmQobnVsbCxiLGMsZCxlKSl9ZmluYWxseXtYPWYsMD09PVgmJih3aigpLGlnKCkpfX07SWI9ZnVuY3Rpb24oKXswPT09KFgmNDkpJiYoVmooKSxPaigpKX07SmI9ZnVuY3Rpb24oYSxiKXt2YXIgYz1YO1h8PTI7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7WD1jLDA9PT1YJiYod2ooKSxpZygpKX19O2Z1bmN0aW9uIHVrKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7aWYoIXJrKGIpKXRocm93IEVycm9yKHkoMjAwKSk7cmV0dXJuIGtrKGEsYixudWxsLGMpfXZhciB2az17RXZlbnRzOltDYix1ZSxEYixFYixGYixPaix7Y3VycmVudDohMX1dfSx3az17ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6d2MsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNy4wLjFcIixyZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9O1xudmFyIHhrPXtidW5kbGVUeXBlOndrLmJ1bmRsZVR5cGUsdmVyc2lvbjp3ay52ZXJzaW9uLHJlbmRlcmVyUGFja2FnZU5hbWU6d2sucmVuZGVyZXJQYWNrYWdlTmFtZSxyZW5kZXJlckNvbmZpZzp3ay5yZW5kZXJlckNvbmZpZyxvdmVycmlkZUhvb2tTdGF0ZTpudWxsLG92ZXJyaWRlSG9va1N0YXRlRGVsZXRlUGF0aDpudWxsLG92ZXJyaWRlSG9va1N0YXRlUmVuYW1lUGF0aDpudWxsLG92ZXJyaWRlUHJvcHM6bnVsbCxvdmVycmlkZVByb3BzRGVsZXRlUGF0aDpudWxsLG92ZXJyaWRlUHJvcHNSZW5hbWVQYXRoOm51bGwsc2V0U3VzcGVuc2VIYW5kbGVyOm51bGwsc2NoZWR1bGVVcGRhdGU6bnVsbCxjdXJyZW50RGlzcGF0Y2hlclJlZjpyYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLGZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyOmZ1bmN0aW9uKGEpe2E9Y2MoYSk7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9LGZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOndrLmZpbmRGaWJlckJ5SG9zdEluc3RhbmNlfHxcbnBrLGZpbmRIb3N0SW5zdGFuY2VzRm9yUmVmcmVzaDpudWxsLHNjaGVkdWxlUmVmcmVzaDpudWxsLHNjaGVkdWxlUm9vdDpudWxsLHNldFJlZnJlc2hIYW5kbGVyOm51bGwsZ2V0Q3VycmVudEZpYmVyOm51bGx9O2lmKFwidW5kZWZpbmVkXCIhPT10eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fKXt2YXIgeWs9X19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fO2lmKCF5ay5pc0Rpc2FibGVkJiZ5ay5zdXBwb3J0c0ZpYmVyKXRyeXtMZj15ay5pbmplY3QoeGspLE1mPXlrfWNhdGNoKGEpe319ZXhwb3J0cy5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRD12aztleHBvcnRzLmNyZWF0ZVBvcnRhbD11aztcbmV4cG9ydHMuZmluZERPTU5vZGU9ZnVuY3Rpb24oYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZigxPT09YS5ub2RlVHlwZSlyZXR1cm4gYTt2YXIgYj1hLl9yZWFjdEludGVybmFscztpZih2b2lkIDA9PT1iKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5yZW5kZXIpdGhyb3cgRXJyb3IoeSgxODgpKTt0aHJvdyBFcnJvcih5KDI2OCxPYmplY3Qua2V5cyhhKSkpO31hPWNjKGIpO2E9bnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZTtyZXR1cm4gYX07ZXhwb3J0cy5mbHVzaFN5bmM9ZnVuY3Rpb24oYSxiKXt2YXIgYz1YO2lmKDAhPT0oYyY0OCkpcmV0dXJuIGEoYik7WHw9MTt0cnl7aWYoYSlyZXR1cm4gZ2coOTksYS5iaW5kKG51bGwsYikpfWZpbmFsbHl7WD1jLGlnKCl9fTtleHBvcnRzLmh5ZHJhdGU9ZnVuY3Rpb24oYSxiLGMpe2lmKCFyayhiKSl0aHJvdyBFcnJvcih5KDIwMCkpO3JldHVybiB0ayhudWxsLGEsYiwhMCxjKX07XG5leHBvcnRzLnJlbmRlcj1mdW5jdGlvbihhLGIsYyl7aWYoIXJrKGIpKXRocm93IEVycm9yKHkoMjAwKSk7cmV0dXJuIHRrKG51bGwsYSxiLCExLGMpfTtleHBvcnRzLnVubW91bnRDb21wb25lbnRBdE5vZGU9ZnVuY3Rpb24oYSl7aWYoIXJrKGEpKXRocm93IEVycm9yKHkoNDApKTtyZXR1cm4gYS5fcmVhY3RSb290Q29udGFpbmVyPyhYaihmdW5jdGlvbigpe3RrKG51bGwsbnVsbCxhLCExLGZ1bmN0aW9uKCl7YS5fcmVhY3RSb290Q29udGFpbmVyPW51bGw7YVtmZl09bnVsbH0pfSksITApOiExfTtleHBvcnRzLnVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzPVdqO2V4cG9ydHMudW5zdGFibGVfY3JlYXRlUG9ydGFsPWZ1bmN0aW9uKGEsYil7cmV0dXJuIHVrKGEsYiwyPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06bnVsbCl9O1xuZXhwb3J0cy51bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcj1mdW5jdGlvbihhLGIsYyxkKXtpZighcmsoYykpdGhyb3cgRXJyb3IoeSgyMDApKTtpZihudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFscyl0aHJvdyBFcnJvcih5KDM4KSk7cmV0dXJuIHRrKGEsYixjLCExLGQpfTtleHBvcnRzLnZlcnNpb249XCIxNy4wLjFcIjtcbiIsIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gY2hlY2tEQ0UoKSB7XG4gIC8qIGdsb2JhbCBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gKi9cbiAgaWYgKFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gPT09ICd1bmRlZmluZWQnIHx8XG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRSAhPT0gJ2Z1bmN0aW9uJ1xuICApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBUaGlzIGJyYW5jaCBpcyB1bnJlYWNoYWJsZSBiZWNhdXNlIHRoaXMgZnVuY3Rpb24gaXMgb25seSBjYWxsZWRcbiAgICAvLyBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGNvbmRpdGlvbiBpcyB0cnVlIG9ubHkgaW4gZGV2ZWxvcG1lbnQuXG4gICAgLy8gVGhlcmVmb3JlIGlmIHRoZSBicmFuY2ggaXMgc3RpbGwgaGVyZSwgZGVhZCBjb2RlIGVsaW1pbmF0aW9uIHdhc24ndFxuICAgIC8vIHByb3Blcmx5IGFwcGxpZWQuXG4gICAgLy8gRG9uJ3QgY2hhbmdlIHRoZSBtZXNzYWdlLiBSZWFjdCBEZXZUb29scyByZWxpZXMgb24gaXQuIEFsc28gbWFrZSBzdXJlXG4gICAgLy8gdGhpcyBtZXNzYWdlIGRvZXNuJ3Qgb2NjdXIgZWxzZXdoZXJlIGluIHRoaXMgZnVuY3Rpb24sIG9yIGl0IHdpbGwgY2F1c2VcbiAgICAvLyBhIGZhbHNlIHBvc2l0aXZlLlxuICAgIHRocm93IG5ldyBFcnJvcignXl9eJyk7XG4gIH1cbiAgdHJ5IHtcbiAgICAvLyBWZXJpZnkgdGhhdCB0aGUgY29kZSBhYm92ZSBoYXMgYmVlbiBkZWFkIGNvZGUgZWxpbWluYXRlZCAoRENFJ2QpLlxuICAgIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRShjaGVja0RDRSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIERldlRvb2xzIHNob3VsZG4ndCBjcmFzaCBSZWFjdCwgbm8gbWF0dGVyIHdoYXQuXG4gICAgLy8gV2Ugc2hvdWxkIHN0aWxsIHJlcG9ydCBpbiBjYXNlIHdlIGJyZWFrIHRoaXMgY29kZS5cbiAgICBjb25zb2xlLmVycm9yKGVycik7XG4gIH1cbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgLy8gRENFIGNoZWNrIHNob3VsZCBoYXBwZW4gYmVmb3JlIFJlYWN0RE9NIGJ1bmRsZSBleGVjdXRlcyBzbyB0aGF0XG4gIC8vIERldlRvb2xzIGNhbiByZXBvcnQgYmFkIG1pbmlmaWNhdGlvbiBkdXJpbmcgaW5qZWN0aW9uLlxuICBjaGVja0RDRSgpO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20uZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qIVxuICogaG90a2V5cy1qcyB2My44LjFcbiAqIEEgc2ltcGxlIG1pY3JvLWxpYnJhcnkgZm9yIGRlZmluaW5nIGFuZCBkaXNwYXRjaGluZyBrZXlib2FyZCBzaG9ydGN1dHMuIEl0IGhhcyBubyBkZXBlbmRlbmNpZXMuXG4gKiBcbiAqIENvcHlyaWdodCAoYykgMjAyMCBrZW5ueSB3b25nIDx3b3dvaG9vQHFxLmNvbT5cbiAqIGh0dHA6Ly9qYXl3Y2psb3ZlLmdpdGh1Yi5pby9ob3RrZXlzXG4gKiBcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbiAqL1xuXG52YXIgaXNmZiA9IHR5cGVvZiBuYXZpZ2F0b3IgIT09ICd1bmRlZmluZWQnID8gbmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpLmluZGV4T2YoJ2ZpcmVmb3gnKSA+IDAgOiBmYWxzZTsgLy8g57uR5a6a5LqL5Lu2XG5cbmZ1bmN0aW9uIGFkZEV2ZW50KG9iamVjdCwgZXZlbnQsIG1ldGhvZCkge1xuICBpZiAob2JqZWN0LmFkZEV2ZW50TGlzdGVuZXIpIHtcbiAgICBvYmplY3QuYWRkRXZlbnRMaXN0ZW5lcihldmVudCwgbWV0aG9kLCBmYWxzZSk7XG4gIH0gZWxzZSBpZiAob2JqZWN0LmF0dGFjaEV2ZW50KSB7XG4gICAgb2JqZWN0LmF0dGFjaEV2ZW50KFwib25cIi5jb25jYXQoZXZlbnQpLCBmdW5jdGlvbiAoKSB7XG4gICAgICBtZXRob2Qod2luZG93LmV2ZW50KTtcbiAgICB9KTtcbiAgfVxufSAvLyDkv67ppbDplK7ovazmjaLmiJDlr7nlupTnmoTplK7noIFcblxuXG5mdW5jdGlvbiBnZXRNb2RzKG1vZGlmaWVyLCBrZXkpIHtcbiAgdmFyIG1vZHMgPSBrZXkuc2xpY2UoMCwga2V5Lmxlbmd0aCAtIDEpO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbW9kcy5sZW5ndGg7IGkrKykge1xuICAgIG1vZHNbaV0gPSBtb2RpZmllclttb2RzW2ldLnRvTG93ZXJDYXNlKCldO1xuICB9XG5cbiAgcmV0dXJuIG1vZHM7XG59IC8vIOWkhOeQhuS8oOeahGtleeWtl+espuS4sui9rOaNouaIkOaVsOe7hFxuXG5cbmZ1bmN0aW9uIGdldEtleXMoa2V5KSB7XG4gIGlmICh0eXBlb2Yga2V5ICE9PSAnc3RyaW5nJykga2V5ID0gJyc7XG4gIGtleSA9IGtleS5yZXBsYWNlKC9cXHMvZywgJycpOyAvLyDljLnphY3ku7vkvZXnqbrnmb3lrZfnrKYs5YyF5ous56m65qC844CB5Yi26KGo56ym44CB5o2i6aG156ym562J562JXG5cbiAgdmFyIGtleXMgPSBrZXkuc3BsaXQoJywnKTsgLy8g5ZCM5pe26K6+572u5aSa5Liq5b+r5o236ZSu77yM5LulJywn5YiG5YmyXG5cbiAgdmFyIGluZGV4ID0ga2V5cy5sYXN0SW5kZXhPZignJyk7IC8vIOW/q+aNt+mUruWPr+iDveWMheWQqycsJ++8jOmcgOeJueauiuWkhOeQhlxuXG4gIGZvciAoOyBpbmRleCA+PSAwOykge1xuICAgIGtleXNbaW5kZXggLSAxXSArPSAnLCc7XG4gICAga2V5cy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgIGluZGV4ID0ga2V5cy5sYXN0SW5kZXhPZignJyk7XG4gIH1cblxuICByZXR1cm4ga2V5cztcbn0gLy8g5q+U6L6D5L+u6aWw6ZSu55qE5pWw57uEXG5cblxuZnVuY3Rpb24gY29tcGFyZUFycmF5KGExLCBhMikge1xuICB2YXIgYXJyMSA9IGExLmxlbmd0aCA+PSBhMi5sZW5ndGggPyBhMSA6IGEyO1xuICB2YXIgYXJyMiA9IGExLmxlbmd0aCA+PSBhMi5sZW5ndGggPyBhMiA6IGExO1xuICB2YXIgaXNJbmRleCA9IHRydWU7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcnIxLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKGFycjIuaW5kZXhPZihhcnIxW2ldKSA9PT0gLTEpIGlzSW5kZXggPSBmYWxzZTtcbiAgfVxuXG4gIHJldHVybiBpc0luZGV4O1xufVxuXG52YXIgX2tleU1hcCA9IHtcbiAgYmFja3NwYWNlOiA4LFxuICB0YWI6IDksXG4gIGNsZWFyOiAxMixcbiAgZW50ZXI6IDEzLFxuICByZXR1cm46IDEzLFxuICBlc2M6IDI3LFxuICBlc2NhcGU6IDI3LFxuICBzcGFjZTogMzIsXG4gIGxlZnQ6IDM3LFxuICB1cDogMzgsXG4gIHJpZ2h0OiAzOSxcbiAgZG93bjogNDAsXG4gIGRlbDogNDYsXG4gIGRlbGV0ZTogNDYsXG4gIGluczogNDUsXG4gIGluc2VydDogNDUsXG4gIGhvbWU6IDM2LFxuICBlbmQ6IDM1LFxuICBwYWdldXA6IDMzLFxuICBwYWdlZG93bjogMzQsXG4gIGNhcHNsb2NrOiAyMCxcbiAgJ+KHqic6IDIwLFxuICAnLCc6IDE4OCxcbiAgJy4nOiAxOTAsXG4gICcvJzogMTkxLFxuICAnYCc6IDE5MixcbiAgJy0nOiBpc2ZmID8gMTczIDogMTg5LFxuICAnPSc6IGlzZmYgPyA2MSA6IDE4NyxcbiAgJzsnOiBpc2ZmID8gNTkgOiAxODYsXG4gICdcXCcnOiAyMjIsXG4gICdbJzogMjE5LFxuICAnXSc6IDIyMSxcbiAgJ1xcXFwnOiAyMjBcbn07IC8vIE1vZGlmaWVyIEtleXNcblxudmFyIF9tb2RpZmllciA9IHtcbiAgLy8gc2hpZnRLZXlcbiAgJ+KHpyc6IDE2LFxuICBzaGlmdDogMTYsXG4gIC8vIGFsdEtleVxuICAn4oylJzogMTgsXG4gIGFsdDogMTgsXG4gIG9wdGlvbjogMTgsXG4gIC8vIGN0cmxLZXlcbiAgJ+KMgyc6IDE3LFxuICBjdHJsOiAxNyxcbiAgY29udHJvbDogMTcsXG4gIC8vIG1ldGFLZXlcbiAgJ+KMmCc6IDkxLFxuICBjbWQ6IDkxLFxuICBjb21tYW5kOiA5MVxufTtcbnZhciBtb2RpZmllck1hcCA9IHtcbiAgMTY6ICdzaGlmdEtleScsXG4gIDE4OiAnYWx0S2V5JyxcbiAgMTc6ICdjdHJsS2V5JyxcbiAgOTE6ICdtZXRhS2V5JyxcbiAgc2hpZnRLZXk6IDE2LFxuICBjdHJsS2V5OiAxNyxcbiAgYWx0S2V5OiAxOCxcbiAgbWV0YUtleTogOTFcbn07XG52YXIgX21vZHMgPSB7XG4gIDE2OiBmYWxzZSxcbiAgMTg6IGZhbHNlLFxuICAxNzogZmFsc2UsXG4gIDkxOiBmYWxzZVxufTtcbnZhciBfaGFuZGxlcnMgPSB7fTsgLy8gRjF+RjEyIHNwZWNpYWwga2V5XG5cbmZvciAodmFyIGsgPSAxOyBrIDwgMjA7IGsrKykge1xuICBfa2V5TWFwW1wiZlwiLmNvbmNhdChrKV0gPSAxMTEgKyBrO1xufVxuXG52YXIgX2Rvd25LZXlzID0gW107IC8vIOiusOW9leaRgeS4i+eahOe7keWumumUrlxuXG52YXIgX3Njb3BlID0gJ2FsbCc7IC8vIOm7mOiupOeDremUruiMg+WbtFxuXG52YXIgZWxlbWVudEhhc0JpbmRFdmVudCA9IFtdOyAvLyDlt7Lnu5Hlrprkuovku7bnmoToioLngrnorrDlvZVcbi8vIOi/lOWbnumUrueggVxuXG52YXIgY29kZSA9IGZ1bmN0aW9uIGNvZGUoeCkge1xuICByZXR1cm4gX2tleU1hcFt4LnRvTG93ZXJDYXNlKCldIHx8IF9tb2RpZmllclt4LnRvTG93ZXJDYXNlKCldIHx8IHgudG9VcHBlckNhc2UoKS5jaGFyQ29kZUF0KDApO1xufTsgLy8g6K6+572u6I635Y+W5b2T5YmN6IyD5Zu077yI6buY6K6k5Li6J+aJgOaciSfvvIlcblxuXG5mdW5jdGlvbiBzZXRTY29wZShzY29wZSkge1xuICBfc2NvcGUgPSBzY29wZSB8fCAnYWxsJztcbn0gLy8g6I635Y+W5b2T5YmN6IyD5Zu0XG5cblxuZnVuY3Rpb24gZ2V0U2NvcGUoKSB7XG4gIHJldHVybiBfc2NvcGUgfHwgJ2FsbCc7XG59IC8vIOiOt+WPluaRgeS4i+e7keWumumUrueahOmUruWAvFxuXG5cbmZ1bmN0aW9uIGdldFByZXNzZWRLZXlDb2RlcygpIHtcbiAgcmV0dXJuIF9kb3duS2V5cy5zbGljZSgwKTtcbn0gLy8g6KGo5Y2V5o6n5Lu25o6n5Lu25Yik5patIOi/lOWbniBCb29sZWFuXG4vLyBob3RrZXkgaXMgZWZmZWN0aXZlIG9ubHkgd2hlbiBmaWx0ZXIgcmV0dXJuIHRydWVcblxuXG5mdW5jdGlvbiBmaWx0ZXIoZXZlbnQpIHtcbiAgdmFyIHRhcmdldCA9IGV2ZW50LnRhcmdldCB8fCBldmVudC5zcmNFbGVtZW50O1xuICB2YXIgdGFnTmFtZSA9IHRhcmdldC50YWdOYW1lO1xuICB2YXIgZmxhZyA9IHRydWU7IC8vIGlnbm9yZTogaXNDb250ZW50RWRpdGFibGUgPT09ICd0cnVlJywgPGlucHV0PiBhbmQgPHRleHRhcmVhPiB3aGVuIHJlYWRPbmx5IHN0YXRlIGlzIGZhbHNlLCA8c2VsZWN0PlxuXG4gIGlmICh0YXJnZXQuaXNDb250ZW50RWRpdGFibGUgfHwgKHRhZ05hbWUgPT09ICdJTlBVVCcgfHwgdGFnTmFtZSA9PT0gJ1RFWFRBUkVBJyB8fCB0YWdOYW1lID09PSAnU0VMRUNUJykgJiYgIXRhcmdldC5yZWFkT25seSkge1xuICAgIGZsYWcgPSBmYWxzZTtcbiAgfVxuXG4gIHJldHVybiBmbGFnO1xufSAvLyDliKTmlq3mkYHkuIvnmoTplK7mmK/lkKbkuLrmn5DkuKrplK7vvIzov5Tlm550cnVl5oiW6ICFZmFsc2VcblxuXG5mdW5jdGlvbiBpc1ByZXNzZWQoa2V5Q29kZSkge1xuICBpZiAodHlwZW9mIGtleUNvZGUgPT09ICdzdHJpbmcnKSB7XG4gICAga2V5Q29kZSA9IGNvZGUoa2V5Q29kZSk7IC8vIOi9rOaNouaIkOmUrueggVxuICB9XG5cbiAgcmV0dXJuIF9kb3duS2V5cy5pbmRleE9mKGtleUNvZGUpICE9PSAtMTtcbn0gLy8g5b6q546v5Yig6ZmkaGFuZGxlcnPkuK3nmoTmiYDmnIkgc2NvcGUo6IyD5Zu0KVxuXG5cbmZ1bmN0aW9uIGRlbGV0ZVNjb3BlKHNjb3BlLCBuZXdTY29wZSkge1xuICB2YXIgaGFuZGxlcnM7XG4gIHZhciBpOyAvLyDmsqHmnInmjIflrppzY29wZe+8jOiOt+WPlnNjb3BlXG5cbiAgaWYgKCFzY29wZSkgc2NvcGUgPSBnZXRTY29wZSgpO1xuXG4gIGZvciAodmFyIGtleSBpbiBfaGFuZGxlcnMpIHtcbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKF9oYW5kbGVycywga2V5KSkge1xuICAgICAgaGFuZGxlcnMgPSBfaGFuZGxlcnNba2V5XTtcblxuICAgICAgZm9yIChpID0gMDsgaSA8IGhhbmRsZXJzLmxlbmd0aDspIHtcbiAgICAgICAgaWYgKGhhbmRsZXJzW2ldLnNjb3BlID09PSBzY29wZSkgaGFuZGxlcnMuc3BsaWNlKGksIDEpO2Vsc2UgaSsrO1xuICAgICAgfVxuICAgIH1cbiAgfSAvLyDlpoLmnpxzY29wZeiiq+WIoOmZpO+8jOWwhnNjb3Bl6YeN572u5Li6YWxsXG5cblxuICBpZiAoZ2V0U2NvcGUoKSA9PT0gc2NvcGUpIHNldFNjb3BlKG5ld1Njb3BlIHx8ICdhbGwnKTtcbn0gLy8g5riF6Zmk5L+u6aWw6ZSuXG5cblxuZnVuY3Rpb24gY2xlYXJNb2RpZmllcihldmVudCkge1xuICB2YXIga2V5ID0gZXZlbnQua2V5Q29kZSB8fCBldmVudC53aGljaCB8fCBldmVudC5jaGFyQ29kZTtcblxuICB2YXIgaSA9IF9kb3duS2V5cy5pbmRleE9mKGtleSk7IC8vIOS7juWIl+ihqOS4rea4hemZpOaMieWOi+i/h+eahOmUrlxuXG5cbiAgaWYgKGkgPj0gMCkge1xuICAgIF9kb3duS2V5cy5zcGxpY2UoaSwgMSk7XG4gIH0gLy8g54m55q6K5aSE55CGIGNtbWFuZCDplK7vvIzlnKggY21tYW5kIOe7hOWQiOW/q+aNt+mUriBrZXl1cCDlj6rmiafooYzkuIDmrKHnmoTpl67pophcblxuXG4gIGlmIChldmVudC5rZXkgJiYgZXZlbnQua2V5LnRvTG93ZXJDYXNlKCkgPT09ICdtZXRhJykge1xuICAgIF9kb3duS2V5cy5zcGxpY2UoMCwgX2Rvd25LZXlzLmxlbmd0aCk7XG4gIH0gLy8g5L+u6aWw6ZSuIHNoaWZ0S2V5IGFsdEtleSBjdHJsS2V5IChjb21tYW5kfHxtZXRhS2V5KSDmuIXpmaRcblxuXG4gIGlmIChrZXkgPT09IDkzIHx8IGtleSA9PT0gMjI0KSBrZXkgPSA5MTtcblxuICBpZiAoa2V5IGluIF9tb2RzKSB7XG4gICAgX21vZHNba2V5XSA9IGZhbHNlOyAvLyDlsIbkv67ppbDplK7ph43nva7kuLpmYWxzZVxuXG4gICAgZm9yICh2YXIgayBpbiBfbW9kaWZpZXIpIHtcbiAgICAgIGlmIChfbW9kaWZpZXJba10gPT09IGtleSkgaG90a2V5c1trXSA9IGZhbHNlO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiB1bmJpbmQoa2V5c0luZm8pIHtcbiAgLy8gdW5iaW5kKCksIHVuYmluZCBhbGwga2V5c1xuICBpZiAoIWtleXNJbmZvKSB7XG4gICAgT2JqZWN0LmtleXMoX2hhbmRsZXJzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgIHJldHVybiBkZWxldGUgX2hhbmRsZXJzW2tleV07XG4gICAgfSk7XG4gIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShrZXlzSW5mbykpIHtcbiAgICAvLyBzdXBwb3J0IGxpa2UgOiB1bmJpbmQoW3trZXk6ICdjdHJsK2EnLCBzY29wZTogJ3MxJ30sIHtrZXk6ICdjdHJsLWEnLCBzY29wZTogJ3MyJywgc3BsaXRLZXk6ICctJ31dKVxuICAgIGtleXNJbmZvLmZvckVhY2goZnVuY3Rpb24gKGluZm8pIHtcbiAgICAgIGlmIChpbmZvLmtleSkgZWFjaFVuYmluZChpbmZvKTtcbiAgICB9KTtcbiAgfSBlbHNlIGlmICh0eXBlb2Yga2V5c0luZm8gPT09ICdvYmplY3QnKSB7XG4gICAgLy8gc3VwcG9ydCBsaWtlIHVuYmluZCh7a2V5OiAnY3RybCthLCBjdHJsK2InLCBzY29wZTonYWJjJ30pXG4gICAgaWYgKGtleXNJbmZvLmtleSkgZWFjaFVuYmluZChrZXlzSW5mbyk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIGtleXNJbmZvID09PSAnc3RyaW5nJykge1xuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4gPiAxID8gX2xlbiAtIDEgOiAwKSwgX2tleSA9IDE7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleSAtIDFdID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIC8vIHN1cHBvcnQgb2xkIG1ldGhvZFxuICAgIC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgICB2YXIgc2NvcGUgPSBhcmdzWzBdLFxuICAgICAgICBtZXRob2QgPSBhcmdzWzFdO1xuXG4gICAgaWYgKHR5cGVvZiBzY29wZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgbWV0aG9kID0gc2NvcGU7XG4gICAgICBzY29wZSA9ICcnO1xuICAgIH1cblxuICAgIGVhY2hVbmJpbmQoe1xuICAgICAga2V5OiBrZXlzSW5mbyxcbiAgICAgIHNjb3BlOiBzY29wZSxcbiAgICAgIG1ldGhvZDogbWV0aG9kLFxuICAgICAgc3BsaXRLZXk6ICcrJ1xuICAgIH0pO1xuICB9XG59IC8vIOino+mZpOe7keWumuafkOS4quiMg+WbtOeahOW/q+aNt+mUrlxuXG5cbnZhciBlYWNoVW5iaW5kID0gZnVuY3Rpb24gZWFjaFVuYmluZChfcmVmKSB7XG4gIHZhciBrZXkgPSBfcmVmLmtleSxcbiAgICAgIHNjb3BlID0gX3JlZi5zY29wZSxcbiAgICAgIG1ldGhvZCA9IF9yZWYubWV0aG9kLFxuICAgICAgX3JlZiRzcGxpdEtleSA9IF9yZWYuc3BsaXRLZXksXG4gICAgICBzcGxpdEtleSA9IF9yZWYkc3BsaXRLZXkgPT09IHZvaWQgMCA/ICcrJyA6IF9yZWYkc3BsaXRLZXk7XG4gIHZhciBtdWx0aXBsZUtleXMgPSBnZXRLZXlzKGtleSk7XG4gIG11bHRpcGxlS2V5cy5mb3JFYWNoKGZ1bmN0aW9uIChvcmlnaW5LZXkpIHtcbiAgICB2YXIgdW5iaW5kS2V5cyA9IG9yaWdpbktleS5zcGxpdChzcGxpdEtleSk7XG4gICAgdmFyIGxlbiA9IHVuYmluZEtleXMubGVuZ3RoO1xuICAgIHZhciBsYXN0S2V5ID0gdW5iaW5kS2V5c1tsZW4gLSAxXTtcbiAgICB2YXIga2V5Q29kZSA9IGxhc3RLZXkgPT09ICcqJyA/ICcqJyA6IGNvZGUobGFzdEtleSk7XG4gICAgaWYgKCFfaGFuZGxlcnNba2V5Q29kZV0pIHJldHVybjsgLy8g5Yik5pat5piv5ZCm5Lyg5YWl6IyD5Zu077yM5rKh5pyJ5bCx6I635Y+W6IyD5Zu0XG5cbiAgICBpZiAoIXNjb3BlKSBzY29wZSA9IGdldFNjb3BlKCk7XG4gICAgdmFyIG1vZHMgPSBsZW4gPiAxID8gZ2V0TW9kcyhfbW9kaWZpZXIsIHVuYmluZEtleXMpIDogW107XG4gICAgX2hhbmRsZXJzW2tleUNvZGVdID0gX2hhbmRsZXJzW2tleUNvZGVdLm1hcChmdW5jdGlvbiAocmVjb3JkKSB7XG4gICAgICAvLyDpgJrov4flh73mlbDliKTmlq3vvIzmmK/lkKbop6PpmaTnu5HlrprvvIzlh73mlbDnm7jnrYnnm7TmjqXov5Tlm55cbiAgICAgIHZhciBpc01hdGNoaW5nTWV0aG9kID0gbWV0aG9kID8gcmVjb3JkLm1ldGhvZCA9PT0gbWV0aG9kIDogdHJ1ZTtcblxuICAgICAgaWYgKGlzTWF0Y2hpbmdNZXRob2QgJiYgcmVjb3JkLnNjb3BlID09PSBzY29wZSAmJiBjb21wYXJlQXJyYXkocmVjb3JkLm1vZHMsIG1vZHMpKSB7XG4gICAgICAgIHJldHVybiB7fTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHJlY29yZDtcbiAgICB9KTtcbiAgfSk7XG59OyAvLyDlr7nnm5HlkKzlr7nlupTlv6vmjbfplK7nmoTlm57osIPlh73mlbDov5vooYzlpITnkIZcblxuXG5mdW5jdGlvbiBldmVudEhhbmRsZXIoZXZlbnQsIGhhbmRsZXIsIHNjb3BlKSB7XG4gIHZhciBtb2RpZmllcnNNYXRjaDsgLy8g55yL5a6D5piv5ZCm5Zyo5b2T5YmN6IyD5Zu0XG5cbiAgaWYgKGhhbmRsZXIuc2NvcGUgPT09IHNjb3BlIHx8IGhhbmRsZXIuc2NvcGUgPT09ICdhbGwnKSB7XG4gICAgLy8g5qOA5p+l5piv5ZCm5Yy56YWN5L+u6aWw56ym77yI5aaC5p6c5pyJ6L+U5ZuedHJ1Ze+8iVxuICAgIG1vZGlmaWVyc01hdGNoID0gaGFuZGxlci5tb2RzLmxlbmd0aCA+IDA7XG5cbiAgICBmb3IgKHZhciB5IGluIF9tb2RzKSB7XG4gICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKF9tb2RzLCB5KSkge1xuICAgICAgICBpZiAoIV9tb2RzW3ldICYmIGhhbmRsZXIubW9kcy5pbmRleE9mKCt5KSA+IC0xIHx8IF9tb2RzW3ldICYmIGhhbmRsZXIubW9kcy5pbmRleE9mKCt5KSA9PT0gLTEpIHtcbiAgICAgICAgICBtb2RpZmllcnNNYXRjaCA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSAvLyDosIPnlKjlpITnkIbnqIvluo/vvIzlpoLmnpzmmK/kv67ppbDplK7kuI3lgZrlpITnkIZcblxuXG4gICAgaWYgKGhhbmRsZXIubW9kcy5sZW5ndGggPT09IDAgJiYgIV9tb2RzWzE2XSAmJiAhX21vZHNbMThdICYmICFfbW9kc1sxN10gJiYgIV9tb2RzWzkxXSB8fCBtb2RpZmllcnNNYXRjaCB8fCBoYW5kbGVyLnNob3J0Y3V0ID09PSAnKicpIHtcbiAgICAgIGlmIChoYW5kbGVyLm1ldGhvZChldmVudCwgaGFuZGxlcikgPT09IGZhbHNlKSB7XG4gICAgICAgIGlmIChldmVudC5wcmV2ZW50RGVmYXVsdCkgZXZlbnQucHJldmVudERlZmF1bHQoKTtlbHNlIGV2ZW50LnJldHVyblZhbHVlID0gZmFsc2U7XG4gICAgICAgIGlmIChldmVudC5zdG9wUHJvcGFnYXRpb24pIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICBpZiAoZXZlbnQuY2FuY2VsQnViYmxlKSBldmVudC5jYW5jZWxCdWJibGUgPSB0cnVlO1xuICAgICAgfVxuICAgIH1cbiAgfVxufSAvLyDlpITnkIZrZXlkb3du5LqL5Lu2XG5cblxuZnVuY3Rpb24gZGlzcGF0Y2goZXZlbnQpIHtcbiAgdmFyIGFzdGVyaXNrID0gX2hhbmRsZXJzWycqJ107XG4gIHZhciBrZXkgPSBldmVudC5rZXlDb2RlIHx8IGV2ZW50LndoaWNoIHx8IGV2ZW50LmNoYXJDb2RlOyAvLyDooajljZXmjqfku7bov4fmu6Qg6buY6K6k6KGo5Y2V5o6n5Lu25LiN6Kem5Y+R5b+r5o236ZSuXG5cbiAgaWYgKCFob3RrZXlzLmZpbHRlci5jYWxsKHRoaXMsIGV2ZW50KSkgcmV0dXJuOyAvLyBHZWNrbyhGaXJlZm94KeeahGNvbW1hbmTplK7lgLwyMjTvvIzlnKhXZWJraXQoQ2hyb21lKeS4reS/neaMgeS4gOiHtFxuICAvLyBXZWJraXTlt6blj7MgY29tbWFuZCDplK7lgLzkuI3kuIDmoLdcblxuICBpZiAoa2V5ID09PSA5MyB8fCBrZXkgPT09IDIyNCkga2V5ID0gOTE7XG4gIC8qKlxuICAgKiBDb2xsZWN0IGJvdW5kIGtleXNcbiAgICogSWYgYW4gSW5wdXQgTWV0aG9kIEVkaXRvciBpcyBwcm9jZXNzaW5nIGtleSBpbnB1dCBhbmQgdGhlIGV2ZW50IGlzIGtleWRvd24sIHJldHVybiAyMjkuXG4gICAqIGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzI1MDQzOTM0L2lzLWl0LW9rLXRvLWlnbm9yZS1rZXlkb3duLWV2ZW50cy13aXRoLWtleWNvZGUtMjI5XG4gICAqIGh0dHA6Ly9saXN0cy53My5vcmcvQXJjaGl2ZXMvUHVibGljL3d3dy1kb20vMjAxMEp1bFNlcC9hdHQtMDE4Mi9rZXlDb2RlLXNwZWMuaHRtbFxuICAgKi9cblxuICBpZiAoX2Rvd25LZXlzLmluZGV4T2Yoa2V5KSA9PT0gLTEgJiYga2V5ICE9PSAyMjkpIF9kb3duS2V5cy5wdXNoKGtleSk7XG4gIC8qKlxuICAgKiBKZXN0IHRlc3QgY2FzZXMgYXJlIHJlcXVpcmVkLlxuICAgKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAqL1xuXG4gIFsnY3RybEtleScsICdhbHRLZXknLCAnc2hpZnRLZXknLCAnbWV0YUtleSddLmZvckVhY2goZnVuY3Rpb24gKGtleU5hbWUpIHtcbiAgICB2YXIga2V5TnVtID0gbW9kaWZpZXJNYXBba2V5TmFtZV07XG5cbiAgICBpZiAoZXZlbnRba2V5TmFtZV0gJiYgX2Rvd25LZXlzLmluZGV4T2Yoa2V5TnVtKSA9PT0gLTEpIHtcbiAgICAgIF9kb3duS2V5cy5wdXNoKGtleU51bSk7XG4gICAgfSBlbHNlIGlmICghZXZlbnRba2V5TmFtZV0gJiYgX2Rvd25LZXlzLmluZGV4T2Yoa2V5TnVtKSA+IC0xKSB7XG4gICAgICBfZG93bktleXMuc3BsaWNlKF9kb3duS2V5cy5pbmRleE9mKGtleU51bSksIDEpO1xuICAgIH0gZWxzZSBpZiAoa2V5TmFtZSA9PT0gJ21ldGFLZXknICYmIGV2ZW50W2tleU5hbWVdICYmIF9kb3duS2V5cy5sZW5ndGggPT09IDMpIHtcbiAgICAgIC8qKlxuICAgICAgICogRml4IGlmIENvbW1hbmQgaXMgcHJlc3NlZDpcbiAgICAgICAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAgICAqL1xuICAgICAgaWYgKCEoZXZlbnQuY3RybEtleSB8fCBldmVudC5zaGlmdEtleSB8fCBldmVudC5hbHRLZXkpKSB7XG4gICAgICAgIF9kb3duS2V5cyA9IF9kb3duS2V5cy5zbGljZShfZG93bktleXMuaW5kZXhPZihrZXlOdW0pKTtcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xuICAvKipcbiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgKi9cblxuICBpZiAoa2V5IGluIF9tb2RzKSB7XG4gICAgX21vZHNba2V5XSA9IHRydWU7IC8vIOWwhueJueauiuWtl+espueahGtleeazqOWGjOWIsCBob3RrZXlzIOS4ilxuXG4gICAgZm9yICh2YXIgayBpbiBfbW9kaWZpZXIpIHtcbiAgICAgIGlmIChfbW9kaWZpZXJba10gPT09IGtleSkgaG90a2V5c1trXSA9IHRydWU7XG4gICAgfVxuXG4gICAgaWYgKCFhc3RlcmlzaykgcmV0dXJuO1xuICB9IC8vIOWwhiBtb2RpZmllck1hcCDph4zpnaLnmoTkv67ppbDplK7nu5HlrprliLAgZXZlbnQg5LitXG5cblxuICBmb3IgKHZhciBlIGluIF9tb2RzKSB7XG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChfbW9kcywgZSkpIHtcbiAgICAgIF9tb2RzW2VdID0gZXZlbnRbbW9kaWZpZXJNYXBbZV1dO1xuICAgIH1cbiAgfVxuICAvKipcbiAgICogaHR0cHM6Ly9naXRodWIuY29tL2pheXdjamxvdmUvaG90a2V5cy9wdWxsLzEyOVxuICAgKiBUaGlzIHNvbHZlcyB0aGUgaXNzdWUgaW4gRmlyZWZveCBvbiBXaW5kb3dzIHdoZXJlIGhvdGtleXMgY29ycmVzcG9uZGluZyB0byBzcGVjaWFsIGNoYXJhY3RlcnMgd291bGQgbm90IHRyaWdnZXIuXG4gICAqIEFuIGV4YW1wbGUgb2YgdGhpcyBpcyBjdHJsK2FsdCttIG9uIGEgU3dlZGlzaCBrZXlib2FyZCB3aGljaCBpcyB1c2VkIHRvIHR5cGUgzrwuXG4gICAqIEJyb3dzZXIgc3VwcG9ydDogaHR0cHM6Ly9jYW5pdXNlLmNvbS8jZmVhdD1rZXlib2FyZGV2ZW50LWdldG1vZGlmaWVyc3RhdGVcbiAgICovXG5cblxuICBpZiAoZXZlbnQuZ2V0TW9kaWZpZXJTdGF0ZSAmJiAhKGV2ZW50LmFsdEtleSAmJiAhZXZlbnQuY3RybEtleSkgJiYgZXZlbnQuZ2V0TW9kaWZpZXJTdGF0ZSgnQWx0R3JhcGgnKSkge1xuICAgIGlmIChfZG93bktleXMuaW5kZXhPZigxNykgPT09IC0xKSB7XG4gICAgICBfZG93bktleXMucHVzaCgxNyk7XG4gICAgfVxuXG4gICAgaWYgKF9kb3duS2V5cy5pbmRleE9mKDE4KSA9PT0gLTEpIHtcbiAgICAgIF9kb3duS2V5cy5wdXNoKDE4KTtcbiAgICB9XG5cbiAgICBfbW9kc1sxN10gPSB0cnVlO1xuICAgIF9tb2RzWzE4XSA9IHRydWU7XG4gIH0gLy8g6I635Y+W6IyD5Zu0IOm7mOiupOS4uiBgYWxsYFxuXG5cbiAgdmFyIHNjb3BlID0gZ2V0U2NvcGUoKTsgLy8g5a+55Lu75L2V5b+r5o236ZSu6YO96ZyA6KaB5YGa55qE5aSE55CGXG5cbiAgaWYgKGFzdGVyaXNrKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhc3Rlcmlzay5sZW5ndGg7IGkrKykge1xuICAgICAgaWYgKGFzdGVyaXNrW2ldLnNjb3BlID09PSBzY29wZSAmJiAoZXZlbnQudHlwZSA9PT0gJ2tleWRvd24nICYmIGFzdGVyaXNrW2ldLmtleWRvd24gfHwgZXZlbnQudHlwZSA9PT0gJ2tleXVwJyAmJiBhc3Rlcmlza1tpXS5rZXl1cCkpIHtcbiAgICAgICAgZXZlbnRIYW5kbGVyKGV2ZW50LCBhc3Rlcmlza1tpXSwgc2NvcGUpO1xuICAgICAgfVxuICAgIH1cbiAgfSAvLyBrZXkg5LiN5ZyoIF9oYW5kbGVycyDkuK3ov5Tlm55cblxuXG4gIGlmICghKGtleSBpbiBfaGFuZGxlcnMpKSByZXR1cm47XG5cbiAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IF9oYW5kbGVyc1trZXldLmxlbmd0aDsgX2krKykge1xuICAgIGlmIChldmVudC50eXBlID09PSAna2V5ZG93bicgJiYgX2hhbmRsZXJzW2tleV1bX2ldLmtleWRvd24gfHwgZXZlbnQudHlwZSA9PT0gJ2tleXVwJyAmJiBfaGFuZGxlcnNba2V5XVtfaV0ua2V5dXApIHtcbiAgICAgIGlmIChfaGFuZGxlcnNba2V5XVtfaV0ua2V5KSB7XG4gICAgICAgIHZhciByZWNvcmQgPSBfaGFuZGxlcnNba2V5XVtfaV07XG4gICAgICAgIHZhciBzcGxpdEtleSA9IHJlY29yZC5zcGxpdEtleTtcbiAgICAgICAgdmFyIGtleVNob3J0Y3V0ID0gcmVjb3JkLmtleS5zcGxpdChzcGxpdEtleSk7XG4gICAgICAgIHZhciBfZG93bktleXNDdXJyZW50ID0gW107IC8vIOiusOW9leW9k+WJjeaMiemUrumUruWAvFxuXG4gICAgICAgIGZvciAodmFyIGEgPSAwOyBhIDwga2V5U2hvcnRjdXQubGVuZ3RoOyBhKyspIHtcbiAgICAgICAgICBfZG93bktleXNDdXJyZW50LnB1c2goY29kZShrZXlTaG9ydGN1dFthXSkpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKF9kb3duS2V5c0N1cnJlbnQuc29ydCgpLmpvaW4oJycpID09PSBfZG93bktleXMuc29ydCgpLmpvaW4oJycpKSB7XG4gICAgICAgICAgLy8g5om+5Yiw5aSE55CG5YaF5a65XG4gICAgICAgICAgZXZlbnRIYW5kbGVyKGV2ZW50LCByZWNvcmQsIHNjb3BlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufSAvLyDliKTmlq0gZWxlbWVudCDmmK/lkKblt7Lnu4/nu5Hlrprkuovku7ZcblxuXG5mdW5jdGlvbiBpc0VsZW1lbnRCaW5kKGVsZW1lbnQpIHtcbiAgcmV0dXJuIGVsZW1lbnRIYXNCaW5kRXZlbnQuaW5kZXhPZihlbGVtZW50KSA+IC0xO1xufVxuXG5mdW5jdGlvbiBob3RrZXlzKGtleSwgb3B0aW9uLCBtZXRob2QpIHtcbiAgX2Rvd25LZXlzID0gW107XG4gIHZhciBrZXlzID0gZ2V0S2V5cyhrZXkpOyAvLyDpnIDopoHlpITnkIbnmoTlv6vmjbfplK7liJfooahcblxuICB2YXIgbW9kcyA9IFtdO1xuICB2YXIgc2NvcGUgPSAnYWxsJzsgLy8gc2NvcGXpu5jorqTkuLphbGzvvIzmiYDmnInojIPlm7Tpg73mnInmlYhcblxuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50OyAvLyDlv6vmjbfplK7kuovku7bnu5HlrproioLngrlcblxuICB2YXIgaSA9IDA7XG4gIHZhciBrZXl1cCA9IGZhbHNlO1xuICB2YXIga2V5ZG93biA9IHRydWU7XG4gIHZhciBzcGxpdEtleSA9ICcrJzsgLy8g5a+55Li66K6+5a6a6IyD5Zu055qE5Yik5patXG5cbiAgaWYgKG1ldGhvZCA9PT0gdW5kZWZpbmVkICYmIHR5cGVvZiBvcHRpb24gPT09ICdmdW5jdGlvbicpIHtcbiAgICBtZXRob2QgPSBvcHRpb247XG4gIH1cblxuICBpZiAoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG9wdGlvbikgPT09ICdbb2JqZWN0IE9iamVjdF0nKSB7XG4gICAgaWYgKG9wdGlvbi5zY29wZSkgc2NvcGUgPSBvcHRpb24uc2NvcGU7IC8vIGVzbGludC1kaXNhYmxlLWxpbmVcblxuICAgIGlmIChvcHRpb24uZWxlbWVudCkgZWxlbWVudCA9IG9wdGlvbi5lbGVtZW50OyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG5cbiAgICBpZiAob3B0aW9uLmtleXVwKSBrZXl1cCA9IG9wdGlvbi5rZXl1cDsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuXG4gICAgaWYgKG9wdGlvbi5rZXlkb3duICE9PSB1bmRlZmluZWQpIGtleWRvd24gPSBvcHRpb24ua2V5ZG93bjsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuXG4gICAgaWYgKHR5cGVvZiBvcHRpb24uc3BsaXRLZXkgPT09ICdzdHJpbmcnKSBzcGxpdEtleSA9IG9wdGlvbi5zcGxpdEtleTsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICB9XG5cbiAgaWYgKHR5cGVvZiBvcHRpb24gPT09ICdzdHJpbmcnKSBzY29wZSA9IG9wdGlvbjsgLy8g5a+55LqO5q+P5Liq5b+r5o236ZSu6L+b6KGM5aSE55CGXG5cbiAgZm9yICg7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAga2V5ID0ga2V5c1tpXS5zcGxpdChzcGxpdEtleSk7IC8vIOaMiemUruWIl+ihqFxuXG4gICAgbW9kcyA9IFtdOyAvLyDlpoLmnpzmmK/nu4TlkIjlv6vmjbfplK7lj5blvpfnu4TlkIjlv6vmjbfplK5cblxuICAgIGlmIChrZXkubGVuZ3RoID4gMSkgbW9kcyA9IGdldE1vZHMoX21vZGlmaWVyLCBrZXkpOyAvLyDlsIbpnZ7kv67ppbDplK7ovazljJbkuLrplK7noIFcblxuICAgIGtleSA9IGtleVtrZXkubGVuZ3RoIC0gMV07XG4gICAga2V5ID0ga2V5ID09PSAnKicgPyAnKicgOiBjb2RlKGtleSk7IC8vICrooajnpLrljLnphY3miYDmnInlv6vmjbfplK5cbiAgICAvLyDliKTmlq1rZXnmmK/lkKblnKhfaGFuZGxlcnPkuK3vvIzkuI3lnKjlsLHotYvkuIDkuKrnqbrmlbDnu4RcblxuICAgIGlmICghKGtleSBpbiBfaGFuZGxlcnMpKSBfaGFuZGxlcnNba2V5XSA9IFtdO1xuXG4gICAgX2hhbmRsZXJzW2tleV0ucHVzaCh7XG4gICAgICBrZXl1cDoga2V5dXAsXG4gICAgICBrZXlkb3duOiBrZXlkb3duLFxuICAgICAgc2NvcGU6IHNjb3BlLFxuICAgICAgbW9kczogbW9kcyxcbiAgICAgIHNob3J0Y3V0OiBrZXlzW2ldLFxuICAgICAgbWV0aG9kOiBtZXRob2QsXG4gICAgICBrZXk6IGtleXNbaV0sXG4gICAgICBzcGxpdEtleTogc3BsaXRLZXlcbiAgICB9KTtcbiAgfSAvLyDlnKjlhajlsYBkb2N1bWVudOS4iuiuvue9ruW/q+aNt+mUrlxuXG5cbiAgaWYgKHR5cGVvZiBlbGVtZW50ICE9PSAndW5kZWZpbmVkJyAmJiAhaXNFbGVtZW50QmluZChlbGVtZW50KSAmJiB3aW5kb3cpIHtcbiAgICBlbGVtZW50SGFzQmluZEV2ZW50LnB1c2goZWxlbWVudCk7XG4gICAgYWRkRXZlbnQoZWxlbWVudCwgJ2tleWRvd24nLCBmdW5jdGlvbiAoZSkge1xuICAgICAgZGlzcGF0Y2goZSk7XG4gICAgfSk7XG4gICAgYWRkRXZlbnQod2luZG93LCAnZm9jdXMnLCBmdW5jdGlvbiAoKSB7XG4gICAgICBfZG93bktleXMgPSBbXTtcbiAgICB9KTtcbiAgICBhZGRFdmVudChlbGVtZW50LCAna2V5dXAnLCBmdW5jdGlvbiAoZSkge1xuICAgICAgZGlzcGF0Y2goZSk7XG4gICAgICBjbGVhck1vZGlmaWVyKGUpO1xuICAgIH0pO1xuICB9XG59XG5cbnZhciBfYXBpID0ge1xuICBzZXRTY29wZTogc2V0U2NvcGUsXG4gIGdldFNjb3BlOiBnZXRTY29wZSxcbiAgZGVsZXRlU2NvcGU6IGRlbGV0ZVNjb3BlLFxuICBnZXRQcmVzc2VkS2V5Q29kZXM6IGdldFByZXNzZWRLZXlDb2RlcyxcbiAgaXNQcmVzc2VkOiBpc1ByZXNzZWQsXG4gIGZpbHRlcjogZmlsdGVyLFxuICB1bmJpbmQ6IHVuYmluZFxufTtcblxuZm9yICh2YXIgYSBpbiBfYXBpKSB7XG4gIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoX2FwaSwgYSkpIHtcbiAgICBob3RrZXlzW2FdID0gX2FwaVthXTtcbiAgfVxufVxuXG5pZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgdmFyIF9ob3RrZXlzID0gd2luZG93LmhvdGtleXM7XG5cbiAgaG90a2V5cy5ub0NvbmZsaWN0ID0gZnVuY3Rpb24gKGRlZXApIHtcbiAgICBpZiAoZGVlcCAmJiB3aW5kb3cuaG90a2V5cyA9PT0gaG90a2V5cykge1xuICAgICAgd2luZG93LmhvdGtleXMgPSBfaG90a2V5cztcbiAgICB9XG5cbiAgICByZXR1cm4gaG90a2V5cztcbiAgfTtcblxuICB3aW5kb3cuaG90a2V5cyA9IGhvdGtleXM7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGhvdGtleXM7XG4iLCJpbXBvcnQgaG90a2V5cyBmcm9tICdob3RrZXlzLWpzJztcbmltcG9ydCB7IHVzZVJlZiwgdXNlQ2FsbGJhY2ssIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcblxuZnVuY3Rpb24gdXNlSXNIb3RrZXlQcmVzc2VkKCkge1xuICByZXR1cm4gaG90a2V5cy5pc1ByZXNzZWQ7XG59XG5cbmhvdGtleXMuZmlsdGVyID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gdHJ1ZTtcbn07XG5cbnZhciB0YWdGaWx0ZXIgPSBmdW5jdGlvbiB0YWdGaWx0ZXIoX3JlZiwgZW5hYmxlT25UYWdzKSB7XG4gIHZhciB0YXJnZXQgPSBfcmVmLnRhcmdldCxcbiAgICAgIHNyY0VsZW1lbnQgPSBfcmVmLnNyY0VsZW1lbnQ7XG4gIC8vIEB0cy1pZ25vcmVcbiAgdmFyIHRhcmdldFRhZ05hbWUgPSB0YXJnZXQgJiYgdGFyZ2V0LnRhZ05hbWUgfHwgc3JjRWxlbWVudCAmJiBzcmNFbGVtZW50LnRhZ05hbWU7XG4gIHJldHVybiBCb29sZWFuKHRhcmdldFRhZ05hbWUgJiYgZW5hYmxlT25UYWdzICYmIGVuYWJsZU9uVGFncy5pbmNsdWRlcyh0YXJnZXRUYWdOYW1lKSk7XG59O1xuXG52YXIgaXNLZXlib2FyZEV2ZW50VHJpZ2dlcmVkQnlJbnB1dCA9IGZ1bmN0aW9uIGlzS2V5Ym9hcmRFdmVudFRyaWdnZXJlZEJ5SW5wdXQoZXYpIHtcbiAgcmV0dXJuIHRhZ0ZpbHRlcihldiwgWydJTlBVVCcsICdURVhUQVJFQScsICdTRUxFQ1QnXSk7XG59O1xuXG5mdW5jdGlvbiB1c2VIb3RrZXlzKGtleXMsIGNhbGxiYWNrLCBvcHRpb25zLCBkZXBzKSB7XG4gIGlmIChvcHRpb25zIGluc3RhbmNlb2YgQXJyYXkpIHtcbiAgICBkZXBzID0gb3B0aW9ucztcbiAgICBvcHRpb25zID0gdW5kZWZpbmVkO1xuICB9XG5cbiAgdmFyIF9yZWYyID0gb3B0aW9ucyB8fCB7fSxcbiAgICAgIGVuYWJsZU9uVGFncyA9IF9yZWYyLmVuYWJsZU9uVGFncyxcbiAgICAgIGZpbHRlciA9IF9yZWYyLmZpbHRlcixcbiAgICAgIGtleXVwID0gX3JlZjIua2V5dXAsXG4gICAgICBrZXlkb3duID0gX3JlZjIua2V5ZG93bjtcblxuICB2YXIgcmVmID0gdXNlUmVmKG51bGwpO1xuICB2YXIgbWVtb2lzZWRDYWxsYmFjayA9IHVzZUNhbGxiYWNrKGZ1bmN0aW9uIChrZXlib2FyZEV2ZW50LCBob3RrZXlzRXZlbnQpIHtcbiAgICBpZiAoZmlsdGVyICYmICFmaWx0ZXIoa2V5Ym9hcmRFdmVudCkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBpZiAoaXNLZXlib2FyZEV2ZW50VHJpZ2dlcmVkQnlJbnB1dChrZXlib2FyZEV2ZW50KSAmJiAhdGFnRmlsdGVyKGtleWJvYXJkRXZlbnQsIGVuYWJsZU9uVGFncykpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIGlmIChyZWYuY3VycmVudCA9PT0gbnVsbCB8fCBkb2N1bWVudC5hY3RpdmVFbGVtZW50ID09PSByZWYuY3VycmVudCkge1xuICAgICAgY2FsbGJhY2soa2V5Ym9hcmRFdmVudCwgaG90a2V5c0V2ZW50KTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiBmYWxzZTtcbiAgfSwgZGVwcyA/IFtyZWYsIGVuYWJsZU9uVGFncywgZmlsdGVyXS5jb25jYXQoZGVwcykgOiBbcmVmLCBlbmFibGVPblRhZ3MsIGZpbHRlcl0pO1xuICB1c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgIGlmIChrZXl1cCAmJiBrZXlkb3duICE9PSB0cnVlKSB7XG4gICAgICBvcHRpb25zLmtleWRvd24gPSBmYWxzZTtcbiAgICB9XG5cbiAgICBob3RrZXlzKGtleXMsIG9wdGlvbnMgfHwge30sIG1lbW9pc2VkQ2FsbGJhY2spO1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gaG90a2V5cy51bmJpbmQoa2V5cywgbWVtb2lzZWRDYWxsYmFjayk7XG4gICAgfTtcbiAgfSwgW21lbW9pc2VkQ2FsbGJhY2ssIG9wdGlvbnMsIGtleXNdKTtcbiAgcmV0dXJuIHJlZjtcbn1cblxuZXhwb3J0IHsgdXNlSG90a2V5cywgdXNlSXNIb3RrZXlQcmVzc2VkIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWFjdC1ob3RrZXlzLWhvb2suZXNtLmpzLm1hcFxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi4xMy4xXG4gKiByZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0Jzt2YXIgYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLGM9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxkPWI/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixlPWI/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LGY9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsZz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCxoPWI/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LGs9Yj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxsPWI/U3ltYm9sLmZvcihcInJlYWN0LmFzeW5jX21vZGVcIik6NjAxMTEsbT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEsbj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixwPWI/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLHE9Yj9cblN5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpOjYwMTIwLHI9Yj9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTo2MDExNSx0PWI/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTYsdj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5ibG9ja1wiKTo2MDEyMSx3PWI/U3ltYm9sLmZvcihcInJlYWN0LmZ1bmRhbWVudGFsXCIpOjYwMTE3LHg9Yj9TeW1ib2wuZm9yKFwicmVhY3QucmVzcG9uZGVyXCIpOjYwMTE4LHk9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc2NvcGVcIik6NjAxMTk7XG5mdW5jdGlvbiB6KGEpe2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpe3ZhciB1PWEuJCR0eXBlb2Y7c3dpdGNoKHUpe2Nhc2UgYzpzd2l0Y2goYT1hLnR5cGUsYSl7Y2FzZSBsOmNhc2UgbTpjYXNlIGU6Y2FzZSBnOmNhc2UgZjpjYXNlIHA6cmV0dXJuIGE7ZGVmYXVsdDpzd2l0Y2goYT1hJiZhLiQkdHlwZW9mLGEpe2Nhc2UgazpjYXNlIG46Y2FzZSB0OmNhc2UgcjpjYXNlIGg6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm4gdX19Y2FzZSBkOnJldHVybiB1fX19ZnVuY3Rpb24gQShhKXtyZXR1cm4geihhKT09PW19ZXhwb3J0cy5Bc3luY01vZGU9bDtleHBvcnRzLkNvbmN1cnJlbnRNb2RlPW07ZXhwb3J0cy5Db250ZXh0Q29uc3VtZXI9aztleHBvcnRzLkNvbnRleHRQcm92aWRlcj1oO2V4cG9ydHMuRWxlbWVudD1jO2V4cG9ydHMuRm9yd2FyZFJlZj1uO2V4cG9ydHMuRnJhZ21lbnQ9ZTtleHBvcnRzLkxhenk9dDtleHBvcnRzLk1lbW89cjtleHBvcnRzLlBvcnRhbD1kO1xuZXhwb3J0cy5Qcm9maWxlcj1nO2V4cG9ydHMuU3RyaWN0TW9kZT1mO2V4cG9ydHMuU3VzcGVuc2U9cDtleHBvcnRzLmlzQXN5bmNNb2RlPWZ1bmN0aW9uKGEpe3JldHVybiBBKGEpfHx6KGEpPT09bH07ZXhwb3J0cy5pc0NvbmN1cnJlbnRNb2RlPUE7ZXhwb3J0cy5pc0NvbnRleHRDb25zdW1lcj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWt9O2V4cG9ydHMuaXNDb250ZXh0UHJvdmlkZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1ofTtleHBvcnRzLmlzRWxlbWVudD1mdW5jdGlvbihhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09Y307ZXhwb3J0cy5pc0ZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1ufTtleHBvcnRzLmlzRnJhZ21lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1lfTtleHBvcnRzLmlzTGF6eT1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PXR9O1xuZXhwb3J0cy5pc01lbW89ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1yfTtleHBvcnRzLmlzUG9ydGFsPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09ZH07ZXhwb3J0cy5pc1Byb2ZpbGVyPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09Z307ZXhwb3J0cy5pc1N0cmljdE1vZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1mfTtleHBvcnRzLmlzU3VzcGVuc2U9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1wfTtcbmV4cG9ydHMuaXNWYWxpZEVsZW1lbnRUeXBlPWZ1bmN0aW9uKGEpe3JldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGF8fGE9PT1lfHxhPT09bXx8YT09PWd8fGE9PT1mfHxhPT09cHx8YT09PXF8fFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJihhLiQkdHlwZW9mPT09dHx8YS4kJHR5cGVvZj09PXJ8fGEuJCR0eXBlb2Y9PT1ofHxhLiQkdHlwZW9mPT09a3x8YS4kJHR5cGVvZj09PW58fGEuJCR0eXBlb2Y9PT13fHxhLiQkdHlwZW9mPT09eHx8YS4kJHR5cGVvZj09PXl8fGEuJCR0eXBlb2Y9PT12KX07ZXhwb3J0cy50eXBlT2Y9ejtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1pcy5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiaW1wb3J0IHsgUm91dGVyLCBfX1JvdXRlckNvbnRleHQsIG1hdGNoUGF0aCB9IGZyb20gJ3JlYWN0LXJvdXRlcic7XG5leHBvcnQgeyBNZW1vcnlSb3V0ZXIsIFByb21wdCwgUmVkaXJlY3QsIFJvdXRlLCBSb3V0ZXIsIFN0YXRpY1JvdXRlciwgU3dpdGNoLCBnZW5lcmF0ZVBhdGgsIG1hdGNoUGF0aCwgdXNlSGlzdG9yeSwgdXNlTG9jYXRpb24sIHVzZVBhcmFtcywgdXNlUm91dGVNYXRjaCwgd2l0aFJvdXRlciB9IGZyb20gJ3JlYWN0LXJvdXRlcic7XG5pbXBvcnQgX2luaGVyaXRzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZSc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3JlYXRlQnJvd3Nlckhpc3RvcnksIGNyZWF0ZUhhc2hIaXN0b3J5LCBjcmVhdGVMb2NhdGlvbiB9IGZyb20gJ2hpc3RvcnknO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB3YXJuaW5nIGZyb20gJ3Rpbnktd2FybmluZyc7XG5pbXBvcnQgX2V4dGVuZHMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyc7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ3RpbnktaW52YXJpYW50JztcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgYSA8Um91dGVyPiB0aGF0IHVzZXMgSFRNTDUgaGlzdG9yeS5cbiAqL1xuXG52YXIgQnJvd3NlclJvdXRlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShCcm93c2VyUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBCcm93c2VyUm91dGVyKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xuICAgIF90aGlzLmhpc3RvcnkgPSBjcmVhdGVCcm93c2VySGlzdG9yeShfdGhpcy5wcm9wcyk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IEJyb3dzZXJSb3V0ZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGVyLCB7XG4gICAgICBoaXN0b3J5OiB0aGlzLmhpc3RvcnksXG4gICAgICBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlblxuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBCcm93c2VyUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIEJyb3dzZXJSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGJhc2VuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgICBmb3JjZVJlZnJlc2g6IFByb3BUeXBlcy5ib29sLFxuICAgIGdldFVzZXJDb25maXJtYXRpb246IFByb3BUeXBlcy5mdW5jLFxuICAgIGtleUxlbmd0aDogUHJvcFR5cGVzLm51bWJlclxuICB9O1xuXG4gIEJyb3dzZXJSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIXRoaXMucHJvcHMuaGlzdG9yeSwgXCI8QnJvd3NlclJvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgKyBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IEJyb3dzZXJSb3V0ZXIgYXMgUm91dGVyIH1gLlwiKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgYSA8Um91dGVyPiB0aGF0IHVzZXMgd2luZG93LmxvY2F0aW9uLmhhc2guXG4gKi9cblxudmFyIEhhc2hSb3V0ZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoSGFzaFJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gSGFzaFJvdXRlcigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcbiAgICBfdGhpcy5oaXN0b3J5ID0gY3JlYXRlSGFzaEhpc3RvcnkoX3RoaXMucHJvcHMpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBIYXNoUm91dGVyLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwge1xuICAgICAgaGlzdG9yeTogdGhpcy5oaXN0b3J5LFxuICAgICAgY2hpbGRyZW46IHRoaXMucHJvcHMuY2hpbGRyZW5cbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gSGFzaFJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBIYXNoUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBiYXNlbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgZ2V0VXNlckNvbmZpcm1hdGlvbjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgaGFzaFR5cGU6IFByb3BUeXBlcy5vbmVPZihbXCJoYXNoYmFuZ1wiLCBcIm5vc2xhc2hcIiwgXCJzbGFzaFwiXSlcbiAgfTtcblxuICBIYXNoUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPEhhc2hSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBIYXNoUm91dGVyIGFzIFJvdXRlciB9YC5cIikgOiB2b2lkIDA7XG4gIH07XG59XG5cbnZhciByZXNvbHZlVG9Mb2NhdGlvbiA9IGZ1bmN0aW9uIHJlc29sdmVUb0xvY2F0aW9uKHRvLCBjdXJyZW50TG9jYXRpb24pIHtcbiAgcmV0dXJuIHR5cGVvZiB0byA9PT0gXCJmdW5jdGlvblwiID8gdG8oY3VycmVudExvY2F0aW9uKSA6IHRvO1xufTtcbnZhciBub3JtYWxpemVUb0xvY2F0aW9uID0gZnVuY3Rpb24gbm9ybWFsaXplVG9Mb2NhdGlvbih0bywgY3VycmVudExvY2F0aW9uKSB7XG4gIHJldHVybiB0eXBlb2YgdG8gPT09IFwic3RyaW5nXCIgPyBjcmVhdGVMb2NhdGlvbih0bywgbnVsbCwgbnVsbCwgY3VycmVudExvY2F0aW9uKSA6IHRvO1xufTtcblxudmFyIGZvcndhcmRSZWZTaGltID0gZnVuY3Rpb24gZm9yd2FyZFJlZlNoaW0oQykge1xuICByZXR1cm4gQztcbn07XG5cbnZhciBmb3J3YXJkUmVmID0gUmVhY3QuZm9yd2FyZFJlZjtcblxuaWYgKHR5cGVvZiBmb3J3YXJkUmVmID09PSBcInVuZGVmaW5lZFwiKSB7XG4gIGZvcndhcmRSZWYgPSBmb3J3YXJkUmVmU2hpbTtcbn1cblxuZnVuY3Rpb24gaXNNb2RpZmllZEV2ZW50KGV2ZW50KSB7XG4gIHJldHVybiAhIShldmVudC5tZXRhS2V5IHx8IGV2ZW50LmFsdEtleSB8fCBldmVudC5jdHJsS2V5IHx8IGV2ZW50LnNoaWZ0S2V5KTtcbn1cblxudmFyIExpbmtBbmNob3IgPSBmb3J3YXJkUmVmKGZ1bmN0aW9uIChfcmVmLCBmb3J3YXJkZWRSZWYpIHtcbiAgdmFyIGlubmVyUmVmID0gX3JlZi5pbm5lclJlZixcbiAgICAgIG5hdmlnYXRlID0gX3JlZi5uYXZpZ2F0ZSxcbiAgICAgIF9vbkNsaWNrID0gX3JlZi5vbkNsaWNrLFxuICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYsIFtcImlubmVyUmVmXCIsIFwibmF2aWdhdGVcIiwgXCJvbkNsaWNrXCJdKTtcblxuICB2YXIgdGFyZ2V0ID0gcmVzdC50YXJnZXQ7XG5cbiAgdmFyIHByb3BzID0gX2V4dGVuZHMoe30sIHJlc3QsIHtcbiAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKGV2ZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICBpZiAoX29uQ2xpY2spIF9vbkNsaWNrKGV2ZW50KTtcbiAgICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHRocm93IGV4O1xuICAgICAgfVxuXG4gICAgICBpZiAoIWV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQgJiYgLy8gb25DbGljayBwcmV2ZW50ZWQgZGVmYXVsdFxuICAgICAgZXZlbnQuYnV0dG9uID09PSAwICYmICggLy8gaWdub3JlIGV2ZXJ5dGhpbmcgYnV0IGxlZnQgY2xpY2tzXG4gICAgICAhdGFyZ2V0IHx8IHRhcmdldCA9PT0gXCJfc2VsZlwiKSAmJiAvLyBsZXQgYnJvd3NlciBoYW5kbGUgXCJ0YXJnZXQ9X2JsYW5rXCIgZXRjLlxuICAgICAgIWlzTW9kaWZpZWRFdmVudChldmVudCkgLy8gaWdub3JlIGNsaWNrcyB3aXRoIG1vZGlmaWVyIGtleXNcbiAgICAgICkge1xuICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgbmF2aWdhdGUoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgfSk7IC8vIFJlYWN0IDE1IGNvbXBhdFxuXG5cbiAgaWYgKGZvcndhcmRSZWZTaGltICE9PSBmb3J3YXJkUmVmKSB7XG4gICAgcHJvcHMucmVmID0gZm9yd2FyZGVkUmVmIHx8IGlubmVyUmVmO1xuICB9IGVsc2Uge1xuICAgIHByb3BzLnJlZiA9IGlubmVyUmVmO1xuICB9XG4gIC8qIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBqc3gtYTExeS9hbmNob3ItaGFzLWNvbnRlbnQgKi9cblxuXG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFwiYVwiLCBwcm9wcyk7XG59KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBMaW5rQW5jaG9yLmRpc3BsYXlOYW1lID0gXCJMaW5rQW5jaG9yXCI7XG59XG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciByZW5kZXJpbmcgYSBoaXN0b3J5LWF3YXJlIDxhPi5cbiAqL1xuXG5cbnZhciBMaW5rID0gZm9yd2FyZFJlZihmdW5jdGlvbiAoX3JlZjIsIGZvcndhcmRlZFJlZikge1xuICB2YXIgX3JlZjIkY29tcG9uZW50ID0gX3JlZjIuY29tcG9uZW50LFxuICAgICAgY29tcG9uZW50ID0gX3JlZjIkY29tcG9uZW50ID09PSB2b2lkIDAgPyBMaW5rQW5jaG9yIDogX3JlZjIkY29tcG9uZW50LFxuICAgICAgcmVwbGFjZSA9IF9yZWYyLnJlcGxhY2UsXG4gICAgICB0byA9IF9yZWYyLnRvLFxuICAgICAgaW5uZXJSZWYgPSBfcmVmMi5pbm5lclJlZixcbiAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmMiwgW1wiY29tcG9uZW50XCIsIFwicmVwbGFjZVwiLCBcInRvXCIsIFwiaW5uZXJSZWZcIl0pO1xuXG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KF9fUm91dGVyQ29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPExpbms+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgdmFyIGhpc3RvcnkgPSBjb250ZXh0Lmhpc3Rvcnk7XG4gICAgdmFyIGxvY2F0aW9uID0gbm9ybWFsaXplVG9Mb2NhdGlvbihyZXNvbHZlVG9Mb2NhdGlvbih0bywgY29udGV4dC5sb2NhdGlvbiksIGNvbnRleHQubG9jYXRpb24pO1xuICAgIHZhciBocmVmID0gbG9jYXRpb24gPyBoaXN0b3J5LmNyZWF0ZUhyZWYobG9jYXRpb24pIDogXCJcIjtcblxuICAgIHZhciBwcm9wcyA9IF9leHRlbmRzKHt9LCByZXN0LCB7XG4gICAgICBocmVmOiBocmVmLFxuICAgICAgbmF2aWdhdGU6IGZ1bmN0aW9uIG5hdmlnYXRlKCkge1xuICAgICAgICB2YXIgbG9jYXRpb24gPSByZXNvbHZlVG9Mb2NhdGlvbih0bywgY29udGV4dC5sb2NhdGlvbik7XG4gICAgICAgIHZhciBtZXRob2QgPSByZXBsYWNlID8gaGlzdG9yeS5yZXBsYWNlIDogaGlzdG9yeS5wdXNoO1xuICAgICAgICBtZXRob2QobG9jYXRpb24pO1xuICAgICAgfVxuICAgIH0pOyAvLyBSZWFjdCAxNSBjb21wYXRcblxuXG4gICAgaWYgKGZvcndhcmRSZWZTaGltICE9PSBmb3J3YXJkUmVmKSB7XG4gICAgICBwcm9wcy5yZWYgPSBmb3J3YXJkZWRSZWYgfHwgaW5uZXJSZWY7XG4gICAgfSBlbHNlIHtcbiAgICAgIHByb3BzLmlubmVyUmVmID0gaW5uZXJSZWY7XG4gICAgfVxuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29tcG9uZW50LCBwcm9wcyk7XG4gIH0pO1xufSk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgdmFyIHRvVHlwZSA9IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5mdW5jXSk7XG4gIHZhciByZWZUeXBlID0gUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5zaGFwZSh7XG4gICAgY3VycmVudDogUHJvcFR5cGVzLmFueVxuICB9KV0pO1xuICBMaW5rLmRpc3BsYXlOYW1lID0gXCJMaW5rXCI7XG4gIExpbmsucHJvcFR5cGVzID0ge1xuICAgIGlubmVyUmVmOiByZWZUeXBlLFxuICAgIG9uQ2xpY2s6IFByb3BUeXBlcy5mdW5jLFxuICAgIHJlcGxhY2U6IFByb3BUeXBlcy5ib29sLFxuICAgIHRhcmdldDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICB0bzogdG9UeXBlLmlzUmVxdWlyZWRcbiAgfTtcbn1cblxudmFyIGZvcndhcmRSZWZTaGltJDEgPSBmdW5jdGlvbiBmb3J3YXJkUmVmU2hpbShDKSB7XG4gIHJldHVybiBDO1xufTtcblxudmFyIGZvcndhcmRSZWYkMSA9IFJlYWN0LmZvcndhcmRSZWY7XG5cbmlmICh0eXBlb2YgZm9yd2FyZFJlZiQxID09PSBcInVuZGVmaW5lZFwiKSB7XG4gIGZvcndhcmRSZWYkMSA9IGZvcndhcmRSZWZTaGltJDE7XG59XG5cbmZ1bmN0aW9uIGpvaW5DbGFzc25hbWVzKCkge1xuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgY2xhc3NuYW1lcyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBjbGFzc25hbWVzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgcmV0dXJuIGNsYXNzbmFtZXMuZmlsdGVyKGZ1bmN0aW9uIChpKSB7XG4gICAgcmV0dXJuIGk7XG4gIH0pLmpvaW4oXCIgXCIpO1xufVxuLyoqXG4gKiBBIDxMaW5rPiB3cmFwcGVyIHRoYXQga25vd3MgaWYgaXQncyBcImFjdGl2ZVwiIG9yIG5vdC5cbiAqL1xuXG5cbnZhciBOYXZMaW5rID0gZm9yd2FyZFJlZiQxKGZ1bmN0aW9uIChfcmVmLCBmb3J3YXJkZWRSZWYpIHtcbiAgdmFyIF9yZWYkYXJpYUN1cnJlbnQgPSBfcmVmW1wiYXJpYS1jdXJyZW50XCJdLFxuICAgICAgYXJpYUN1cnJlbnQgPSBfcmVmJGFyaWFDdXJyZW50ID09PSB2b2lkIDAgPyBcInBhZ2VcIiA6IF9yZWYkYXJpYUN1cnJlbnQsXG4gICAgICBfcmVmJGFjdGl2ZUNsYXNzTmFtZSA9IF9yZWYuYWN0aXZlQ2xhc3NOYW1lLFxuICAgICAgYWN0aXZlQ2xhc3NOYW1lID0gX3JlZiRhY3RpdmVDbGFzc05hbWUgPT09IHZvaWQgMCA/IFwiYWN0aXZlXCIgOiBfcmVmJGFjdGl2ZUNsYXNzTmFtZSxcbiAgICAgIGFjdGl2ZVN0eWxlID0gX3JlZi5hY3RpdmVTdHlsZSxcbiAgICAgIGNsYXNzTmFtZVByb3AgPSBfcmVmLmNsYXNzTmFtZSxcbiAgICAgIGV4YWN0ID0gX3JlZi5leGFjdCxcbiAgICAgIGlzQWN0aXZlUHJvcCA9IF9yZWYuaXNBY3RpdmUsXG4gICAgICBsb2NhdGlvblByb3AgPSBfcmVmLmxvY2F0aW9uLFxuICAgICAgc2Vuc2l0aXZlID0gX3JlZi5zZW5zaXRpdmUsXG4gICAgICBzdHJpY3QgPSBfcmVmLnN0cmljdCxcbiAgICAgIHN0eWxlUHJvcCA9IF9yZWYuc3R5bGUsXG4gICAgICB0byA9IF9yZWYudG8sXG4gICAgICBpbm5lclJlZiA9IF9yZWYuaW5uZXJSZWYsXG4gICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZiwgW1wiYXJpYS1jdXJyZW50XCIsIFwiYWN0aXZlQ2xhc3NOYW1lXCIsIFwiYWN0aXZlU3R5bGVcIiwgXCJjbGFzc05hbWVcIiwgXCJleGFjdFwiLCBcImlzQWN0aXZlXCIsIFwibG9jYXRpb25cIiwgXCJzZW5zaXRpdmVcIiwgXCJzdHJpY3RcIiwgXCJzdHlsZVwiLCBcInRvXCIsIFwiaW5uZXJSZWZcIl0pO1xuXG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KF9fUm91dGVyQ29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPE5hdkxpbms+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgdmFyIGN1cnJlbnRMb2NhdGlvbiA9IGxvY2F0aW9uUHJvcCB8fCBjb250ZXh0LmxvY2F0aW9uO1xuICAgIHZhciB0b0xvY2F0aW9uID0gbm9ybWFsaXplVG9Mb2NhdGlvbihyZXNvbHZlVG9Mb2NhdGlvbih0bywgY3VycmVudExvY2F0aW9uKSwgY3VycmVudExvY2F0aW9uKTtcbiAgICB2YXIgcGF0aCA9IHRvTG9jYXRpb24ucGF0aG5hbWU7IC8vIFJlZ2V4IHRha2VuIGZyb206IGh0dHBzOi8vZ2l0aHViLmNvbS9waWxsYXJqcy9wYXRoLXRvLXJlZ2V4cC9ibG9iL21hc3Rlci9pbmRleC5qcyNMMjAyXG5cbiAgICB2YXIgZXNjYXBlZFBhdGggPSBwYXRoICYmIHBhdGgucmVwbGFjZSgvKFsuKyo/PV4hOiR7fSgpW1xcXXwvXFxcXF0pL2csIFwiXFxcXCQxXCIpO1xuICAgIHZhciBtYXRjaCA9IGVzY2FwZWRQYXRoID8gbWF0Y2hQYXRoKGN1cnJlbnRMb2NhdGlvbi5wYXRobmFtZSwge1xuICAgICAgcGF0aDogZXNjYXBlZFBhdGgsXG4gICAgICBleGFjdDogZXhhY3QsXG4gICAgICBzZW5zaXRpdmU6IHNlbnNpdGl2ZSxcbiAgICAgIHN0cmljdDogc3RyaWN0XG4gICAgfSkgOiBudWxsO1xuICAgIHZhciBpc0FjdGl2ZSA9ICEhKGlzQWN0aXZlUHJvcCA/IGlzQWN0aXZlUHJvcChtYXRjaCwgY3VycmVudExvY2F0aW9uKSA6IG1hdGNoKTtcbiAgICB2YXIgY2xhc3NOYW1lID0gaXNBY3RpdmUgPyBqb2luQ2xhc3NuYW1lcyhjbGFzc05hbWVQcm9wLCBhY3RpdmVDbGFzc05hbWUpIDogY2xhc3NOYW1lUHJvcDtcbiAgICB2YXIgc3R5bGUgPSBpc0FjdGl2ZSA/IF9leHRlbmRzKHt9LCBzdHlsZVByb3AsIHt9LCBhY3RpdmVTdHlsZSkgOiBzdHlsZVByb3A7XG5cbiAgICB2YXIgcHJvcHMgPSBfZXh0ZW5kcyh7XG4gICAgICBcImFyaWEtY3VycmVudFwiOiBpc0FjdGl2ZSAmJiBhcmlhQ3VycmVudCB8fCBudWxsLFxuICAgICAgY2xhc3NOYW1lOiBjbGFzc05hbWUsXG4gICAgICBzdHlsZTogc3R5bGUsXG4gICAgICB0bzogdG9Mb2NhdGlvblxuICAgIH0sIHJlc3QpOyAvLyBSZWFjdCAxNSBjb21wYXRcblxuXG4gICAgaWYgKGZvcndhcmRSZWZTaGltJDEgIT09IGZvcndhcmRSZWYkMSkge1xuICAgICAgcHJvcHMucmVmID0gZm9yd2FyZGVkUmVmIHx8IGlubmVyUmVmO1xuICAgIH0gZWxzZSB7XG4gICAgICBwcm9wcy5pbm5lclJlZiA9IGlubmVyUmVmO1xuICAgIH1cblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KExpbmssIHByb3BzKTtcbiAgfSk7XG59KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBOYXZMaW5rLmRpc3BsYXlOYW1lID0gXCJOYXZMaW5rXCI7XG4gIHZhciBhcmlhQ3VycmVudFR5cGUgPSBQcm9wVHlwZXMub25lT2YoW1wicGFnZVwiLCBcInN0ZXBcIiwgXCJsb2NhdGlvblwiLCBcImRhdGVcIiwgXCJ0aW1lXCIsIFwidHJ1ZVwiXSk7XG4gIE5hdkxpbmsucHJvcFR5cGVzID0gX2V4dGVuZHMoe30sIExpbmsucHJvcFR5cGVzLCB7XG4gICAgXCJhcmlhLWN1cnJlbnRcIjogYXJpYUN1cnJlbnRUeXBlLFxuICAgIGFjdGl2ZUNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBhY3RpdmVTdHlsZTogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgZXhhY3Q6IFByb3BUeXBlcy5ib29sLFxuICAgIGlzQWN0aXZlOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBzZW5zaXRpdmU6IFByb3BUeXBlcy5ib29sLFxuICAgIHN0cmljdDogUHJvcFR5cGVzLmJvb2wsXG4gICAgc3R5bGU6IFByb3BUeXBlcy5vYmplY3RcbiAgfSk7XG59XG5cbmV4cG9ydCB7IEJyb3dzZXJSb3V0ZXIsIEhhc2hSb3V0ZXIsIExpbmssIE5hdkxpbmsgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlYWN0LXJvdXRlci1kb20uanMubWFwXG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IF9pbmhlcml0c0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2UnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB3YXJuaW5nIGZyb20gJ3Rpbnktd2FybmluZyc7XG5cbnZhciBNQVhfU0lHTkVEXzMxX0JJVF9JTlQgPSAxMDczNzQxODIzO1xudmFyIGNvbW1vbmpzR2xvYmFsID0gdHlwZW9mIGdsb2JhbFRoaXMgIT09ICd1bmRlZmluZWQnID8gZ2xvYmFsVGhpcyA6IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnID8gd2luZG93IDogdHlwZW9mIGdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyBnbG9iYWwgOiB7fTtcblxuZnVuY3Rpb24gZ2V0VW5pcXVlSWQoKSB7XG4gIHZhciBrZXkgPSAnX19nbG9iYWxfdW5pcXVlX2lkX18nO1xuICByZXR1cm4gY29tbW9uanNHbG9iYWxba2V5XSA9IChjb21tb25qc0dsb2JhbFtrZXldIHx8IDApICsgMTtcbn1cblxuZnVuY3Rpb24gb2JqZWN0SXMoeCwgeSkge1xuICBpZiAoeCA9PT0geSkge1xuICAgIHJldHVybiB4ICE9PSAwIHx8IDEgLyB4ID09PSAxIC8geTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4geCAhPT0geCAmJiB5ICE9PSB5O1xuICB9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUV2ZW50RW1pdHRlcih2YWx1ZSkge1xuICB2YXIgaGFuZGxlcnMgPSBbXTtcbiAgcmV0dXJuIHtcbiAgICBvbjogZnVuY3Rpb24gb24oaGFuZGxlcikge1xuICAgICAgaGFuZGxlcnMucHVzaChoYW5kbGVyKTtcbiAgICB9LFxuICAgIG9mZjogZnVuY3Rpb24gb2ZmKGhhbmRsZXIpIHtcbiAgICAgIGhhbmRsZXJzID0gaGFuZGxlcnMuZmlsdGVyKGZ1bmN0aW9uIChoKSB7XG4gICAgICAgIHJldHVybiBoICE9PSBoYW5kbGVyO1xuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9LFxuICAgIHNldDogZnVuY3Rpb24gc2V0KG5ld1ZhbHVlLCBjaGFuZ2VkQml0cykge1xuICAgICAgdmFsdWUgPSBuZXdWYWx1ZTtcbiAgICAgIGhhbmRsZXJzLmZvckVhY2goZnVuY3Rpb24gKGhhbmRsZXIpIHtcbiAgICAgICAgcmV0dXJuIGhhbmRsZXIodmFsdWUsIGNoYW5nZWRCaXRzKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gb25seUNoaWxkKGNoaWxkcmVuKSB7XG4gIHJldHVybiBBcnJheS5pc0FycmF5KGNoaWxkcmVuKSA/IGNoaWxkcmVuWzBdIDogY2hpbGRyZW47XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVJlYWN0Q29udGV4dChkZWZhdWx0VmFsdWUsIGNhbGN1bGF0ZUNoYW5nZWRCaXRzKSB7XG4gIHZhciBfUHJvdmlkZXIkY2hpbGRDb250ZXgsIF9Db25zdW1lciRjb250ZXh0VHlwZTtcblxuICB2YXIgY29udGV4dFByb3AgPSAnX19jcmVhdGUtcmVhY3QtY29udGV4dC0nICsgZ2V0VW5pcXVlSWQoKSArICdfXyc7XG5cbiAgdmFyIFByb3ZpZGVyID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfQ29tcG9uZW50KSB7XG4gICAgX2luaGVyaXRzTG9vc2UoUHJvdmlkZXIsIF9Db21wb25lbnQpO1xuXG4gICAgZnVuY3Rpb24gUHJvdmlkZXIoKSB7XG4gICAgICB2YXIgX3RoaXM7XG5cbiAgICAgIF90aGlzID0gX0NvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgICBfdGhpcy5lbWl0dGVyID0gY3JlYXRlRXZlbnRFbWl0dGVyKF90aGlzLnByb3BzLnZhbHVlKTtcbiAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG5cbiAgICB2YXIgX3Byb3RvID0gUHJvdmlkZXIucHJvdG90eXBlO1xuXG4gICAgX3Byb3RvLmdldENoaWxkQ29udGV4dCA9IGZ1bmN0aW9uIGdldENoaWxkQ29udGV4dCgpIHtcbiAgICAgIHZhciBfcmVmO1xuXG4gICAgICByZXR1cm4gX3JlZiA9IHt9LCBfcmVmW2NvbnRleHRQcm9wXSA9IHRoaXMuZW1pdHRlciwgX3JlZjtcbiAgICB9O1xuXG4gICAgX3Byb3RvLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgICAgaWYgKHRoaXMucHJvcHMudmFsdWUgIT09IG5leHRQcm9wcy52YWx1ZSkge1xuICAgICAgICB2YXIgb2xkVmFsdWUgPSB0aGlzLnByb3BzLnZhbHVlO1xuICAgICAgICB2YXIgbmV3VmFsdWUgPSBuZXh0UHJvcHMudmFsdWU7XG4gICAgICAgIHZhciBjaGFuZ2VkQml0cztcblxuICAgICAgICBpZiAob2JqZWN0SXMob2xkVmFsdWUsIG5ld1ZhbHVlKSkge1xuICAgICAgICAgIGNoYW5nZWRCaXRzID0gMDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjaGFuZ2VkQml0cyA9IHR5cGVvZiBjYWxjdWxhdGVDaGFuZ2VkQml0cyA9PT0gJ2Z1bmN0aW9uJyA/IGNhbGN1bGF0ZUNoYW5nZWRCaXRzKG9sZFZhbHVlLCBuZXdWYWx1ZSkgOiBNQVhfU0lHTkVEXzMxX0JJVF9JTlQ7XG5cbiAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgICAgd2FybmluZygoY2hhbmdlZEJpdHMgJiBNQVhfU0lHTkVEXzMxX0JJVF9JTlQpID09PSBjaGFuZ2VkQml0cywgJ2NhbGN1bGF0ZUNoYW5nZWRCaXRzOiBFeHBlY3RlZCB0aGUgcmV0dXJuIHZhbHVlIHRvIGJlIGEgJyArICczMS1iaXQgaW50ZWdlci4gSW5zdGVhZCByZWNlaXZlZDogJyArIGNoYW5nZWRCaXRzKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjaGFuZ2VkQml0cyB8PSAwO1xuXG4gICAgICAgICAgaWYgKGNoYW5nZWRCaXRzICE9PSAwKSB7XG4gICAgICAgICAgICB0aGlzLmVtaXR0ZXIuc2V0KG5leHRQcm9wcy52YWx1ZSwgY2hhbmdlZEJpdHMpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG5cbiAgICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY2hpbGRyZW47XG4gICAgfTtcblxuICAgIHJldHVybiBQcm92aWRlcjtcbiAgfShDb21wb25lbnQpO1xuXG4gIFByb3ZpZGVyLmNoaWxkQ29udGV4dFR5cGVzID0gKF9Qcm92aWRlciRjaGlsZENvbnRleCA9IHt9LCBfUHJvdmlkZXIkY2hpbGRDb250ZXhbY29udGV4dFByb3BdID0gUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLCBfUHJvdmlkZXIkY2hpbGRDb250ZXgpO1xuXG4gIHZhciBDb25zdW1lciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX0NvbXBvbmVudDIpIHtcbiAgICBfaW5oZXJpdHNMb29zZShDb25zdW1lciwgX0NvbXBvbmVudDIpO1xuXG4gICAgZnVuY3Rpb24gQ29uc3VtZXIoKSB7XG4gICAgICB2YXIgX3RoaXMyO1xuXG4gICAgICBfdGhpczIgPSBfQ29tcG9uZW50Mi5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgICBfdGhpczIuc3RhdGUgPSB7XG4gICAgICAgIHZhbHVlOiBfdGhpczIuZ2V0VmFsdWUoKVxuICAgICAgfTtcblxuICAgICAgX3RoaXMyLm9uVXBkYXRlID0gZnVuY3Rpb24gKG5ld1ZhbHVlLCBjaGFuZ2VkQml0cykge1xuICAgICAgICB2YXIgb2JzZXJ2ZWRCaXRzID0gX3RoaXMyLm9ic2VydmVkQml0cyB8IDA7XG5cbiAgICAgICAgaWYgKChvYnNlcnZlZEJpdHMgJiBjaGFuZ2VkQml0cykgIT09IDApIHtcbiAgICAgICAgICBfdGhpczIuc2V0U3RhdGUoe1xuICAgICAgICAgICAgdmFsdWU6IF90aGlzMi5nZXRWYWx1ZSgpXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgIHJldHVybiBfdGhpczI7XG4gICAgfVxuXG4gICAgdmFyIF9wcm90bzIgPSBDb25zdW1lci5wcm90b3R5cGU7XG5cbiAgICBfcHJvdG8yLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgICAgdmFyIG9ic2VydmVkQml0cyA9IG5leHRQcm9wcy5vYnNlcnZlZEJpdHM7XG4gICAgICB0aGlzLm9ic2VydmVkQml0cyA9IG9ic2VydmVkQml0cyA9PT0gdW5kZWZpbmVkIHx8IG9ic2VydmVkQml0cyA9PT0gbnVsbCA/IE1BWF9TSUdORURfMzFfQklUX0lOVCA6IG9ic2VydmVkQml0cztcbiAgICB9O1xuXG4gICAgX3Byb3RvMi5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgaWYgKHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0pIHtcbiAgICAgICAgdGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXS5vbih0aGlzLm9uVXBkYXRlKTtcbiAgICAgIH1cblxuICAgICAgdmFyIG9ic2VydmVkQml0cyA9IHRoaXMucHJvcHMub2JzZXJ2ZWRCaXRzO1xuICAgICAgdGhpcy5vYnNlcnZlZEJpdHMgPSBvYnNlcnZlZEJpdHMgPT09IHVuZGVmaW5lZCB8fCBvYnNlcnZlZEJpdHMgPT09IG51bGwgPyBNQVhfU0lHTkVEXzMxX0JJVF9JTlQgOiBvYnNlcnZlZEJpdHM7XG4gICAgfTtcblxuICAgIF9wcm90bzIuY29tcG9uZW50V2lsbFVubW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICAgIGlmICh0aGlzLmNvbnRleHRbY29udGV4dFByb3BdKSB7XG4gICAgICAgIHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0ub2ZmKHRoaXMub25VcGRhdGUpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBfcHJvdG8yLmdldFZhbHVlID0gZnVuY3Rpb24gZ2V0VmFsdWUoKSB7XG4gICAgICBpZiAodGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXSkge1xuICAgICAgICByZXR1cm4gdGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXS5nZXQoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBkZWZhdWx0VmFsdWU7XG4gICAgICB9XG4gICAgfTtcblxuICAgIF9wcm90bzIucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIG9ubHlDaGlsZCh0aGlzLnByb3BzLmNoaWxkcmVuKSh0aGlzLnN0YXRlLnZhbHVlKTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIENvbnN1bWVyO1xuICB9KENvbXBvbmVudCk7XG5cbiAgQ29uc3VtZXIuY29udGV4dFR5cGVzID0gKF9Db25zdW1lciRjb250ZXh0VHlwZSA9IHt9LCBfQ29uc3VtZXIkY29udGV4dFR5cGVbY29udGV4dFByb3BdID0gUHJvcFR5cGVzLm9iamVjdCwgX0NvbnN1bWVyJGNvbnRleHRUeXBlKTtcbiAgcmV0dXJuIHtcbiAgICBQcm92aWRlcjogUHJvdmlkZXIsXG4gICAgQ29uc3VtZXI6IENvbnN1bWVyXG4gIH07XG59XG5cbnZhciBpbmRleCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQgfHwgY3JlYXRlUmVhY3RDb250ZXh0O1xuXG5leHBvcnQgZGVmYXVsdCBpbmRleDtcbiIsImltcG9ydCBfaW5oZXJpdHNMb29zZSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgY3JlYXRlTWVtb3J5SGlzdG9yeSwgY3JlYXRlTG9jYXRpb24sIGxvY2F0aW9uc0FyZUVxdWFsLCBjcmVhdGVQYXRoIH0gZnJvbSAnaGlzdG9yeSc7XG5pbXBvcnQgd2FybmluZyBmcm9tICd0aW55LXdhcm5pbmcnO1xuaW1wb3J0IGNyZWF0ZUNvbnRleHQgZnJvbSAnbWluaS1jcmVhdGUtcmVhY3QtY29udGV4dCc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ3RpbnktaW52YXJpYW50JztcbmltcG9ydCBfZXh0ZW5kcyBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzJztcbmltcG9ydCBwYXRoVG9SZWdleHAgZnJvbSAncGF0aC10by1yZWdleHAnO1xuaW1wb3J0IHsgaXNWYWxpZEVsZW1lbnRUeXBlIH0gZnJvbSAncmVhY3QtaXMnO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UnO1xuaW1wb3J0IGhvaXN0U3RhdGljcyBmcm9tICdob2lzdC1ub24tcmVhY3Qtc3RhdGljcyc7XG5cbi8vIFRPRE86IFJlcGxhY2Ugd2l0aCBSZWFjdC5jcmVhdGVDb250ZXh0IG9uY2Ugd2UgY2FuIGFzc3VtZSBSZWFjdCAxNitcblxudmFyIGNyZWF0ZU5hbWVkQ29udGV4dCA9IGZ1bmN0aW9uIGNyZWF0ZU5hbWVkQ29udGV4dChuYW1lKSB7XG4gIHZhciBjb250ZXh0ID0gY3JlYXRlQ29udGV4dCgpO1xuICBjb250ZXh0LmRpc3BsYXlOYW1lID0gbmFtZTtcbiAgcmV0dXJuIGNvbnRleHQ7XG59O1xuXG52YXIgaGlzdG9yeUNvbnRleHQgPVxuLyojX19QVVJFX18qL1xuY3JlYXRlTmFtZWRDb250ZXh0KFwiUm91dGVyLUhpc3RvcnlcIik7XG5cbi8vIFRPRE86IFJlcGxhY2Ugd2l0aCBSZWFjdC5jcmVhdGVDb250ZXh0IG9uY2Ugd2UgY2FuIGFzc3VtZSBSZWFjdCAxNitcblxudmFyIGNyZWF0ZU5hbWVkQ29udGV4dCQxID0gZnVuY3Rpb24gY3JlYXRlTmFtZWRDb250ZXh0KG5hbWUpIHtcbiAgdmFyIGNvbnRleHQgPSBjcmVhdGVDb250ZXh0KCk7XG4gIGNvbnRleHQuZGlzcGxheU5hbWUgPSBuYW1lO1xuICByZXR1cm4gY29udGV4dDtcbn07XG5cbnZhciBjb250ZXh0ID1cbi8qI19fUFVSRV9fKi9cbmNyZWF0ZU5hbWVkQ29udGV4dCQxKFwiUm91dGVyXCIpO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBwdXR0aW5nIGhpc3Rvcnkgb24gY29udGV4dC5cbiAqL1xuXG52YXIgUm91dGVyID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKFJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgUm91dGVyLmNvbXB1dGVSb290TWF0Y2ggPSBmdW5jdGlvbiBjb21wdXRlUm9vdE1hdGNoKHBhdGhuYW1lKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHBhdGg6IFwiL1wiLFxuICAgICAgdXJsOiBcIi9cIixcbiAgICAgIHBhcmFtczoge30sXG4gICAgICBpc0V4YWN0OiBwYXRobmFtZSA9PT0gXCIvXCJcbiAgICB9O1xuICB9O1xuXG4gIGZ1bmN0aW9uIFJvdXRlcihwcm9wcykge1xuICAgIHZhciBfdGhpcztcblxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsKHRoaXMsIHByb3BzKSB8fCB0aGlzO1xuICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgbG9jYXRpb246IHByb3BzLmhpc3RvcnkubG9jYXRpb25cbiAgICB9OyAvLyBUaGlzIGlzIGEgYml0IG9mIGEgaGFjay4gV2UgaGF2ZSB0byBzdGFydCBsaXN0ZW5pbmcgZm9yIGxvY2F0aW9uXG4gICAgLy8gY2hhbmdlcyBoZXJlIGluIHRoZSBjb25zdHJ1Y3RvciBpbiBjYXNlIHRoZXJlIGFyZSBhbnkgPFJlZGlyZWN0PnNcbiAgICAvLyBvbiB0aGUgaW5pdGlhbCByZW5kZXIuIElmIHRoZXJlIGFyZSwgdGhleSB3aWxsIHJlcGxhY2UvcHVzaCB3aGVuXG4gICAgLy8gdGhleSBtb3VudCBhbmQgc2luY2UgY0RNIGZpcmVzIGluIGNoaWxkcmVuIGJlZm9yZSBwYXJlbnRzLCB3ZSBtYXlcbiAgICAvLyBnZXQgYSBuZXcgbG9jYXRpb24gYmVmb3JlIHRoZSA8Um91dGVyPiBpcyBtb3VudGVkLlxuXG4gICAgX3RoaXMuX2lzTW91bnRlZCA9IGZhbHNlO1xuICAgIF90aGlzLl9wZW5kaW5nTG9jYXRpb24gPSBudWxsO1xuXG4gICAgaWYgKCFwcm9wcy5zdGF0aWNDb250ZXh0KSB7XG4gICAgICBfdGhpcy51bmxpc3RlbiA9IHByb3BzLmhpc3RvcnkubGlzdGVuKGZ1bmN0aW9uIChsb2NhdGlvbikge1xuICAgICAgICBpZiAoX3RoaXMuX2lzTW91bnRlZCkge1xuICAgICAgICAgIF90aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIF90aGlzLl9wZW5kaW5nTG9jYXRpb24gPSBsb2NhdGlvbjtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFJvdXRlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgdGhpcy5faXNNb3VudGVkID0gdHJ1ZTtcblxuICAgIGlmICh0aGlzLl9wZW5kaW5nTG9jYXRpb24pIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICBsb2NhdGlvbjogdGhpcy5fcGVuZGluZ0xvY2F0aW9uXG4gICAgICB9KTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgaWYgKHRoaXMudW5saXN0ZW4pIHRoaXMudW5saXN0ZW4oKTtcbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICAgIHZhbHVlOiB7XG4gICAgICAgIGhpc3Rvcnk6IHRoaXMucHJvcHMuaGlzdG9yeSxcbiAgICAgICAgbG9jYXRpb246IHRoaXMuc3RhdGUubG9jYXRpb24sXG4gICAgICAgIG1hdGNoOiBSb3V0ZXIuY29tcHV0ZVJvb3RNYXRjaCh0aGlzLnN0YXRlLmxvY2F0aW9uLnBhdGhuYW1lKSxcbiAgICAgICAgc3RhdGljQ29udGV4dDogdGhpcy5wcm9wcy5zdGF0aWNDb250ZXh0XG4gICAgICB9XG4gICAgfSwgUmVhY3QuY3JlYXRlRWxlbWVudChoaXN0b3J5Q29udGV4dC5Qcm92aWRlciwge1xuICAgICAgY2hpbGRyZW46IHRoaXMucHJvcHMuY2hpbGRyZW4gfHwgbnVsbCxcbiAgICAgIHZhbHVlOiB0aGlzLnByb3BzLmhpc3RvcnlcbiAgICB9KSk7XG4gIH07XG5cbiAgcmV0dXJuIFJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgICBoaXN0b3J5OiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gICAgc3RhdGljQ29udGV4dDogUHJvcFR5cGVzLm9iamVjdFxuICB9O1xuXG4gIFJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gKHByZXZQcm9wcykge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcocHJldlByb3BzLmhpc3RvcnkgPT09IHRoaXMucHJvcHMuaGlzdG9yeSwgXCJZb3UgY2Fubm90IGNoYW5nZSA8Um91dGVyIGhpc3Rvcnk+XCIpIDogdm9pZCAwO1xuICB9O1xufVxuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBhIDxSb3V0ZXI+IHRoYXQgc3RvcmVzIGxvY2F0aW9uIGluIG1lbW9yeS5cbiAqL1xuXG52YXIgTWVtb3J5Um91dGVyID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKE1lbW9yeVJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gTWVtb3J5Um91dGVyKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xuICAgIF90aGlzLmhpc3RvcnkgPSBjcmVhdGVNZW1vcnlIaXN0b3J5KF90aGlzLnByb3BzKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gTWVtb3J5Um91dGVyLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwge1xuICAgICAgaGlzdG9yeTogdGhpcy5oaXN0b3J5LFxuICAgICAgY2hpbGRyZW46IHRoaXMucHJvcHMuY2hpbGRyZW5cbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gTWVtb3J5Um91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIE1lbW9yeVJvdXRlci5wcm9wVHlwZXMgPSB7XG4gICAgaW5pdGlhbEVudHJpZXM6IFByb3BUeXBlcy5hcnJheSxcbiAgICBpbml0aWFsSW5kZXg6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgZ2V0VXNlckNvbmZpcm1hdGlvbjogUHJvcFR5cGVzLmZ1bmMsXG4gICAga2V5TGVuZ3RoOiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZVxuICB9O1xuXG4gIE1lbW9yeVJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCBcIjxNZW1vcnlSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBNZW1vcnlSb3V0ZXIgYXMgUm91dGVyIH1gLlwiKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxudmFyIExpZmVjeWNsZSA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShMaWZlY3ljbGUsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIExpZmVjeWNsZSgpIHtcbiAgICByZXR1cm4gX1JlYWN0JENvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gTGlmZWN5Y2xlLnByb3RvdHlwZTtcblxuICBfcHJvdG8uY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICBpZiAodGhpcy5wcm9wcy5vbk1vdW50KSB0aGlzLnByb3BzLm9uTW91bnQuY2FsbCh0aGlzLCB0aGlzKTtcbiAgfTtcblxuICBfcHJvdG8uY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gY29tcG9uZW50RGlkVXBkYXRlKHByZXZQcm9wcykge1xuICAgIGlmICh0aGlzLnByb3BzLm9uVXBkYXRlKSB0aGlzLnByb3BzLm9uVXBkYXRlLmNhbGwodGhpcywgdGhpcywgcHJldlByb3BzKTtcbiAgfTtcblxuICBfcHJvdG8uY29tcG9uZW50V2lsbFVubW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICBpZiAodGhpcy5wcm9wcy5vblVubW91bnQpIHRoaXMucHJvcHMub25Vbm1vdW50LmNhbGwodGhpcywgdGhpcyk7XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfTtcblxuICByZXR1cm4gTGlmZWN5Y2xlO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBwcm9tcHRpbmcgdGhlIHVzZXIgYmVmb3JlIG5hdmlnYXRpbmcgYXdheSBmcm9tIGEgc2NyZWVuLlxuICovXG5cbmZ1bmN0aW9uIFByb21wdChfcmVmKSB7XG4gIHZhciBtZXNzYWdlID0gX3JlZi5tZXNzYWdlLFxuICAgICAgX3JlZiR3aGVuID0gX3JlZi53aGVuLFxuICAgICAgd2hlbiA9IF9yZWYkd2hlbiA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9yZWYkd2hlbjtcbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFByb21wdD4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICBpZiAoIXdoZW4gfHwgY29udGV4dC5zdGF0aWNDb250ZXh0KSByZXR1cm4gbnVsbDtcbiAgICB2YXIgbWV0aG9kID0gY29udGV4dC5oaXN0b3J5LmJsb2NrO1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KExpZmVjeWNsZSwge1xuICAgICAgb25Nb3VudDogZnVuY3Rpb24gb25Nb3VudChzZWxmKSB7XG4gICAgICAgIHNlbGYucmVsZWFzZSA9IG1ldGhvZChtZXNzYWdlKTtcbiAgICAgIH0sXG4gICAgICBvblVwZGF0ZTogZnVuY3Rpb24gb25VcGRhdGUoc2VsZiwgcHJldlByb3BzKSB7XG4gICAgICAgIGlmIChwcmV2UHJvcHMubWVzc2FnZSAhPT0gbWVzc2FnZSkge1xuICAgICAgICAgIHNlbGYucmVsZWFzZSgpO1xuICAgICAgICAgIHNlbGYucmVsZWFzZSA9IG1ldGhvZChtZXNzYWdlKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIG9uVW5tb3VudDogZnVuY3Rpb24gb25Vbm1vdW50KHNlbGYpIHtcbiAgICAgICAgc2VsZi5yZWxlYXNlKCk7XG4gICAgICB9LFxuICAgICAgbWVzc2FnZTogbWVzc2FnZVxuICAgIH0pO1xuICB9KTtcbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICB2YXIgbWVzc2FnZVR5cGUgPSBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLnN0cmluZ10pO1xuICBQcm9tcHQucHJvcFR5cGVzID0ge1xuICAgIHdoZW46IFByb3BUeXBlcy5ib29sLFxuICAgIG1lc3NhZ2U6IG1lc3NhZ2VUeXBlLmlzUmVxdWlyZWRcbiAgfTtcbn1cblxudmFyIGNhY2hlID0ge307XG52YXIgY2FjaGVMaW1pdCA9IDEwMDAwO1xudmFyIGNhY2hlQ291bnQgPSAwO1xuXG5mdW5jdGlvbiBjb21waWxlUGF0aChwYXRoKSB7XG4gIGlmIChjYWNoZVtwYXRoXSkgcmV0dXJuIGNhY2hlW3BhdGhdO1xuICB2YXIgZ2VuZXJhdG9yID0gcGF0aFRvUmVnZXhwLmNvbXBpbGUocGF0aCk7XG5cbiAgaWYgKGNhY2hlQ291bnQgPCBjYWNoZUxpbWl0KSB7XG4gICAgY2FjaGVbcGF0aF0gPSBnZW5lcmF0b3I7XG4gICAgY2FjaGVDb3VudCsrO1xuICB9XG5cbiAgcmV0dXJuIGdlbmVyYXRvcjtcbn1cbi8qKlxuICogUHVibGljIEFQSSBmb3IgZ2VuZXJhdGluZyBhIFVSTCBwYXRobmFtZSBmcm9tIGEgcGF0aCBhbmQgcGFyYW1ldGVycy5cbiAqL1xuXG5cbmZ1bmN0aW9uIGdlbmVyYXRlUGF0aChwYXRoLCBwYXJhbXMpIHtcbiAgaWYgKHBhdGggPT09IHZvaWQgMCkge1xuICAgIHBhdGggPSBcIi9cIjtcbiAgfVxuXG4gIGlmIChwYXJhbXMgPT09IHZvaWQgMCkge1xuICAgIHBhcmFtcyA9IHt9O1xuICB9XG5cbiAgcmV0dXJuIHBhdGggPT09IFwiL1wiID8gcGF0aCA6IGNvbXBpbGVQYXRoKHBhdGgpKHBhcmFtcywge1xuICAgIHByZXR0eTogdHJ1ZVxuICB9KTtcbn1cblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgbmF2aWdhdGluZyBwcm9ncmFtbWF0aWNhbGx5IHdpdGggYSBjb21wb25lbnQuXG4gKi9cblxuZnVuY3Rpb24gUmVkaXJlY3QoX3JlZikge1xuICB2YXIgY29tcHV0ZWRNYXRjaCA9IF9yZWYuY29tcHV0ZWRNYXRjaCxcbiAgICAgIHRvID0gX3JlZi50byxcbiAgICAgIF9yZWYkcHVzaCA9IF9yZWYucHVzaCxcbiAgICAgIHB1c2ggPSBfcmVmJHB1c2ggPT09IHZvaWQgMCA/IGZhbHNlIDogX3JlZiRwdXNoO1xuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICFjb250ZXh0ID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8UmVkaXJlY3Q+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgdmFyIGhpc3RvcnkgPSBjb250ZXh0Lmhpc3RvcnksXG4gICAgICAgIHN0YXRpY0NvbnRleHQgPSBjb250ZXh0LnN0YXRpY0NvbnRleHQ7XG4gICAgdmFyIG1ldGhvZCA9IHB1c2ggPyBoaXN0b3J5LnB1c2ggOiBoaXN0b3J5LnJlcGxhY2U7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24oY29tcHV0ZWRNYXRjaCA/IHR5cGVvZiB0byA9PT0gXCJzdHJpbmdcIiA/IGdlbmVyYXRlUGF0aCh0bywgY29tcHV0ZWRNYXRjaC5wYXJhbXMpIDogX2V4dGVuZHMoe30sIHRvLCB7XG4gICAgICBwYXRobmFtZTogZ2VuZXJhdGVQYXRoKHRvLnBhdGhuYW1lLCBjb21wdXRlZE1hdGNoLnBhcmFtcylcbiAgICB9KSA6IHRvKTsgLy8gV2hlbiByZW5kZXJpbmcgaW4gYSBzdGF0aWMgY29udGV4dCxcbiAgICAvLyBzZXQgdGhlIG5ldyBsb2NhdGlvbiBpbW1lZGlhdGVseS5cblxuICAgIGlmIChzdGF0aWNDb250ZXh0KSB7XG4gICAgICBtZXRob2QobG9jYXRpb24pO1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGlmZWN5Y2xlLCB7XG4gICAgICBvbk1vdW50OiBmdW5jdGlvbiBvbk1vdW50KCkge1xuICAgICAgICBtZXRob2QobG9jYXRpb24pO1xuICAgICAgfSxcbiAgICAgIG9uVXBkYXRlOiBmdW5jdGlvbiBvblVwZGF0ZShzZWxmLCBwcmV2UHJvcHMpIHtcbiAgICAgICAgdmFyIHByZXZMb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHByZXZQcm9wcy50byk7XG5cbiAgICAgICAgaWYgKCFsb2NhdGlvbnNBcmVFcXVhbChwcmV2TG9jYXRpb24sIF9leHRlbmRzKHt9LCBsb2NhdGlvbiwge1xuICAgICAgICAgIGtleTogcHJldkxvY2F0aW9uLmtleVxuICAgICAgICB9KSkpIHtcbiAgICAgICAgICBtZXRob2QobG9jYXRpb24pO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgdG86IHRvXG4gICAgfSk7XG4gIH0pO1xufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFJlZGlyZWN0LnByb3BUeXBlcyA9IHtcbiAgICBwdXNoOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBmcm9tOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHRvOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMub2JqZWN0XSkuaXNSZXF1aXJlZFxuICB9O1xufVxuXG52YXIgY2FjaGUkMSA9IHt9O1xudmFyIGNhY2hlTGltaXQkMSA9IDEwMDAwO1xudmFyIGNhY2hlQ291bnQkMSA9IDA7XG5cbmZ1bmN0aW9uIGNvbXBpbGVQYXRoJDEocGF0aCwgb3B0aW9ucykge1xuICB2YXIgY2FjaGVLZXkgPSBcIlwiICsgb3B0aW9ucy5lbmQgKyBvcHRpb25zLnN0cmljdCArIG9wdGlvbnMuc2Vuc2l0aXZlO1xuICB2YXIgcGF0aENhY2hlID0gY2FjaGUkMVtjYWNoZUtleV0gfHwgKGNhY2hlJDFbY2FjaGVLZXldID0ge30pO1xuICBpZiAocGF0aENhY2hlW3BhdGhdKSByZXR1cm4gcGF0aENhY2hlW3BhdGhdO1xuICB2YXIga2V5cyA9IFtdO1xuICB2YXIgcmVnZXhwID0gcGF0aFRvUmVnZXhwKHBhdGgsIGtleXMsIG9wdGlvbnMpO1xuICB2YXIgcmVzdWx0ID0ge1xuICAgIHJlZ2V4cDogcmVnZXhwLFxuICAgIGtleXM6IGtleXNcbiAgfTtcblxuICBpZiAoY2FjaGVDb3VudCQxIDwgY2FjaGVMaW1pdCQxKSB7XG4gICAgcGF0aENhY2hlW3BhdGhdID0gcmVzdWx0O1xuICAgIGNhY2hlQ291bnQkMSsrO1xuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbi8qKlxuICogUHVibGljIEFQSSBmb3IgbWF0Y2hpbmcgYSBVUkwgcGF0aG5hbWUgdG8gYSBwYXRoLlxuICovXG5cblxuZnVuY3Rpb24gbWF0Y2hQYXRoKHBhdGhuYW1lLCBvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cblxuICBpZiAodHlwZW9mIG9wdGlvbnMgPT09IFwic3RyaW5nXCIgfHwgQXJyYXkuaXNBcnJheShvcHRpb25zKSkge1xuICAgIG9wdGlvbnMgPSB7XG4gICAgICBwYXRoOiBvcHRpb25zXG4gICAgfTtcbiAgfVxuXG4gIHZhciBfb3B0aW9ucyA9IG9wdGlvbnMsXG4gICAgICBwYXRoID0gX29wdGlvbnMucGF0aCxcbiAgICAgIF9vcHRpb25zJGV4YWN0ID0gX29wdGlvbnMuZXhhY3QsXG4gICAgICBleGFjdCA9IF9vcHRpb25zJGV4YWN0ID09PSB2b2lkIDAgPyBmYWxzZSA6IF9vcHRpb25zJGV4YWN0LFxuICAgICAgX29wdGlvbnMkc3RyaWN0ID0gX29wdGlvbnMuc3RyaWN0LFxuICAgICAgc3RyaWN0ID0gX29wdGlvbnMkc3RyaWN0ID09PSB2b2lkIDAgPyBmYWxzZSA6IF9vcHRpb25zJHN0cmljdCxcbiAgICAgIF9vcHRpb25zJHNlbnNpdGl2ZSA9IF9vcHRpb25zLnNlbnNpdGl2ZSxcbiAgICAgIHNlbnNpdGl2ZSA9IF9vcHRpb25zJHNlbnNpdGl2ZSA9PT0gdm9pZCAwID8gZmFsc2UgOiBfb3B0aW9ucyRzZW5zaXRpdmU7XG4gIHZhciBwYXRocyA9IFtdLmNvbmNhdChwYXRoKTtcbiAgcmV0dXJuIHBhdGhzLnJlZHVjZShmdW5jdGlvbiAobWF0Y2hlZCwgcGF0aCkge1xuICAgIGlmICghcGF0aCAmJiBwYXRoICE9PSBcIlwiKSByZXR1cm4gbnVsbDtcbiAgICBpZiAobWF0Y2hlZCkgcmV0dXJuIG1hdGNoZWQ7XG5cbiAgICB2YXIgX2NvbXBpbGVQYXRoID0gY29tcGlsZVBhdGgkMShwYXRoLCB7XG4gICAgICBlbmQ6IGV4YWN0LFxuICAgICAgc3RyaWN0OiBzdHJpY3QsXG4gICAgICBzZW5zaXRpdmU6IHNlbnNpdGl2ZVxuICAgIH0pLFxuICAgICAgICByZWdleHAgPSBfY29tcGlsZVBhdGgucmVnZXhwLFxuICAgICAgICBrZXlzID0gX2NvbXBpbGVQYXRoLmtleXM7XG5cbiAgICB2YXIgbWF0Y2ggPSByZWdleHAuZXhlYyhwYXRobmFtZSk7XG4gICAgaWYgKCFtYXRjaCkgcmV0dXJuIG51bGw7XG4gICAgdmFyIHVybCA9IG1hdGNoWzBdLFxuICAgICAgICB2YWx1ZXMgPSBtYXRjaC5zbGljZSgxKTtcbiAgICB2YXIgaXNFeGFjdCA9IHBhdGhuYW1lID09PSB1cmw7XG4gICAgaWYgKGV4YWN0ICYmICFpc0V4YWN0KSByZXR1cm4gbnVsbDtcbiAgICByZXR1cm4ge1xuICAgICAgcGF0aDogcGF0aCxcbiAgICAgIC8vIHRoZSBwYXRoIHVzZWQgdG8gbWF0Y2hcbiAgICAgIHVybDogcGF0aCA9PT0gXCIvXCIgJiYgdXJsID09PSBcIlwiID8gXCIvXCIgOiB1cmwsXG4gICAgICAvLyB0aGUgbWF0Y2hlZCBwb3J0aW9uIG9mIHRoZSBVUkxcbiAgICAgIGlzRXhhY3Q6IGlzRXhhY3QsXG4gICAgICAvLyB3aGV0aGVyIG9yIG5vdCB3ZSBtYXRjaGVkIGV4YWN0bHlcbiAgICAgIHBhcmFtczoga2V5cy5yZWR1Y2UoZnVuY3Rpb24gKG1lbW8sIGtleSwgaW5kZXgpIHtcbiAgICAgICAgbWVtb1trZXkubmFtZV0gPSB2YWx1ZXNbaW5kZXhdO1xuICAgICAgICByZXR1cm4gbWVtbztcbiAgICAgIH0sIHt9KVxuICAgIH07XG4gIH0sIG51bGwpO1xufVxuXG5mdW5jdGlvbiBpc0VtcHR5Q2hpbGRyZW4oY2hpbGRyZW4pIHtcbiAgcmV0dXJuIFJlYWN0LkNoaWxkcmVuLmNvdW50KGNoaWxkcmVuKSA9PT0gMDtcbn1cblxuZnVuY3Rpb24gZXZhbENoaWxkcmVuRGV2KGNoaWxkcmVuLCBwcm9wcywgcGF0aCkge1xuICB2YXIgdmFsdWUgPSBjaGlsZHJlbihwcm9wcyk7XG4gIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcodmFsdWUgIT09IHVuZGVmaW5lZCwgXCJZb3UgcmV0dXJuZWQgYHVuZGVmaW5lZGAgZnJvbSB0aGUgYGNoaWxkcmVuYCBmdW5jdGlvbiBvZiBcIiArIChcIjxSb3V0ZVwiICsgKHBhdGggPyBcIiBwYXRoPVxcXCJcIiArIHBhdGggKyBcIlxcXCJcIiA6IFwiXCIpICsgXCI+LCBidXQgeW91IFwiKSArIFwic2hvdWxkIGhhdmUgcmV0dXJuZWQgYSBSZWFjdCBlbGVtZW50IG9yIGBudWxsYFwiKSA6IHZvaWQgMDtcbiAgcmV0dXJuIHZhbHVlIHx8IG51bGw7XG59XG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBtYXRjaGluZyBhIHNpbmdsZSBwYXRoIGFuZCByZW5kZXJpbmcuXG4gKi9cblxuXG52YXIgUm91dGUgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoUm91dGUsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFJvdXRlKCkge1xuICAgIHJldHVybiBfUmVhY3QkQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBSb3V0ZS5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQkMSkge1xuICAgICAgIWNvbnRleHQkMSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlPiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgICAgdmFyIGxvY2F0aW9uID0gX3RoaXMucHJvcHMubG9jYXRpb24gfHwgY29udGV4dCQxLmxvY2F0aW9uO1xuICAgICAgdmFyIG1hdGNoID0gX3RoaXMucHJvcHMuY29tcHV0ZWRNYXRjaCA/IF90aGlzLnByb3BzLmNvbXB1dGVkTWF0Y2ggLy8gPFN3aXRjaD4gYWxyZWFkeSBjb21wdXRlZCB0aGUgbWF0Y2ggZm9yIHVzXG4gICAgICA6IF90aGlzLnByb3BzLnBhdGggPyBtYXRjaFBhdGgobG9jYXRpb24ucGF0aG5hbWUsIF90aGlzLnByb3BzKSA6IGNvbnRleHQkMS5tYXRjaDtcblxuICAgICAgdmFyIHByb3BzID0gX2V4dGVuZHMoe30sIGNvbnRleHQkMSwge1xuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICAgIG1hdGNoOiBtYXRjaFxuICAgICAgfSk7XG5cbiAgICAgIHZhciBfdGhpcyRwcm9wcyA9IF90aGlzLnByb3BzLFxuICAgICAgICAgIGNoaWxkcmVuID0gX3RoaXMkcHJvcHMuY2hpbGRyZW4sXG4gICAgICAgICAgY29tcG9uZW50ID0gX3RoaXMkcHJvcHMuY29tcG9uZW50LFxuICAgICAgICAgIHJlbmRlciA9IF90aGlzJHByb3BzLnJlbmRlcjsgLy8gUHJlYWN0IHVzZXMgYW4gZW1wdHkgYXJyYXkgYXMgY2hpbGRyZW4gYnlcbiAgICAgIC8vIGRlZmF1bHQsIHNvIHVzZSBudWxsIGlmIHRoYXQncyB0aGUgY2FzZS5cblxuICAgICAgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pICYmIGNoaWxkcmVuLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBjaGlsZHJlbiA9IG51bGw7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICAgICAgdmFsdWU6IHByb3BzXG4gICAgICB9LCBwcm9wcy5tYXRjaCA/IGNoaWxkcmVuID8gdHlwZW9mIGNoaWxkcmVuID09PSBcImZ1bmN0aW9uXCIgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBldmFsQ2hpbGRyZW5EZXYoY2hpbGRyZW4sIHByb3BzLCBfdGhpcy5wcm9wcy5wYXRoKSA6IGNoaWxkcmVuKHByb3BzKSA6IGNoaWxkcmVuIDogY29tcG9uZW50ID8gUmVhY3QuY3JlYXRlRWxlbWVudChjb21wb25lbnQsIHByb3BzKSA6IHJlbmRlciA/IHJlbmRlcihwcm9wcykgOiBudWxsIDogdHlwZW9mIGNoaWxkcmVuID09PSBcImZ1bmN0aW9uXCIgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBldmFsQ2hpbGRyZW5EZXYoY2hpbGRyZW4sIHByb3BzLCBfdGhpcy5wcm9wcy5wYXRoKSA6IGNoaWxkcmVuKHByb3BzKSA6IG51bGwpO1xuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBSb3V0ZTtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBSb3V0ZS5wcm9wVHlwZXMgPSB7XG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMubm9kZV0pLFxuICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KHByb3BzLCBwcm9wTmFtZSkge1xuICAgICAgaWYgKHByb3BzW3Byb3BOYW1lXSAmJiAhaXNWYWxpZEVsZW1lbnRUeXBlKHByb3BzW3Byb3BOYW1lXSkpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBFcnJvcihcIkludmFsaWQgcHJvcCAnY29tcG9uZW50JyBzdXBwbGllZCB0byAnUm91dGUnOiB0aGUgcHJvcCBpcyBub3QgYSB2YWxpZCBSZWFjdCBjb21wb25lbnRcIik7XG4gICAgICB9XG4gICAgfSxcbiAgICBleGFjdDogUHJvcFR5cGVzLmJvb2wsXG4gICAgbG9jYXRpb246IFByb3BUeXBlcy5vYmplY3QsXG4gICAgcGF0aDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLnN0cmluZyldKSxcbiAgICByZW5kZXI6IFByb3BUeXBlcy5mdW5jLFxuICAgIHNlbnNpdGl2ZTogUHJvcFR5cGVzLmJvb2wsXG4gICAgc3RyaWN0OiBQcm9wVHlwZXMuYm9vbFxuICB9O1xuXG4gIFJvdXRlLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodGhpcy5wcm9wcy5jaGlsZHJlbiAmJiAhaXNFbXB0eUNoaWxkcmVuKHRoaXMucHJvcHMuY2hpbGRyZW4pICYmIHRoaXMucHJvcHMuY29tcG9uZW50KSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIGNvbXBvbmVudD4gYW5kIDxSb3V0ZSBjaGlsZHJlbj4gaW4gdGhlIHNhbWUgcm91dGU7IDxSb3V0ZSBjb21wb25lbnQ+IHdpbGwgYmUgaWdub3JlZFwiKSA6IHZvaWQgMDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodGhpcy5wcm9wcy5jaGlsZHJlbiAmJiAhaXNFbXB0eUNoaWxkcmVuKHRoaXMucHJvcHMuY2hpbGRyZW4pICYmIHRoaXMucHJvcHMucmVuZGVyKSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIHJlbmRlcj4gYW5kIDxSb3V0ZSBjaGlsZHJlbj4gaW4gdGhlIHNhbWUgcm91dGU7IDxSb3V0ZSByZW5kZXI+IHdpbGwgYmUgaWdub3JlZFwiKSA6IHZvaWQgMDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodGhpcy5wcm9wcy5jb21wb25lbnQgJiYgdGhpcy5wcm9wcy5yZW5kZXIpLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgY29tcG9uZW50PiBhbmQgPFJvdXRlIHJlbmRlcj4gaW4gdGhlIHNhbWUgcm91dGU7IDxSb3V0ZSByZW5kZXI+IHdpbGwgYmUgaWdub3JlZFwiKSA6IHZvaWQgMDtcbiAgfTtcblxuICBSb3V0ZS5wcm90b3R5cGUuY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gKHByZXZQcm9wcykge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmxvY2F0aW9uICYmICFwcmV2UHJvcHMubG9jYXRpb24pLCAnPFJvdXRlPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIHVuY29udHJvbGxlZCB0byBjb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IGluaXRpYWxseSB1c2VkIG5vIFwibG9jYXRpb25cIiBwcm9wIGFuZCB0aGVuIHByb3ZpZGVkIG9uZSBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpIDogdm9pZCAwO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISghdGhpcy5wcm9wcy5sb2NhdGlvbiAmJiBwcmV2UHJvcHMubG9jYXRpb24pLCAnPFJvdXRlPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIGNvbnRyb2xsZWQgdG8gdW5jb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IHByb3ZpZGVkIGEgXCJsb2NhdGlvblwiIHByb3AgaW5pdGlhbGx5IGJ1dCBvbWl0dGVkIGl0IG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJykgOiB2b2lkIDA7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGFkZExlYWRpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gXCIvXCIgPyBwYXRoIDogXCIvXCIgKyBwYXRoO1xufVxuXG5mdW5jdGlvbiBhZGRCYXNlbmFtZShiYXNlbmFtZSwgbG9jYXRpb24pIHtcbiAgaWYgKCFiYXNlbmFtZSkgcmV0dXJuIGxvY2F0aW9uO1xuICByZXR1cm4gX2V4dGVuZHMoe30sIGxvY2F0aW9uLCB7XG4gICAgcGF0aG5hbWU6IGFkZExlYWRpbmdTbGFzaChiYXNlbmFtZSkgKyBsb2NhdGlvbi5wYXRobmFtZVxuICB9KTtcbn1cblxuZnVuY3Rpb24gc3RyaXBCYXNlbmFtZShiYXNlbmFtZSwgbG9jYXRpb24pIHtcbiAgaWYgKCFiYXNlbmFtZSkgcmV0dXJuIGxvY2F0aW9uO1xuICB2YXIgYmFzZSA9IGFkZExlYWRpbmdTbGFzaChiYXNlbmFtZSk7XG4gIGlmIChsb2NhdGlvbi5wYXRobmFtZS5pbmRleE9mKGJhc2UpICE9PSAwKSByZXR1cm4gbG9jYXRpb247XG4gIHJldHVybiBfZXh0ZW5kcyh7fSwgbG9jYXRpb24sIHtcbiAgICBwYXRobmFtZTogbG9jYXRpb24ucGF0aG5hbWUuc3Vic3RyKGJhc2UubGVuZ3RoKVxuICB9KTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlVVJMKGxvY2F0aW9uKSB7XG4gIHJldHVybiB0eXBlb2YgbG9jYXRpb24gPT09IFwic3RyaW5nXCIgPyBsb2NhdGlvbiA6IGNyZWF0ZVBhdGgobG9jYXRpb24pO1xufVxuXG5mdW5jdGlvbiBzdGF0aWNIYW5kbGVyKG1ldGhvZE5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBjYW5ub3QgJXMgd2l0aCA8U3RhdGljUm91dGVyPlwiLCBtZXRob2ROYW1lKSA6IGludmFyaWFudChmYWxzZSkgO1xuICB9O1xufVxuXG5mdW5jdGlvbiBub29wKCkge31cbi8qKlxuICogVGhlIHB1YmxpYyB0b3AtbGV2ZWwgQVBJIGZvciBhIFwic3RhdGljXCIgPFJvdXRlcj4sIHNvLWNhbGxlZCBiZWNhdXNlIGl0XG4gKiBjYW4ndCBhY3R1YWxseSBjaGFuZ2UgdGhlIGN1cnJlbnQgbG9jYXRpb24uIEluc3RlYWQsIGl0IGp1c3QgcmVjb3Jkc1xuICogbG9jYXRpb24gY2hhbmdlcyBpbiBhIGNvbnRleHQgb2JqZWN0LiBVc2VmdWwgbWFpbmx5IGluIHRlc3RpbmcgYW5kXG4gKiBzZXJ2ZXItcmVuZGVyaW5nIHNjZW5hcmlvcy5cbiAqL1xuXG5cbnZhciBTdGF0aWNSb3V0ZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoU3RhdGljUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBTdGF0aWNSb3V0ZXIoKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpIHx8IHRoaXM7XG5cbiAgICBfdGhpcy5oYW5kbGVQdXNoID0gZnVuY3Rpb24gKGxvY2F0aW9uKSB7XG4gICAgICByZXR1cm4gX3RoaXMubmF2aWdhdGVUbyhsb2NhdGlvbiwgXCJQVVNIXCIpO1xuICAgIH07XG5cbiAgICBfdGhpcy5oYW5kbGVSZXBsYWNlID0gZnVuY3Rpb24gKGxvY2F0aW9uKSB7XG4gICAgICByZXR1cm4gX3RoaXMubmF2aWdhdGVUbyhsb2NhdGlvbiwgXCJSRVBMQUNFXCIpO1xuICAgIH07XG5cbiAgICBfdGhpcy5oYW5kbGVMaXN0ZW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gbm9vcDtcbiAgICB9O1xuXG4gICAgX3RoaXMuaGFuZGxlQmxvY2sgPSBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gbm9vcDtcbiAgICB9O1xuXG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFN0YXRpY1JvdXRlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLm5hdmlnYXRlVG8gPSBmdW5jdGlvbiBuYXZpZ2F0ZVRvKGxvY2F0aW9uLCBhY3Rpb24pIHtcbiAgICB2YXIgX3RoaXMkcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICBfdGhpcyRwcm9wcyRiYXNlbmFtZSA9IF90aGlzJHByb3BzLmJhc2VuYW1lLFxuICAgICAgICBiYXNlbmFtZSA9IF90aGlzJHByb3BzJGJhc2VuYW1lID09PSB2b2lkIDAgPyBcIlwiIDogX3RoaXMkcHJvcHMkYmFzZW5hbWUsXG4gICAgICAgIF90aGlzJHByb3BzJGNvbnRleHQgPSBfdGhpcyRwcm9wcy5jb250ZXh0LFxuICAgICAgICBjb250ZXh0ID0gX3RoaXMkcHJvcHMkY29udGV4dCA9PT0gdm9pZCAwID8ge30gOiBfdGhpcyRwcm9wcyRjb250ZXh0O1xuICAgIGNvbnRleHQuYWN0aW9uID0gYWN0aW9uO1xuICAgIGNvbnRleHQubG9jYXRpb24gPSBhZGRCYXNlbmFtZShiYXNlbmFtZSwgY3JlYXRlTG9jYXRpb24obG9jYXRpb24pKTtcbiAgICBjb250ZXh0LnVybCA9IGNyZWF0ZVVSTChjb250ZXh0LmxvY2F0aW9uKTtcbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBfdGhpcyRwcm9wczIgPSB0aGlzLnByb3BzLFxuICAgICAgICBfdGhpcyRwcm9wczIkYmFzZW5hbWUgPSBfdGhpcyRwcm9wczIuYmFzZW5hbWUsXG4gICAgICAgIGJhc2VuYW1lID0gX3RoaXMkcHJvcHMyJGJhc2VuYW1lID09PSB2b2lkIDAgPyBcIlwiIDogX3RoaXMkcHJvcHMyJGJhc2VuYW1lLFxuICAgICAgICBfdGhpcyRwcm9wczIkY29udGV4dCA9IF90aGlzJHByb3BzMi5jb250ZXh0LFxuICAgICAgICBjb250ZXh0ID0gX3RoaXMkcHJvcHMyJGNvbnRleHQgPT09IHZvaWQgMCA/IHt9IDogX3RoaXMkcHJvcHMyJGNvbnRleHQsXG4gICAgICAgIF90aGlzJHByb3BzMiRsb2NhdGlvbiA9IF90aGlzJHByb3BzMi5sb2NhdGlvbixcbiAgICAgICAgbG9jYXRpb24gPSBfdGhpcyRwcm9wczIkbG9jYXRpb24gPT09IHZvaWQgMCA/IFwiL1wiIDogX3RoaXMkcHJvcHMyJGxvY2F0aW9uLFxuICAgICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3RoaXMkcHJvcHMyLCBbXCJiYXNlbmFtZVwiLCBcImNvbnRleHRcIiwgXCJsb2NhdGlvblwiXSk7XG5cbiAgICB2YXIgaGlzdG9yeSA9IHtcbiAgICAgIGNyZWF0ZUhyZWY6IGZ1bmN0aW9uIGNyZWF0ZUhyZWYocGF0aCkge1xuICAgICAgICByZXR1cm4gYWRkTGVhZGluZ1NsYXNoKGJhc2VuYW1lICsgY3JlYXRlVVJMKHBhdGgpKTtcbiAgICAgIH0sXG4gICAgICBhY3Rpb246IFwiUE9QXCIsXG4gICAgICBsb2NhdGlvbjogc3RyaXBCYXNlbmFtZShiYXNlbmFtZSwgY3JlYXRlTG9jYXRpb24obG9jYXRpb24pKSxcbiAgICAgIHB1c2g6IHRoaXMuaGFuZGxlUHVzaCxcbiAgICAgIHJlcGxhY2U6IHRoaXMuaGFuZGxlUmVwbGFjZSxcbiAgICAgIGdvOiBzdGF0aWNIYW5kbGVyKFwiZ29cIiksXG4gICAgICBnb0JhY2s6IHN0YXRpY0hhbmRsZXIoXCJnb0JhY2tcIiksXG4gICAgICBnb0ZvcndhcmQ6IHN0YXRpY0hhbmRsZXIoXCJnb0ZvcndhcmRcIiksXG4gICAgICBsaXN0ZW46IHRoaXMuaGFuZGxlTGlzdGVuLFxuICAgICAgYmxvY2s6IHRoaXMuaGFuZGxlQmxvY2tcbiAgICB9O1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwgX2V4dGVuZHMoe30sIHJlc3QsIHtcbiAgICAgIGhpc3Rvcnk6IGhpc3RvcnksXG4gICAgICBzdGF0aWNDb250ZXh0OiBjb250ZXh0XG4gICAgfSkpO1xuICB9O1xuXG4gIHJldHVybiBTdGF0aWNSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgU3RhdGljUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBiYXNlbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBjb250ZXh0OiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIGxvY2F0aW9uOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMub2JqZWN0XSlcbiAgfTtcblxuICBTdGF0aWNSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIXRoaXMucHJvcHMuaGlzdG9yeSwgXCI8U3RhdGljUm91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgU3RhdGljUm91dGVyIGFzIFJvdXRlciB9YC5cIikgOiB2b2lkIDA7XG4gIH07XG59XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHJlbmRlcmluZyB0aGUgZmlyc3QgPFJvdXRlPiB0aGF0IG1hdGNoZXMuXG4gKi9cblxudmFyIFN3aXRjaCA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShTd2l0Y2gsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFN3aXRjaCgpIHtcbiAgICByZXR1cm4gX1JlYWN0JENvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gU3dpdGNoLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxTd2l0Y2g+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgICB2YXIgbG9jYXRpb24gPSBfdGhpcy5wcm9wcy5sb2NhdGlvbiB8fCBjb250ZXh0LmxvY2F0aW9uO1xuICAgICAgdmFyIGVsZW1lbnQsIG1hdGNoOyAvLyBXZSB1c2UgUmVhY3QuQ2hpbGRyZW4uZm9yRWFjaCBpbnN0ZWFkIG9mIFJlYWN0LkNoaWxkcmVuLnRvQXJyYXkoKS5maW5kKClcbiAgICAgIC8vIGhlcmUgYmVjYXVzZSB0b0FycmF5IGFkZHMga2V5cyB0byBhbGwgY2hpbGQgZWxlbWVudHMgYW5kIHdlIGRvIG5vdCB3YW50XG4gICAgICAvLyB0byB0cmlnZ2VyIGFuIHVubW91bnQvcmVtb3VudCBmb3IgdHdvIDxSb3V0ZT5zIHRoYXQgcmVuZGVyIHRoZSBzYW1lXG4gICAgICAvLyBjb21wb25lbnQgYXQgZGlmZmVyZW50IFVSTHMuXG5cbiAgICAgIFJlYWN0LkNoaWxkcmVuLmZvckVhY2goX3RoaXMucHJvcHMuY2hpbGRyZW4sIGZ1bmN0aW9uIChjaGlsZCkge1xuICAgICAgICBpZiAobWF0Y2ggPT0gbnVsbCAmJiBSZWFjdC5pc1ZhbGlkRWxlbWVudChjaGlsZCkpIHtcbiAgICAgICAgICBlbGVtZW50ID0gY2hpbGQ7XG4gICAgICAgICAgdmFyIHBhdGggPSBjaGlsZC5wcm9wcy5wYXRoIHx8IGNoaWxkLnByb3BzLmZyb207XG4gICAgICAgICAgbWF0Y2ggPSBwYXRoID8gbWF0Y2hQYXRoKGxvY2F0aW9uLnBhdGhuYW1lLCBfZXh0ZW5kcyh7fSwgY2hpbGQucHJvcHMsIHtcbiAgICAgICAgICAgIHBhdGg6IHBhdGhcbiAgICAgICAgICB9KSkgOiBjb250ZXh0Lm1hdGNoO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBtYXRjaCA/IFJlYWN0LmNsb25lRWxlbWVudChlbGVtZW50LCB7XG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgY29tcHV0ZWRNYXRjaDogbWF0Y2hcbiAgICAgIH0pIDogbnVsbDtcbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gU3dpdGNoO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFN3aXRjaC5wcm9wVHlwZXMgPSB7XG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICAgIGxvY2F0aW9uOiBQcm9wVHlwZXMub2JqZWN0XG4gIH07XG5cbiAgU3dpdGNoLnByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiAocHJldlByb3BzKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMubG9jYXRpb24gJiYgIXByZXZQcm9wcy5sb2NhdGlvbiksICc8U3dpdGNoPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIHVuY29udHJvbGxlZCB0byBjb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IGluaXRpYWxseSB1c2VkIG5vIFwibG9jYXRpb25cIiBwcm9wIGFuZCB0aGVuIHByb3ZpZGVkIG9uZSBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpIDogdm9pZCAwO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISghdGhpcy5wcm9wcy5sb2NhdGlvbiAmJiBwcmV2UHJvcHMubG9jYXRpb24pLCAnPFN3aXRjaD4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSBjb250cm9sbGVkIHRvIHVuY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBwcm92aWRlZCBhIFwibG9jYXRpb25cIiBwcm9wIGluaXRpYWxseSBidXQgb21pdHRlZCBpdCBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpIDogdm9pZCAwO1xuICB9O1xufVxuXG4vKipcbiAqIEEgcHVibGljIGhpZ2hlci1vcmRlciBjb21wb25lbnQgdG8gYWNjZXNzIHRoZSBpbXBlcmF0aXZlIEFQSVxuICovXG5cbmZ1bmN0aW9uIHdpdGhSb3V0ZXIoQ29tcG9uZW50KSB7XG4gIHZhciBkaXNwbGF5TmFtZSA9IFwid2l0aFJvdXRlcihcIiArIChDb21wb25lbnQuZGlzcGxheU5hbWUgfHwgQ29tcG9uZW50Lm5hbWUpICsgXCIpXCI7XG5cbiAgdmFyIEMgPSBmdW5jdGlvbiBDKHByb3BzKSB7XG4gICAgdmFyIHdyYXBwZWRDb21wb25lbnRSZWYgPSBwcm9wcy53cmFwcGVkQ29tcG9uZW50UmVmLFxuICAgICAgICByZW1haW5pbmdQcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHByb3BzLCBbXCJ3cmFwcGVkQ29tcG9uZW50UmVmXCJdKTtcblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFwiICsgZGlzcGxheU5hbWUgKyBcIiAvPiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29tcG9uZW50LCBfZXh0ZW5kcyh7fSwgcmVtYWluaW5nUHJvcHMsIGNvbnRleHQsIHtcbiAgICAgICAgcmVmOiB3cmFwcGVkQ29tcG9uZW50UmVmXG4gICAgICB9KSk7XG4gICAgfSk7XG4gIH07XG5cbiAgQy5kaXNwbGF5TmFtZSA9IGRpc3BsYXlOYW1lO1xuICBDLldyYXBwZWRDb21wb25lbnQgPSBDb21wb25lbnQ7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgIEMucHJvcFR5cGVzID0ge1xuICAgICAgd3JhcHBlZENvbXBvbmVudFJlZjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5vYmplY3RdKVxuICAgIH07XG4gIH1cblxuICByZXR1cm4gaG9pc3RTdGF0aWNzKEMsIENvbXBvbmVudCk7XG59XG5cbnZhciB1c2VDb250ZXh0ID0gUmVhY3QudXNlQ29udGV4dDtcbmZ1bmN0aW9uIHVzZUhpc3RvcnkoKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAhKHR5cGVvZiB1c2VDb250ZXh0ID09PSBcImZ1bmN0aW9uXCIpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBtdXN0IHVzZSBSZWFjdCA+PSAxNi44IGluIG9yZGVyIHRvIHVzZSB1c2VIaXN0b3J5KClcIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICB9XG5cbiAgcmV0dXJuIHVzZUNvbnRleHQoaGlzdG9yeUNvbnRleHQpO1xufVxuZnVuY3Rpb24gdXNlTG9jYXRpb24oKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAhKHR5cGVvZiB1c2VDb250ZXh0ID09PSBcImZ1bmN0aW9uXCIpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBtdXN0IHVzZSBSZWFjdCA+PSAxNi44IGluIG9yZGVyIHRvIHVzZSB1c2VMb2NhdGlvbigpXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgfVxuXG4gIHJldHVybiB1c2VDb250ZXh0KGNvbnRleHQpLmxvY2F0aW9uO1xufVxuZnVuY3Rpb24gdXNlUGFyYW1zKCkge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgISh0eXBlb2YgdXNlQ29udGV4dCA9PT0gXCJmdW5jdGlvblwiKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3UgbXVzdCB1c2UgUmVhY3QgPj0gMTYuOCBpbiBvcmRlciB0byB1c2UgdXNlUGFyYW1zKClcIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICB9XG5cbiAgdmFyIG1hdGNoID0gdXNlQ29udGV4dChjb250ZXh0KS5tYXRjaDtcbiAgcmV0dXJuIG1hdGNoID8gbWF0Y2gucGFyYW1zIDoge307XG59XG5mdW5jdGlvbiB1c2VSb3V0ZU1hdGNoKHBhdGgpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICEodHlwZW9mIHVzZUNvbnRleHQgPT09IFwiZnVuY3Rpb25cIikgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IG11c3QgdXNlIFJlYWN0ID49IDE2LjggaW4gb3JkZXIgdG8gdXNlIHVzZVJvdXRlTWF0Y2goKVwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIH1cblxuICB2YXIgbG9jYXRpb24gPSB1c2VMb2NhdGlvbigpO1xuICB2YXIgbWF0Y2ggPSB1c2VDb250ZXh0KGNvbnRleHQpLm1hdGNoO1xuICByZXR1cm4gcGF0aCA/IG1hdGNoUGF0aChsb2NhdGlvbi5wYXRobmFtZSwgcGF0aCkgOiBtYXRjaDtcbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBnbG9iYWwgPSB3aW5kb3c7XG4gICAgdmFyIGtleSA9IFwiX19yZWFjdF9yb3V0ZXJfYnVpbGRfX1wiO1xuICAgIHZhciBidWlsZE5hbWVzID0ge1xuICAgICAgY2pzOiBcIkNvbW1vbkpTXCIsXG4gICAgICBlc206IFwiRVMgbW9kdWxlc1wiLFxuICAgICAgdW1kOiBcIlVNRFwiXG4gICAgfTtcblxuICAgIGlmIChnbG9iYWxba2V5XSAmJiBnbG9iYWxba2V5XSAhPT0gXCJlc21cIikge1xuICAgICAgdmFyIGluaXRpYWxCdWlsZE5hbWUgPSBidWlsZE5hbWVzW2dsb2JhbFtrZXldXTtcbiAgICAgIHZhciBzZWNvbmRhcnlCdWlsZE5hbWUgPSBidWlsZE5hbWVzW1wiZXNtXCJdOyAvLyBUT0RPOiBBZGQgbGluayB0byBhcnRpY2xlIHRoYXQgZXhwbGFpbnMgaW4gZGV0YWlsIGhvdyB0byBhdm9pZFxuICAgICAgLy8gbG9hZGluZyAyIGRpZmZlcmVudCBidWlsZHMuXG5cbiAgICAgIHRocm93IG5ldyBFcnJvcihcIllvdSBhcmUgbG9hZGluZyB0aGUgXCIgKyBzZWNvbmRhcnlCdWlsZE5hbWUgKyBcIiBidWlsZCBvZiBSZWFjdCBSb3V0ZXIgXCIgKyAoXCJvbiBhIHBhZ2UgdGhhdCBpcyBhbHJlYWR5IHJ1bm5pbmcgdGhlIFwiICsgaW5pdGlhbEJ1aWxkTmFtZSArIFwiIFwiKSArIFwiYnVpbGQsIHNvIHRoaW5ncyB3b24ndCB3b3JrIHJpZ2h0LlwiKTtcbiAgICB9XG5cbiAgICBnbG9iYWxba2V5XSA9IFwiZXNtXCI7XG4gIH1cbn1cblxuZXhwb3J0IHsgTWVtb3J5Um91dGVyLCBQcm9tcHQsIFJlZGlyZWN0LCBSb3V0ZSwgUm91dGVyLCBTdGF0aWNSb3V0ZXIsIFN3aXRjaCwgaGlzdG9yeUNvbnRleHQgYXMgX19IaXN0b3J5Q29udGV4dCwgY29udGV4dCBhcyBfX1JvdXRlckNvbnRleHQsIGdlbmVyYXRlUGF0aCwgbWF0Y2hQYXRoLCB1c2VIaXN0b3J5LCB1c2VMb2NhdGlvbiwgdXNlUGFyYW1zLCB1c2VSb3V0ZU1hdGNoLCB3aXRoUm91dGVyIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWFjdC1yb3V0ZXIuanMubWFwXG4iLCJtb2R1bGUuZXhwb3J0cyA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKGFycikge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGFycikgPT0gJ1tvYmplY3QgQXJyYXldJztcbn07XG4iLCJ2YXIgaXNhcnJheSA9IHJlcXVpcmUoJ2lzYXJyYXknKVxuXG4vKipcbiAqIEV4cG9zZSBgcGF0aFRvUmVnZXhwYC5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBwYXRoVG9SZWdleHBcbm1vZHVsZS5leHBvcnRzLnBhcnNlID0gcGFyc2Vcbm1vZHVsZS5leHBvcnRzLmNvbXBpbGUgPSBjb21waWxlXG5tb2R1bGUuZXhwb3J0cy50b2tlbnNUb0Z1bmN0aW9uID0gdG9rZW5zVG9GdW5jdGlvblxubW9kdWxlLmV4cG9ydHMudG9rZW5zVG9SZWdFeHAgPSB0b2tlbnNUb1JlZ0V4cFxuXG4vKipcbiAqIFRoZSBtYWluIHBhdGggbWF0Y2hpbmcgcmVnZXhwIHV0aWxpdHkuXG4gKlxuICogQHR5cGUge1JlZ0V4cH1cbiAqL1xudmFyIFBBVEhfUkVHRVhQID0gbmV3IFJlZ0V4cChbXG4gIC8vIE1hdGNoIGVzY2FwZWQgY2hhcmFjdGVycyB0aGF0IHdvdWxkIG90aGVyd2lzZSBhcHBlYXIgaW4gZnV0dXJlIG1hdGNoZXMuXG4gIC8vIFRoaXMgYWxsb3dzIHRoZSB1c2VyIHRvIGVzY2FwZSBzcGVjaWFsIGNoYXJhY3RlcnMgdGhhdCB3b24ndCB0cmFuc2Zvcm0uXG4gICcoXFxcXFxcXFwuKScsXG4gIC8vIE1hdGNoIEV4cHJlc3Mtc3R5bGUgcGFyYW1ldGVycyBhbmQgdW4tbmFtZWQgcGFyYW1ldGVycyB3aXRoIGEgcHJlZml4XG4gIC8vIGFuZCBvcHRpb25hbCBzdWZmaXhlcy4gTWF0Y2hlcyBhcHBlYXIgYXM6XG4gIC8vXG4gIC8vIFwiLzp0ZXN0KFxcXFxkKyk/XCIgPT4gW1wiL1wiLCBcInRlc3RcIiwgXCJcXGQrXCIsIHVuZGVmaW5lZCwgXCI/XCIsIHVuZGVmaW5lZF1cbiAgLy8gXCIvcm91dGUoXFxcXGQrKVwiICA9PiBbdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgXCJcXGQrXCIsIHVuZGVmaW5lZCwgdW5kZWZpbmVkXVxuICAvLyBcIi8qXCIgICAgICAgICAgICA9PiBbXCIvXCIsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgXCIqXCJdXG4gICcoW1xcXFwvLl0pPyg/Oig/OlxcXFw6KFxcXFx3KykoPzpcXFxcKCgoPzpcXFxcXFxcXC58W15cXFxcXFxcXCgpXSkrKVxcXFwpKT98XFxcXCgoKD86XFxcXFxcXFwufFteXFxcXFxcXFwoKV0pKylcXFxcKSkoWysqP10pP3woXFxcXCopKSdcbl0uam9pbignfCcpLCAnZycpXG5cbi8qKlxuICogUGFyc2UgYSBzdHJpbmcgZm9yIHRoZSByYXcgdG9rZW5zLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gIHN0clxuICogQHBhcmFtICB7T2JqZWN0PX0gb3B0aW9uc1xuICogQHJldHVybiB7IUFycmF5fVxuICovXG5mdW5jdGlvbiBwYXJzZSAoc3RyLCBvcHRpb25zKSB7XG4gIHZhciB0b2tlbnMgPSBbXVxuICB2YXIga2V5ID0gMFxuICB2YXIgaW5kZXggPSAwXG4gIHZhciBwYXRoID0gJydcbiAgdmFyIGRlZmF1bHREZWxpbWl0ZXIgPSBvcHRpb25zICYmIG9wdGlvbnMuZGVsaW1pdGVyIHx8ICcvJ1xuICB2YXIgcmVzXG5cbiAgd2hpbGUgKChyZXMgPSBQQVRIX1JFR0VYUC5leGVjKHN0cikpICE9IG51bGwpIHtcbiAgICB2YXIgbSA9IHJlc1swXVxuICAgIHZhciBlc2NhcGVkID0gcmVzWzFdXG4gICAgdmFyIG9mZnNldCA9IHJlcy5pbmRleFxuICAgIHBhdGggKz0gc3RyLnNsaWNlKGluZGV4LCBvZmZzZXQpXG4gICAgaW5kZXggPSBvZmZzZXQgKyBtLmxlbmd0aFxuXG4gICAgLy8gSWdub3JlIGFscmVhZHkgZXNjYXBlZCBzZXF1ZW5jZXMuXG4gICAgaWYgKGVzY2FwZWQpIHtcbiAgICAgIHBhdGggKz0gZXNjYXBlZFsxXVxuICAgICAgY29udGludWVcbiAgICB9XG5cbiAgICB2YXIgbmV4dCA9IHN0cltpbmRleF1cbiAgICB2YXIgcHJlZml4ID0gcmVzWzJdXG4gICAgdmFyIG5hbWUgPSByZXNbM11cbiAgICB2YXIgY2FwdHVyZSA9IHJlc1s0XVxuICAgIHZhciBncm91cCA9IHJlc1s1XVxuICAgIHZhciBtb2RpZmllciA9IHJlc1s2XVxuICAgIHZhciBhc3RlcmlzayA9IHJlc1s3XVxuXG4gICAgLy8gUHVzaCB0aGUgY3VycmVudCBwYXRoIG9udG8gdGhlIHRva2Vucy5cbiAgICBpZiAocGF0aCkge1xuICAgICAgdG9rZW5zLnB1c2gocGF0aClcbiAgICAgIHBhdGggPSAnJ1xuICAgIH1cblxuICAgIHZhciBwYXJ0aWFsID0gcHJlZml4ICE9IG51bGwgJiYgbmV4dCAhPSBudWxsICYmIG5leHQgIT09IHByZWZpeFxuICAgIHZhciByZXBlYXQgPSBtb2RpZmllciA9PT0gJysnIHx8IG1vZGlmaWVyID09PSAnKidcbiAgICB2YXIgb3B0aW9uYWwgPSBtb2RpZmllciA9PT0gJz8nIHx8IG1vZGlmaWVyID09PSAnKidcbiAgICB2YXIgZGVsaW1pdGVyID0gcmVzWzJdIHx8IGRlZmF1bHREZWxpbWl0ZXJcbiAgICB2YXIgcGF0dGVybiA9IGNhcHR1cmUgfHwgZ3JvdXBcblxuICAgIHRva2Vucy5wdXNoKHtcbiAgICAgIG5hbWU6IG5hbWUgfHwga2V5KyssXG4gICAgICBwcmVmaXg6IHByZWZpeCB8fCAnJyxcbiAgICAgIGRlbGltaXRlcjogZGVsaW1pdGVyLFxuICAgICAgb3B0aW9uYWw6IG9wdGlvbmFsLFxuICAgICAgcmVwZWF0OiByZXBlYXQsXG4gICAgICBwYXJ0aWFsOiBwYXJ0aWFsLFxuICAgICAgYXN0ZXJpc2s6ICEhYXN0ZXJpc2ssXG4gICAgICBwYXR0ZXJuOiBwYXR0ZXJuID8gZXNjYXBlR3JvdXAocGF0dGVybikgOiAoYXN0ZXJpc2sgPyAnLionIDogJ1teJyArIGVzY2FwZVN0cmluZyhkZWxpbWl0ZXIpICsgJ10rPycpXG4gICAgfSlcbiAgfVxuXG4gIC8vIE1hdGNoIGFueSBjaGFyYWN0ZXJzIHN0aWxsIHJlbWFpbmluZy5cbiAgaWYgKGluZGV4IDwgc3RyLmxlbmd0aCkge1xuICAgIHBhdGggKz0gc3RyLnN1YnN0cihpbmRleClcbiAgfVxuXG4gIC8vIElmIHRoZSBwYXRoIGV4aXN0cywgcHVzaCBpdCBvbnRvIHRoZSBlbmQuXG4gIGlmIChwYXRoKSB7XG4gICAgdG9rZW5zLnB1c2gocGF0aClcbiAgfVxuXG4gIHJldHVybiB0b2tlbnNcbn1cblxuLyoqXG4gKiBDb21waWxlIGEgc3RyaW5nIHRvIGEgdGVtcGxhdGUgZnVuY3Rpb24gZm9yIHRoZSBwYXRoLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gICAgICAgICAgICAgc3RyXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgICAgIG9wdGlvbnNcbiAqIEByZXR1cm4geyFmdW5jdGlvbihPYmplY3Q9LCBPYmplY3Q9KX1cbiAqL1xuZnVuY3Rpb24gY29tcGlsZSAoc3RyLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b2tlbnNUb0Z1bmN0aW9uKHBhcnNlKHN0ciwgb3B0aW9ucyksIG9wdGlvbnMpXG59XG5cbi8qKlxuICogUHJldHRpZXIgZW5jb2Rpbmcgb2YgVVJJIHBhdGggc2VnbWVudHMuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfVxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlbmNvZGVVUklDb21wb25lbnRQcmV0dHkgKHN0cikge1xuICByZXR1cm4gZW5jb2RlVVJJKHN0cikucmVwbGFjZSgvW1xcLz8jXS9nLCBmdW5jdGlvbiAoYykge1xuICAgIHJldHVybiAnJScgKyBjLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKClcbiAgfSlcbn1cblxuLyoqXG4gKiBFbmNvZGUgdGhlIGFzdGVyaXNrIHBhcmFtZXRlci4gU2ltaWxhciB0byBgcHJldHR5YCwgYnV0IGFsbG93cyBzbGFzaGVzLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ31cbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZW5jb2RlQXN0ZXJpc2sgKHN0cikge1xuICByZXR1cm4gZW5jb2RlVVJJKHN0cikucmVwbGFjZSgvWz8jXS9nLCBmdW5jdGlvbiAoYykge1xuICAgIHJldHVybiAnJScgKyBjLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKClcbiAgfSlcbn1cblxuLyoqXG4gKiBFeHBvc2UgYSBtZXRob2QgZm9yIHRyYW5zZm9ybWluZyB0b2tlbnMgaW50byB0aGUgcGF0aCBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gdG9rZW5zVG9GdW5jdGlvbiAodG9rZW5zLCBvcHRpb25zKSB7XG4gIC8vIENvbXBpbGUgYWxsIHRoZSB0b2tlbnMgaW50byByZWdleHBzLlxuICB2YXIgbWF0Y2hlcyA9IG5ldyBBcnJheSh0b2tlbnMubGVuZ3RoKVxuXG4gIC8vIENvbXBpbGUgYWxsIHRoZSBwYXR0ZXJucyBiZWZvcmUgY29tcGlsYXRpb24uXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHR5cGVvZiB0b2tlbnNbaV0gPT09ICdvYmplY3QnKSB7XG4gICAgICBtYXRjaGVzW2ldID0gbmV3IFJlZ0V4cCgnXig/OicgKyB0b2tlbnNbaV0ucGF0dGVybiArICcpJCcsIGZsYWdzKG9wdGlvbnMpKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAob2JqLCBvcHRzKSB7XG4gICAgdmFyIHBhdGggPSAnJ1xuICAgIHZhciBkYXRhID0gb2JqIHx8IHt9XG4gICAgdmFyIG9wdGlvbnMgPSBvcHRzIHx8IHt9XG4gICAgdmFyIGVuY29kZSA9IG9wdGlvbnMucHJldHR5ID8gZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IDogZW5jb2RlVVJJQ29tcG9uZW50XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHRva2VuID0gdG9rZW5zW2ldXG5cbiAgICAgIGlmICh0eXBlb2YgdG9rZW4gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHBhdGggKz0gdG9rZW5cblxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICB2YXIgdmFsdWUgPSBkYXRhW3Rva2VuLm5hbWVdXG4gICAgICB2YXIgc2VnbWVudFxuXG4gICAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgICAvLyBQcmVwZW5kIHBhcnRpYWwgc2VnbWVudCBwcmVmaXhlcy5cbiAgICAgICAgICBpZiAodG9rZW4ucGFydGlhbCkge1xuICAgICAgICAgICAgcGF0aCArPSB0b2tlbi5wcmVmaXhcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjb250aW51ZVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gYmUgZGVmaW5lZCcpXG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKGlzYXJyYXkodmFsdWUpKSB7XG4gICAgICAgIGlmICghdG9rZW4ucmVwZWF0KSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBub3QgcmVwZWF0LCBidXQgcmVjZWl2ZWQgYCcgKyBKU09OLnN0cmluZ2lmeSh2YWx1ZSkgKyAnYCcpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAodmFsdWUubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XG4gICAgICAgICAgICBjb250aW51ZVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG5vdCBiZSBlbXB0eScpXG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB2YWx1ZS5sZW5ndGg7IGorKykge1xuICAgICAgICAgIHNlZ21lbnQgPSBlbmNvZGUodmFsdWVbal0pXG5cbiAgICAgICAgICBpZiAoIW1hdGNoZXNbaV0udGVzdChzZWdtZW50KSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgYWxsIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbWF0Y2ggXCInICsgdG9rZW4ucGF0dGVybiArICdcIiwgYnV0IHJlY2VpdmVkIGAnICsgSlNPTi5zdHJpbmdpZnkoc2VnbWVudCkgKyAnYCcpXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcGF0aCArPSAoaiA9PT0gMCA/IHRva2VuLnByZWZpeCA6IHRva2VuLmRlbGltaXRlcikgKyBzZWdtZW50XG4gICAgICAgIH1cblxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICBzZWdtZW50ID0gdG9rZW4uYXN0ZXJpc2sgPyBlbmNvZGVBc3Rlcmlzayh2YWx1ZSkgOiBlbmNvZGUodmFsdWUpXG5cbiAgICAgIGlmICghbWF0Y2hlc1tpXS50ZXN0KHNlZ21lbnQpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbWF0Y2ggXCInICsgdG9rZW4ucGF0dGVybiArICdcIiwgYnV0IHJlY2VpdmVkIFwiJyArIHNlZ21lbnQgKyAnXCInKVxuICAgICAgfVxuXG4gICAgICBwYXRoICs9IHRva2VuLnByZWZpeCArIHNlZ21lbnRcbiAgICB9XG5cbiAgICByZXR1cm4gcGF0aFxuICB9XG59XG5cbi8qKlxuICogRXNjYXBlIGEgcmVndWxhciBleHByZXNzaW9uIHN0cmluZy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9IHN0clxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlc2NhcGVTdHJpbmcgKHN0cikge1xuICByZXR1cm4gc3RyLnJlcGxhY2UoLyhbLisqPz1eIToke30oKVtcXF18XFwvXFxcXF0pL2csICdcXFxcJDEnKVxufVxuXG4vKipcbiAqIEVzY2FwZSB0aGUgY2FwdHVyaW5nIGdyb3VwIGJ5IGVzY2FwaW5nIHNwZWNpYWwgY2hhcmFjdGVycyBhbmQgbWVhbmluZy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9IGdyb3VwXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVzY2FwZUdyb3VwIChncm91cCkge1xuICByZXR1cm4gZ3JvdXAucmVwbGFjZSgvKFs9ITokXFwvKCldKS9nLCAnXFxcXCQxJylcbn1cblxuLyoqXG4gKiBBdHRhY2ggdGhlIGtleXMgYXMgYSBwcm9wZXJ0eSBvZiB0aGUgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFSZWdFeHB9IHJlXG4gKiBAcGFyYW0gIHtBcnJheX0gICBrZXlzXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBhdHRhY2hLZXlzIChyZSwga2V5cykge1xuICByZS5rZXlzID0ga2V5c1xuICByZXR1cm4gcmVcbn1cblxuLyoqXG4gKiBHZXQgdGhlIGZsYWdzIGZvciBhIHJlZ2V4cCBmcm9tIHRoZSBvcHRpb25zLlxuICpcbiAqIEBwYXJhbSAge09iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBmbGFncyAob3B0aW9ucykge1xuICByZXR1cm4gb3B0aW9ucyAmJiBvcHRpb25zLnNlbnNpdGl2ZSA/ICcnIDogJ2knXG59XG5cbi8qKlxuICogUHVsbCBvdXQga2V5cyBmcm9tIGEgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFSZWdFeHB9IHBhdGhcbiAqIEBwYXJhbSAgeyFBcnJheX0gIGtleXNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHJlZ2V4cFRvUmVnZXhwIChwYXRoLCBrZXlzKSB7XG4gIC8vIFVzZSBhIG5lZ2F0aXZlIGxvb2thaGVhZCB0byBtYXRjaCBvbmx5IGNhcHR1cmluZyBncm91cHMuXG4gIHZhciBncm91cHMgPSBwYXRoLnNvdXJjZS5tYXRjaCgvXFwoKD8hXFw/KS9nKVxuXG4gIGlmIChncm91cHMpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGdyb3Vwcy5sZW5ndGg7IGkrKykge1xuICAgICAga2V5cy5wdXNoKHtcbiAgICAgICAgbmFtZTogaSxcbiAgICAgICAgcHJlZml4OiBudWxsLFxuICAgICAgICBkZWxpbWl0ZXI6IG51bGwsXG4gICAgICAgIG9wdGlvbmFsOiBmYWxzZSxcbiAgICAgICAgcmVwZWF0OiBmYWxzZSxcbiAgICAgICAgcGFydGlhbDogZmFsc2UsXG4gICAgICAgIGFzdGVyaXNrOiBmYWxzZSxcbiAgICAgICAgcGF0dGVybjogbnVsbFxuICAgICAgfSlcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYXR0YWNoS2V5cyhwYXRoLCBrZXlzKVxufVxuXG4vKipcbiAqIFRyYW5zZm9ybSBhbiBhcnJheSBpbnRvIGEgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFBcnJheX0gIHBhdGhcbiAqIEBwYXJhbSAge0FycmF5fSAgIGtleXNcbiAqIEBwYXJhbSAgeyFPYmplY3R9IG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIGFycmF5VG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgdmFyIHBhcnRzID0gW11cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHBhdGgubGVuZ3RoOyBpKyspIHtcbiAgICBwYXJ0cy5wdXNoKHBhdGhUb1JlZ2V4cChwYXRoW2ldLCBrZXlzLCBvcHRpb25zKS5zb3VyY2UpXG4gIH1cblxuICB2YXIgcmVnZXhwID0gbmV3IFJlZ0V4cCgnKD86JyArIHBhcnRzLmpvaW4oJ3wnKSArICcpJywgZmxhZ3Mob3B0aW9ucykpXG5cbiAgcmV0dXJuIGF0dGFjaEtleXMocmVnZXhwLCBrZXlzKVxufVxuXG4vKipcbiAqIENyZWF0ZSBhIHBhdGggcmVnZXhwIGZyb20gc3RyaW5nIGlucHV0LlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gIHBhdGhcbiAqIEBwYXJhbSAgeyFBcnJheX0gIGtleXNcbiAqIEBwYXJhbSAgeyFPYmplY3R9IG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHN0cmluZ1RvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b2tlbnNUb1JlZ0V4cChwYXJzZShwYXRoLCBvcHRpb25zKSwga2V5cywgb3B0aW9ucylcbn1cblxuLyoqXG4gKiBFeHBvc2UgYSBmdW5jdGlvbiBmb3IgdGFraW5nIHRva2VucyBhbmQgcmV0dXJuaW5nIGEgUmVnRXhwLlxuICpcbiAqIEBwYXJhbSAgeyFBcnJheX0gICAgICAgICAgdG9rZW5zXG4gKiBAcGFyYW0gIHsoQXJyYXl8T2JqZWN0KT19IGtleXNcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gdG9rZW5zVG9SZWdFeHAgKHRva2Vucywga2V5cywgb3B0aW9ucykge1xuICBpZiAoIWlzYXJyYXkoa2V5cykpIHtcbiAgICBvcHRpb25zID0gLyoqIEB0eXBlIHshT2JqZWN0fSAqLyAoa2V5cyB8fCBvcHRpb25zKVxuICAgIGtleXMgPSBbXVxuICB9XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge31cblxuICB2YXIgc3RyaWN0ID0gb3B0aW9ucy5zdHJpY3RcbiAgdmFyIGVuZCA9IG9wdGlvbnMuZW5kICE9PSBmYWxzZVxuICB2YXIgcm91dGUgPSAnJ1xuXG4gIC8vIEl0ZXJhdGUgb3ZlciB0aGUgdG9rZW5zIGFuZCBjcmVhdGUgb3VyIHJlZ2V4cCBzdHJpbmcuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHRva2VuID0gdG9rZW5zW2ldXG5cbiAgICBpZiAodHlwZW9mIHRva2VuID09PSAnc3RyaW5nJykge1xuICAgICAgcm91dGUgKz0gZXNjYXBlU3RyaW5nKHRva2VuKVxuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgcHJlZml4ID0gZXNjYXBlU3RyaW5nKHRva2VuLnByZWZpeClcbiAgICAgIHZhciBjYXB0dXJlID0gJyg/OicgKyB0b2tlbi5wYXR0ZXJuICsgJyknXG5cbiAgICAgIGtleXMucHVzaCh0b2tlbilcblxuICAgICAgaWYgKHRva2VuLnJlcGVhdCkge1xuICAgICAgICBjYXB0dXJlICs9ICcoPzonICsgcHJlZml4ICsgY2FwdHVyZSArICcpKidcbiAgICAgIH1cblxuICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XG4gICAgICAgIGlmICghdG9rZW4ucGFydGlhbCkge1xuICAgICAgICAgIGNhcHR1cmUgPSAnKD86JyArIHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKSk/J1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNhcHR1cmUgPSBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJyk/J1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjYXB0dXJlID0gcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpJ1xuICAgICAgfVxuXG4gICAgICByb3V0ZSArPSBjYXB0dXJlXG4gICAgfVxuICB9XG5cbiAgdmFyIGRlbGltaXRlciA9IGVzY2FwZVN0cmluZyhvcHRpb25zLmRlbGltaXRlciB8fCAnLycpXG4gIHZhciBlbmRzV2l0aERlbGltaXRlciA9IHJvdXRlLnNsaWNlKC1kZWxpbWl0ZXIubGVuZ3RoKSA9PT0gZGVsaW1pdGVyXG5cbiAgLy8gSW4gbm9uLXN0cmljdCBtb2RlIHdlIGFsbG93IGEgc2xhc2ggYXQgdGhlIGVuZCBvZiBtYXRjaC4gSWYgdGhlIHBhdGggdG9cbiAgLy8gbWF0Y2ggYWxyZWFkeSBlbmRzIHdpdGggYSBzbGFzaCwgd2UgcmVtb3ZlIGl0IGZvciBjb25zaXN0ZW5jeS4gVGhlIHNsYXNoXG4gIC8vIGlzIHZhbGlkIGF0IHRoZSBlbmQgb2YgYSBwYXRoIG1hdGNoLCBub3QgaW4gdGhlIG1pZGRsZS4gVGhpcyBpcyBpbXBvcnRhbnRcbiAgLy8gaW4gbm9uLWVuZGluZyBtb2RlLCB3aGVyZSBcIi90ZXN0L1wiIHNob3VsZG4ndCBtYXRjaCBcIi90ZXN0Ly9yb3V0ZVwiLlxuICBpZiAoIXN0cmljdCkge1xuICAgIHJvdXRlID0gKGVuZHNXaXRoRGVsaW1pdGVyID8gcm91dGUuc2xpY2UoMCwgLWRlbGltaXRlci5sZW5ndGgpIDogcm91dGUpICsgJyg/OicgKyBkZWxpbWl0ZXIgKyAnKD89JCkpPydcbiAgfVxuXG4gIGlmIChlbmQpIHtcbiAgICByb3V0ZSArPSAnJCdcbiAgfSBlbHNlIHtcbiAgICAvLyBJbiBub24tZW5kaW5nIG1vZGUsIHdlIG5lZWQgdGhlIGNhcHR1cmluZyBncm91cHMgdG8gbWF0Y2ggYXMgbXVjaCBhc1xuICAgIC8vIHBvc3NpYmxlIGJ5IHVzaW5nIGEgcG9zaXRpdmUgbG9va2FoZWFkIHRvIHRoZSBlbmQgb3IgbmV4dCBwYXRoIHNlZ21lbnQuXG4gICAgcm91dGUgKz0gc3RyaWN0ICYmIGVuZHNXaXRoRGVsaW1pdGVyID8gJycgOiAnKD89JyArIGRlbGltaXRlciArICd8JCknXG4gIH1cblxuICByZXR1cm4gYXR0YWNoS2V5cyhuZXcgUmVnRXhwKCdeJyArIHJvdXRlLCBmbGFncyhvcHRpb25zKSksIGtleXMpXG59XG5cbi8qKlxuICogTm9ybWFsaXplIHRoZSBnaXZlbiBwYXRoIHN0cmluZywgcmV0dXJuaW5nIGEgcmVndWxhciBleHByZXNzaW9uLlxuICpcbiAqIEFuIGVtcHR5IGFycmF5IGNhbiBiZSBwYXNzZWQgaW4gZm9yIHRoZSBrZXlzLCB3aGljaCB3aWxsIGhvbGQgdGhlXG4gKiBwbGFjZWhvbGRlciBrZXkgZGVzY3JpcHRpb25zLiBGb3IgZXhhbXBsZSwgdXNpbmcgYC91c2VyLzppZGAsIGBrZXlzYCB3aWxsXG4gKiBjb250YWluIGBbeyBuYW1lOiAnaWQnLCBkZWxpbWl0ZXI6ICcvJywgb3B0aW9uYWw6IGZhbHNlLCByZXBlYXQ6IGZhbHNlIH1dYC5cbiAqXG4gKiBAcGFyYW0gIHsoc3RyaW5nfFJlZ0V4cHxBcnJheSl9IHBhdGhcbiAqIEBwYXJhbSAgeyhBcnJheXxPYmplY3QpPX0gICAgICAga2V5c1xuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICAgICAgICBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBwYXRoVG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgaWYgKCFpc2FycmF5KGtleXMpKSB7XG4gICAgb3B0aW9ucyA9IC8qKiBAdHlwZSB7IU9iamVjdH0gKi8gKGtleXMgfHwgb3B0aW9ucylcbiAgICBrZXlzID0gW11cbiAgfVxuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XG5cbiAgaWYgKHBhdGggaW5zdGFuY2VvZiBSZWdFeHApIHtcbiAgICByZXR1cm4gcmVnZXhwVG9SZWdleHAocGF0aCwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSlcbiAgfVxuXG4gIGlmIChpc2FycmF5KHBhdGgpKSB7XG4gICAgcmV0dXJuIGFycmF5VG9SZWdleHAoLyoqIEB0eXBlIHshQXJyYXl9ICovIChwYXRoKSwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSwgb3B0aW9ucylcbiAgfVxuXG4gIHJldHVybiBzdHJpbmdUb1JlZ2V4cCgvKiogQHR5cGUge3N0cmluZ30gKi8gKHBhdGgpLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpLCBvcHRpb25zKVxufVxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNy4wLjFcbiAqIHJlYWN0LnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbid1c2Ugc3RyaWN0Jzt2YXIgbD1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxuPTYwMTAzLHA9NjAxMDY7ZXhwb3J0cy5GcmFnbWVudD02MDEwNztleHBvcnRzLlN0cmljdE1vZGU9NjAxMDg7ZXhwb3J0cy5Qcm9maWxlcj02MDExNDt2YXIgcT02MDEwOSxyPTYwMTEwLHQ9NjAxMTI7ZXhwb3J0cy5TdXNwZW5zZT02MDExMzt2YXIgdT02MDExNSx2PTYwMTE2O1xuaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcil7dmFyIHc9U3ltYm9sLmZvcjtuPXcoXCJyZWFjdC5lbGVtZW50XCIpO3A9dyhcInJlYWN0LnBvcnRhbFwiKTtleHBvcnRzLkZyYWdtZW50PXcoXCJyZWFjdC5mcmFnbWVudFwiKTtleHBvcnRzLlN0cmljdE1vZGU9dyhcInJlYWN0LnN0cmljdF9tb2RlXCIpO2V4cG9ydHMuUHJvZmlsZXI9dyhcInJlYWN0LnByb2ZpbGVyXCIpO3E9dyhcInJlYWN0LnByb3ZpZGVyXCIpO3I9dyhcInJlYWN0LmNvbnRleHRcIik7dD13KFwicmVhY3QuZm9yd2FyZF9yZWZcIik7ZXhwb3J0cy5TdXNwZW5zZT13KFwicmVhY3Quc3VzcGVuc2VcIik7dT13KFwicmVhY3QubWVtb1wiKTt2PXcoXCJyZWFjdC5sYXp5XCIpfXZhciB4PVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtcbmZ1bmN0aW9uIHkoYSl7aWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPXgmJmFbeF18fGFbXCJAQGl0ZXJhdG9yXCJdO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2E6bnVsbH1mdW5jdGlvbiB6KGEpe2Zvcih2YXIgYj1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0xO2M8YXJndW1lbnRzLmxlbmd0aDtjKyspYis9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbY10pO3JldHVyblwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0IFwiK2IrXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwifVxudmFyIEE9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319LEI9e307ZnVuY3Rpb24gQyhhLGIsYyl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1CO3RoaXMudXBkYXRlcj1jfHxBfUMucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQ9e307Qy5wcm90b3R5cGUuc2V0U3RhdGU9ZnVuY3Rpb24oYSxiKXtpZihcIm9iamVjdFwiIT09dHlwZW9mIGEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZudWxsIT1hKXRocm93IEVycm9yKHooODUpKTt0aGlzLnVwZGF0ZXIuZW5xdWV1ZVNldFN0YXRlKHRoaXMsYSxiLFwic2V0U3RhdGVcIil9O0MucHJvdG90eXBlLmZvcmNlVXBkYXRlPWZ1bmN0aW9uKGEpe3RoaXMudXBkYXRlci5lbnF1ZXVlRm9yY2VVcGRhdGUodGhpcyxhLFwiZm9yY2VVcGRhdGVcIil9O1xuZnVuY3Rpb24gRCgpe31ELnByb3RvdHlwZT1DLnByb3RvdHlwZTtmdW5jdGlvbiBFKGEsYixjKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUI7dGhpcy51cGRhdGVyPWN8fEF9dmFyIEY9RS5wcm90b3R5cGU9bmV3IEQ7Ri5jb25zdHJ1Y3Rvcj1FO2woRixDLnByb3RvdHlwZSk7Ri5pc1B1cmVSZWFjdENvbXBvbmVudD0hMDt2YXIgRz17Y3VycmVudDpudWxsfSxIPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksST17a2V5OiEwLHJlZjohMCxfX3NlbGY6ITAsX19zb3VyY2U6ITB9O1xuZnVuY3Rpb24gSihhLGIsYyl7dmFyIGUsZD17fSxrPW51bGwsaD1udWxsO2lmKG51bGwhPWIpZm9yKGUgaW4gdm9pZCAwIT09Yi5yZWYmJihoPWIucmVmKSx2b2lkIDAhPT1iLmtleSYmKGs9XCJcIitiLmtleSksYilILmNhbGwoYixlKSYmIUkuaGFzT3duUHJvcGVydHkoZSkmJihkW2VdPWJbZV0pO3ZhciBnPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZylkLmNoaWxkcmVuPWM7ZWxzZSBpZigxPGcpe2Zvcih2YXIgZj1BcnJheShnKSxtPTA7bTxnO20rKylmW21dPWFyZ3VtZW50c1ttKzJdO2QuY2hpbGRyZW49Zn1pZihhJiZhLmRlZmF1bHRQcm9wcylmb3IoZSBpbiBnPWEuZGVmYXVsdFByb3BzLGcpdm9pZCAwPT09ZFtlXSYmKGRbZV09Z1tlXSk7cmV0dXJueyQkdHlwZW9mOm4sdHlwZTphLGtleTprLHJlZjpoLHByb3BzOmQsX293bmVyOkcuY3VycmVudH19XG5mdW5jdGlvbiBLKGEsYil7cmV0dXJueyQkdHlwZW9mOm4sdHlwZTphLnR5cGUsa2V5OmIscmVmOmEucmVmLHByb3BzOmEucHJvcHMsX293bmVyOmEuX293bmVyfX1mdW5jdGlvbiBMKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1ufWZ1bmN0aW9uIGVzY2FwZShhKXt2YXIgYj17XCI9XCI6XCI9MFwiLFwiOlwiOlwiPTJcIn07cmV0dXJuXCIkXCIrYS5yZXBsYWNlKC9bPTpdL2csZnVuY3Rpb24oYSl7cmV0dXJuIGJbYV19KX12YXIgTT0vXFwvKy9nO2Z1bmN0aW9uIE4oYSxiKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZudWxsIT1hLmtleT9lc2NhcGUoXCJcIithLmtleSk6Yi50b1N0cmluZygzNil9XG5mdW5jdGlvbiBPKGEsYixjLGUsZCl7dmFyIGs9dHlwZW9mIGE7aWYoXCJ1bmRlZmluZWRcIj09PWt8fFwiYm9vbGVhblwiPT09aylhPW51bGw7dmFyIGg9ITE7aWYobnVsbD09PWEpaD0hMDtlbHNlIHN3aXRjaChrKXtjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm51bWJlclwiOmg9ITA7YnJlYWs7Y2FzZSBcIm9iamVjdFwiOnN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIG46Y2FzZSBwOmg9ITB9fWlmKGgpcmV0dXJuIGg9YSxkPWQoaCksYT1cIlwiPT09ZT9cIi5cIitOKGgsMCk6ZSxBcnJheS5pc0FycmF5KGQpPyhjPVwiXCIsbnVsbCE9YSYmKGM9YS5yZXBsYWNlKE0sXCIkJi9cIikrXCIvXCIpLE8oZCxiLGMsXCJcIixmdW5jdGlvbihhKXtyZXR1cm4gYX0pKTpudWxsIT1kJiYoTChkKSYmKGQ9SyhkLGMrKCFkLmtleXx8aCYmaC5rZXk9PT1kLmtleT9cIlwiOihcIlwiK2Qua2V5KS5yZXBsYWNlKE0sXCIkJi9cIikrXCIvXCIpK2EpKSxiLnB1c2goZCkpLDE7aD0wO2U9XCJcIj09PWU/XCIuXCI6ZStcIjpcIjtpZihBcnJheS5pc0FycmF5KGEpKWZvcih2YXIgZz1cbjA7ZzxhLmxlbmd0aDtnKyspe2s9YVtnXTt2YXIgZj1lK04oayxnKTtoKz1PKGssYixjLGYsZCl9ZWxzZSBpZihmPXkoYSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGYpZm9yKGE9Zi5jYWxsKGEpLGc9MDshKGs9YS5uZXh0KCkpLmRvbmU7KWs9ay52YWx1ZSxmPWUrTihrLGcrKyksaCs9TyhrLGIsYyxmLGQpO2Vsc2UgaWYoXCJvYmplY3RcIj09PWspdGhyb3cgYj1cIlwiK2EsRXJyb3IoeigzMSxcIltvYmplY3QgT2JqZWN0XVwiPT09Yj9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGEpLmpvaW4oXCIsIFwiKStcIn1cIjpiKSk7cmV0dXJuIGh9ZnVuY3Rpb24gUChhLGIsYyl7aWYobnVsbD09YSlyZXR1cm4gYTt2YXIgZT1bXSxkPTA7TyhhLGUsXCJcIixcIlwiLGZ1bmN0aW9uKGEpe3JldHVybiBiLmNhbGwoYyxhLGQrKyl9KTtyZXR1cm4gZX1cbmZ1bmN0aW9uIFEoYSl7aWYoLTE9PT1hLl9zdGF0dXMpe3ZhciBiPWEuX3Jlc3VsdDtiPWIoKTthLl9zdGF0dXM9MDthLl9yZXN1bHQ9YjtiLnRoZW4oZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGI9Yi5kZWZhdWx0LGEuX3N0YXR1cz0xLGEuX3Jlc3VsdD1iKX0sZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGEuX3N0YXR1cz0yLGEuX3Jlc3VsdD1iKX0pfWlmKDE9PT1hLl9zdGF0dXMpcmV0dXJuIGEuX3Jlc3VsdDt0aHJvdyBhLl9yZXN1bHQ7fXZhciBSPXtjdXJyZW50Om51bGx9O2Z1bmN0aW9uIFMoKXt2YXIgYT1SLmN1cnJlbnQ7aWYobnVsbD09PWEpdGhyb3cgRXJyb3IoeigzMjEpKTtyZXR1cm4gYX12YXIgVD17UmVhY3RDdXJyZW50RGlzcGF0Y2hlcjpSLFJlYWN0Q3VycmVudEJhdGNoQ29uZmlnOnt0cmFuc2l0aW9uOjB9LFJlYWN0Q3VycmVudE93bmVyOkcsSXNTb21lUmVuZGVyZXJBY3Rpbmc6e2N1cnJlbnQ6ITF9LGFzc2lnbjpsfTtcbmV4cG9ydHMuQ2hpbGRyZW49e21hcDpQLGZvckVhY2g6ZnVuY3Rpb24oYSxiLGMpe1AoYSxmdW5jdGlvbigpe2IuYXBwbHkodGhpcyxhcmd1bWVudHMpfSxjKX0sY291bnQ6ZnVuY3Rpb24oYSl7dmFyIGI9MDtQKGEsZnVuY3Rpb24oKXtiKyt9KTtyZXR1cm4gYn0sdG9BcnJheTpmdW5jdGlvbihhKXtyZXR1cm4gUChhLGZ1bmN0aW9uKGEpe3JldHVybiBhfSl8fFtdfSxvbmx5OmZ1bmN0aW9uKGEpe2lmKCFMKGEpKXRocm93IEVycm9yKHooMTQzKSk7cmV0dXJuIGF9fTtleHBvcnRzLkNvbXBvbmVudD1DO2V4cG9ydHMuUHVyZUNvbXBvbmVudD1FO2V4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9VDtcbmV4cG9ydHMuY2xvbmVFbGVtZW50PWZ1bmN0aW9uKGEsYixjKXtpZihudWxsPT09YXx8dm9pZCAwPT09YSl0aHJvdyBFcnJvcih6KDI2NyxhKSk7dmFyIGU9bCh7fSxhLnByb3BzKSxkPWEua2V5LGs9YS5yZWYsaD1hLl9vd25lcjtpZihudWxsIT1iKXt2b2lkIDAhPT1iLnJlZiYmKGs9Yi5yZWYsaD1HLmN1cnJlbnQpO3ZvaWQgMCE9PWIua2V5JiYoZD1cIlwiK2Iua2V5KTtpZihhLnR5cGUmJmEudHlwZS5kZWZhdWx0UHJvcHMpdmFyIGc9YS50eXBlLmRlZmF1bHRQcm9wcztmb3IoZiBpbiBiKUguY2FsbChiLGYpJiYhSS5oYXNPd25Qcm9wZXJ0eShmKSYmKGVbZl09dm9pZCAwPT09YltmXSYmdm9pZCAwIT09Zz9nW2ZdOmJbZl0pfXZhciBmPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZillLmNoaWxkcmVuPWM7ZWxzZSBpZigxPGYpe2c9QXJyYXkoZik7Zm9yKHZhciBtPTA7bTxmO20rKylnW21dPWFyZ3VtZW50c1ttKzJdO2UuY2hpbGRyZW49Z31yZXR1cm57JCR0eXBlb2Y6bix0eXBlOmEudHlwZSxcbmtleTpkLHJlZjprLHByb3BzOmUsX293bmVyOmh9fTtleHBvcnRzLmNyZWF0ZUNvbnRleHQ9ZnVuY3Rpb24oYSxiKXt2b2lkIDA9PT1iJiYoYj1udWxsKTthPXskJHR5cGVvZjpyLF9jYWxjdWxhdGVDaGFuZ2VkQml0czpiLF9jdXJyZW50VmFsdWU6YSxfY3VycmVudFZhbHVlMjphLF90aHJlYWRDb3VudDowLFByb3ZpZGVyOm51bGwsQ29uc3VtZXI6bnVsbH07YS5Qcm92aWRlcj17JCR0eXBlb2Y6cSxfY29udGV4dDphfTtyZXR1cm4gYS5Db25zdW1lcj1hfTtleHBvcnRzLmNyZWF0ZUVsZW1lbnQ9SjtleHBvcnRzLmNyZWF0ZUZhY3Rvcnk9ZnVuY3Rpb24oYSl7dmFyIGI9Si5iaW5kKG51bGwsYSk7Yi50eXBlPWE7cmV0dXJuIGJ9O2V4cG9ydHMuY3JlYXRlUmVmPWZ1bmN0aW9uKCl7cmV0dXJue2N1cnJlbnQ6bnVsbH19O2V4cG9ydHMuZm9yd2FyZFJlZj1mdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6dCxyZW5kZXI6YX19O2V4cG9ydHMuaXNWYWxpZEVsZW1lbnQ9TDtcbmV4cG9ydHMubGF6eT1mdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6dixfcGF5bG9hZDp7X3N0YXR1czotMSxfcmVzdWx0OmF9LF9pbml0OlF9fTtleHBvcnRzLm1lbW89ZnVuY3Rpb24oYSxiKXtyZXR1cm57JCR0eXBlb2Y6dSx0eXBlOmEsY29tcGFyZTp2b2lkIDA9PT1iP251bGw6Yn19O2V4cG9ydHMudXNlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gUygpLnVzZUNhbGxiYWNrKGEsYil9O2V4cG9ydHMudXNlQ29udGV4dD1mdW5jdGlvbihhLGIpe3JldHVybiBTKCkudXNlQ29udGV4dChhLGIpfTtleHBvcnRzLnVzZURlYnVnVmFsdWU9ZnVuY3Rpb24oKXt9O2V4cG9ydHMudXNlRWZmZWN0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFMoKS51c2VFZmZlY3QoYSxiKX07ZXhwb3J0cy51c2VJbXBlcmF0aXZlSGFuZGxlPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gUygpLnVzZUltcGVyYXRpdmVIYW5kbGUoYSxiLGMpfTtcbmV4cG9ydHMudXNlTGF5b3V0RWZmZWN0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFMoKS51c2VMYXlvdXRFZmZlY3QoYSxiKX07ZXhwb3J0cy51c2VNZW1vPWZ1bmN0aW9uKGEsYil7cmV0dXJuIFMoKS51c2VNZW1vKGEsYil9O2V4cG9ydHMudXNlUmVkdWNlcj1mdW5jdGlvbihhLGIsYyl7cmV0dXJuIFMoKS51c2VSZWR1Y2VyKGEsYixjKX07ZXhwb3J0cy51c2VSZWY9ZnVuY3Rpb24oYSl7cmV0dXJuIFMoKS51c2VSZWYoYSl9O2V4cG9ydHMudXNlU3RhdGU9ZnVuY3Rpb24oYSl7cmV0dXJuIFMoKS51c2VTdGF0ZShhKX07ZXhwb3J0cy52ZXJzaW9uPVwiMTcuMC4xXCI7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MC4yMC4xXG4gKiBzY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuJ3VzZSBzdHJpY3QnO3ZhciBmLGcsaCxrO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgcGVyZm9ybWFuY2UmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBwZXJmb3JtYW5jZS5ub3cpe3ZhciBsPXBlcmZvcm1hbmNlO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIGwubm93KCl9fWVsc2V7dmFyIHA9RGF0ZSxxPXAubm93KCk7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gcC5ub3coKS1xfX1cbmlmKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgTWVzc2FnZUNoYW5uZWwpe3ZhciB0PW51bGwsdT1udWxsLHc9ZnVuY3Rpb24oKXtpZihudWxsIT09dCl0cnl7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTt0KCEwLGEpO3Q9bnVsbH1jYXRjaChiKXt0aHJvdyBzZXRUaW1lb3V0KHcsMCksYjt9fTtmPWZ1bmN0aW9uKGEpe251bGwhPT10P3NldFRpbWVvdXQoZiwwLGEpOih0PWEsc2V0VGltZW91dCh3LDApKX07Zz1mdW5jdGlvbihhLGIpe3U9c2V0VGltZW91dChhLGIpfTtoPWZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KHUpfTtleHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkPWZ1bmN0aW9uKCl7cmV0dXJuITF9O2s9ZXhwb3J0cy51bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZT1mdW5jdGlvbigpe319ZWxzZXt2YXIgeD13aW5kb3cuc2V0VGltZW91dCx5PXdpbmRvdy5jbGVhclRpbWVvdXQ7aWYoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjb25zb2xlKXt2YXIgej1cbndpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZTtcImZ1bmN0aW9uXCIhPT10eXBlb2Ygd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgcmVxdWVzdEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL3JlYWN0anMub3JnL2xpbmsvcmVhY3QtcG9seWZpbGxzXCIpO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiB6JiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCBjYW5jZWxBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9yZWFjdGpzLm9yZy9saW5rL3JlYWN0LXBvbHlmaWxsc1wiKX12YXIgQT0hMSxCPW51bGwsQz0tMSxEPTUsRT0wO2V4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQ9ZnVuY3Rpb24oKXtyZXR1cm4gZXhwb3J0cy51bnN0YWJsZV9ub3coKT49XG5FfTtrPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlPWZ1bmN0aW9uKGEpezA+YXx8MTI1PGE/Y29uc29sZS5lcnJvcihcImZvcmNlRnJhbWVSYXRlIHRha2VzIGEgcG9zaXRpdmUgaW50IGJldHdlZW4gMCBhbmQgMTI1LCBmb3JjaW5nIGZyYW1lIHJhdGVzIGhpZ2hlciB0aGFuIDEyNSBmcHMgaXMgbm90IHN1cHBvcnRlZFwiKTpEPTA8YT9NYXRoLmZsb29yKDFFMy9hKTo1fTt2YXIgRj1uZXcgTWVzc2FnZUNoYW5uZWwsRz1GLnBvcnQyO0YucG9ydDEub25tZXNzYWdlPWZ1bmN0aW9uKCl7aWYobnVsbCE9PUIpe3ZhciBhPWV4cG9ydHMudW5zdGFibGVfbm93KCk7RT1hK0Q7dHJ5e0IoITAsYSk/Ry5wb3N0TWVzc2FnZShudWxsKTooQT0hMSxCPW51bGwpfWNhdGNoKGIpe3Rocm93IEcucG9zdE1lc3NhZ2UobnVsbCksYjt9fWVsc2UgQT0hMX07Zj1mdW5jdGlvbihhKXtCPWE7QXx8KEE9ITAsRy5wb3N0TWVzc2FnZShudWxsKSl9O2c9ZnVuY3Rpb24oYSxiKXtDPVxueChmdW5jdGlvbigpe2EoZXhwb3J0cy51bnN0YWJsZV9ub3coKSl9LGIpfTtoPWZ1bmN0aW9uKCl7eShDKTtDPS0xfX1mdW5jdGlvbiBIKGEsYil7dmFyIGM9YS5sZW5ndGg7YS5wdXNoKGIpO2E6Zm9yKDs7KXt2YXIgZD1jLTE+Pj4xLGU9YVtkXTtpZih2b2lkIDAhPT1lJiYwPEkoZSxiKSlhW2RdPWIsYVtjXT1lLGM9ZDtlbHNlIGJyZWFrIGF9fWZ1bmN0aW9uIEooYSl7YT1hWzBdO3JldHVybiB2b2lkIDA9PT1hP251bGw6YX1cbmZ1bmN0aW9uIEsoYSl7dmFyIGI9YVswXTtpZih2b2lkIDAhPT1iKXt2YXIgYz1hLnBvcCgpO2lmKGMhPT1iKXthWzBdPWM7YTpmb3IodmFyIGQ9MCxlPWEubGVuZ3RoO2Q8ZTspe3ZhciBtPTIqKGQrMSktMSxuPWFbbV0sdj1tKzEscj1hW3ZdO2lmKHZvaWQgMCE9PW4mJjA+SShuLGMpKXZvaWQgMCE9PXImJjA+SShyLG4pPyhhW2RdPXIsYVt2XT1jLGQ9dik6KGFbZF09bixhW21dPWMsZD1tKTtlbHNlIGlmKHZvaWQgMCE9PXImJjA+SShyLGMpKWFbZF09cixhW3ZdPWMsZD12O2Vsc2UgYnJlYWsgYX19cmV0dXJuIGJ9cmV0dXJuIG51bGx9ZnVuY3Rpb24gSShhLGIpe3ZhciBjPWEuc29ydEluZGV4LWIuc29ydEluZGV4O3JldHVybiAwIT09Yz9jOmEuaWQtYi5pZH12YXIgTD1bXSxNPVtdLE49MSxPPW51bGwsUD0zLFE9ITEsUj0hMSxTPSExO1xuZnVuY3Rpb24gVChhKXtmb3IodmFyIGI9SihNKTtudWxsIT09Yjspe2lmKG51bGw9PT1iLmNhbGxiYWNrKUsoTSk7ZWxzZSBpZihiLnN0YXJ0VGltZTw9YSlLKE0pLGIuc29ydEluZGV4PWIuZXhwaXJhdGlvblRpbWUsSChMLGIpO2Vsc2UgYnJlYWs7Yj1KKE0pfX1mdW5jdGlvbiBVKGEpe1M9ITE7VChhKTtpZighUilpZihudWxsIT09SihMKSlSPSEwLGYoVik7ZWxzZXt2YXIgYj1KKE0pO251bGwhPT1iJiZnKFUsYi5zdGFydFRpbWUtYSl9fVxuZnVuY3Rpb24gVihhLGIpe1I9ITE7UyYmKFM9ITEsaCgpKTtRPSEwO3ZhciBjPVA7dHJ5e1QoYik7Zm9yKE89SihMKTtudWxsIT09TyYmKCEoTy5leHBpcmF0aW9uVGltZT5iKXx8YSYmIWV4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQoKSk7KXt2YXIgZD1PLmNhbGxiYWNrO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXtPLmNhbGxiYWNrPW51bGw7UD1PLnByaW9yaXR5TGV2ZWw7dmFyIGU9ZChPLmV4cGlyYXRpb25UaW1lPD1iKTtiPWV4cG9ydHMudW5zdGFibGVfbm93KCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGU/Ty5jYWxsYmFjaz1lOk89PT1KKEwpJiZLKEwpO1QoYil9ZWxzZSBLKEwpO089SihMKX1pZihudWxsIT09Tyl2YXIgbT0hMDtlbHNle3ZhciBuPUooTSk7bnVsbCE9PW4mJmcoVSxuLnN0YXJ0VGltZS1iKTttPSExfXJldHVybiBtfWZpbmFsbHl7Tz1udWxsLFA9YyxRPSExfX12YXIgVz1rO2V4cG9ydHMudW5zdGFibGVfSWRsZVByaW9yaXR5PTU7XG5leHBvcnRzLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5PTE7ZXhwb3J0cy51bnN0YWJsZV9Mb3dQcmlvcml0eT00O2V4cG9ydHMudW5zdGFibGVfTm9ybWFsUHJpb3JpdHk9MztleHBvcnRzLnVuc3RhYmxlX1Byb2ZpbGluZz1udWxsO2V4cG9ydHMudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHk9MjtleHBvcnRzLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrPWZ1bmN0aW9uKGEpe2EuY2FsbGJhY2s9bnVsbH07ZXhwb3J0cy51bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbj1mdW5jdGlvbigpe1J8fFF8fChSPSEwLGYoVikpfTtleHBvcnRzLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsPWZ1bmN0aW9uKCl7cmV0dXJuIFB9O2V4cG9ydHMudW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGU9ZnVuY3Rpb24oKXtyZXR1cm4gSihMKX07XG5leHBvcnRzLnVuc3RhYmxlX25leHQ9ZnVuY3Rpb24oYSl7c3dpdGNoKFApe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOnZhciBiPTM7YnJlYWs7ZGVmYXVsdDpiPVB9dmFyIGM9UDtQPWI7dHJ5e3JldHVybiBhKCl9ZmluYWxseXtQPWN9fTtleHBvcnRzLnVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX3JlcXVlc3RQYWludD1XO2V4cG9ydHMudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5PWZ1bmN0aW9uKGEsYil7c3dpdGNoKGEpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOmNhc2UgNDpjYXNlIDU6YnJlYWs7ZGVmYXVsdDphPTN9dmFyIGM9UDtQPWE7dHJ5e3JldHVybiBiKCl9ZmluYWxseXtQPWN9fTtcbmV4cG9ydHMudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjaz1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jPyhjPWMuZGVsYXksYz1cIm51bWJlclwiPT09dHlwZW9mIGMmJjA8Yz9kK2M6ZCk6Yz1kO3N3aXRjaChhKXtjYXNlIDE6dmFyIGU9LTE7YnJlYWs7Y2FzZSAyOmU9MjUwO2JyZWFrO2Nhc2UgNTplPTEwNzM3NDE4MjM7YnJlYWs7Y2FzZSA0OmU9MUU0O2JyZWFrO2RlZmF1bHQ6ZT01RTN9ZT1jK2U7YT17aWQ6TisrLGNhbGxiYWNrOmIscHJpb3JpdHlMZXZlbDphLHN0YXJ0VGltZTpjLGV4cGlyYXRpb25UaW1lOmUsc29ydEluZGV4Oi0xfTtjPmQ/KGEuc29ydEluZGV4PWMsSChNLGEpLG51bGw9PT1KKEwpJiZhPT09SihNKSYmKFM/aCgpOlM9ITAsZyhVLGMtZCkpKTooYS5zb3J0SW5kZXg9ZSxIKEwsYSksUnx8UXx8KFI9ITAsZihWKSkpO3JldHVybiBhfTtcbmV4cG9ydHMudW5zdGFibGVfd3JhcENhbGxiYWNrPWZ1bmN0aW9uKGEpe3ZhciBiPVA7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGM9UDtQPWI7dHJ5e3JldHVybiBhLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1maW5hbGx5e1A9Y319fTtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHNoYWxsb3dFcXVhbChvYmpBLCBvYmpCLCBjb21wYXJlLCBjb21wYXJlQ29udGV4dCkge1xuICB2YXIgcmV0ID0gY29tcGFyZSA/IGNvbXBhcmUuY2FsbChjb21wYXJlQ29udGV4dCwgb2JqQSwgb2JqQikgOiB2b2lkIDA7XG5cbiAgaWYgKHJldCAhPT0gdm9pZCAwKSB7XG4gICAgcmV0dXJuICEhcmV0O1xuICB9XG5cbiAgaWYgKG9iakEgPT09IG9iakIpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGlmICh0eXBlb2Ygb2JqQSAhPT0gXCJvYmplY3RcIiB8fCAhb2JqQSB8fCB0eXBlb2Ygb2JqQiAhPT0gXCJvYmplY3RcIiB8fCAhb2JqQikge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHZhciBrZXlzQSA9IE9iamVjdC5rZXlzKG9iakEpO1xuICB2YXIga2V5c0IgPSBPYmplY3Qua2V5cyhvYmpCKTtcblxuICBpZiAoa2V5c0EubGVuZ3RoICE9PSBrZXlzQi5sZW5ndGgpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICB2YXIgYkhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5iaW5kKG9iakIpO1xuXG4gIC8vIFRlc3QgZm9yIEEncyBrZXlzIGRpZmZlcmVudCBmcm9tIEIuXG4gIGZvciAodmFyIGlkeCA9IDA7IGlkeCA8IGtleXNBLmxlbmd0aDsgaWR4KyspIHtcbiAgICB2YXIga2V5ID0ga2V5c0FbaWR4XTtcblxuICAgIGlmICghYkhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICB2YXIgdmFsdWVBID0gb2JqQVtrZXldO1xuICAgIHZhciB2YWx1ZUIgPSBvYmpCW2tleV07XG5cbiAgICByZXQgPSBjb21wYXJlID8gY29tcGFyZS5jYWxsKGNvbXBhcmVDb250ZXh0LCB2YWx1ZUEsIHZhbHVlQiwga2V5KSA6IHZvaWQgMDtcblxuICAgIGlmIChyZXQgPT09IGZhbHNlIHx8IChyZXQgPT09IHZvaWQgMCAmJiB2YWx1ZUEgIT09IHZhbHVlQikpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn07XG4iLCJpbXBvcnQgYXBpIGZyb20gXCIhLi4vc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgICAgICAgIGltcG9ydCBjb250ZW50IGZyb20gXCIhIS4uL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9pbmRleC5jc3NcIjtcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgZGVmYXVsdCBjb250ZW50LmxvY2FscyB8fCB7fTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIGlzT2xkSUUgPSBmdW5jdGlvbiBpc09sZElFKCkge1xuICB2YXIgbWVtbztcbiAgcmV0dXJuIGZ1bmN0aW9uIG1lbW9yaXplKCkge1xuICAgIGlmICh0eXBlb2YgbWVtbyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIC8vIFRlc3QgZm9yIElFIDw9IDkgYXMgcHJvcG9zZWQgYnkgQnJvd3NlcmhhY2tzXG4gICAgICAvLyBAc2VlIGh0dHA6Ly9icm93c2VyaGFja3MuY29tLyNoYWNrLWU3MWQ4NjkyZjY1MzM0MTczZmVlNzE1YzIyMmNiODA1XG4gICAgICAvLyBUZXN0cyBmb3IgZXhpc3RlbmNlIG9mIHN0YW5kYXJkIGdsb2JhbHMgaXMgdG8gYWxsb3cgc3R5bGUtbG9hZGVyXG4gICAgICAvLyB0byBvcGVyYXRlIGNvcnJlY3RseSBpbnRvIG5vbi1zdGFuZGFyZCBlbnZpcm9ubWVudHNcbiAgICAgIC8vIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIvaXNzdWVzLzE3N1xuICAgICAgbWVtbyA9IEJvb2xlYW4od2luZG93ICYmIGRvY3VtZW50ICYmIGRvY3VtZW50LmFsbCAmJiAhd2luZG93LmF0b2IpO1xuICAgIH1cblxuICAgIHJldHVybiBtZW1vO1xuICB9O1xufSgpO1xuXG52YXIgZ2V0VGFyZ2V0ID0gZnVuY3Rpb24gZ2V0VGFyZ2V0KCkge1xuICB2YXIgbWVtbyA9IHt9O1xuICByZXR1cm4gZnVuY3Rpb24gbWVtb3JpemUodGFyZ2V0KSB7XG4gICAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICAgIH1cblxuICAgIHJldHVybiBtZW1vW3RhcmdldF07XG4gIH07XG59KCk7XG5cbnZhciBzdHlsZXNJbkRvbSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRG9tLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRG9tW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM11cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRG9tW2luZGV4XS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlc0luRG9tLnB1c2goe1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiBhZGRTdHlsZShvYmosIG9wdGlvbnMpLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICB2YXIgYXR0cmlidXRlcyA9IG9wdGlvbnMuYXR0cmlidXRlcyB8fCB7fTtcblxuICBpZiAodHlwZW9mIGF0dHJpYnV0ZXMubm9uY2UgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSAndW5kZWZpbmVkJyA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICAgIGlmIChub25jZSkge1xuICAgICAgYXR0cmlidXRlcy5ub25jZSA9IG5vbmNlO1xuICAgIH1cbiAgfVxuXG4gIE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIHN0eWxlLnNldEF0dHJpYnV0ZShrZXksIGF0dHJpYnV0ZXNba2V5XSk7XG4gIH0pO1xuXG4gIGlmICh0eXBlb2Ygb3B0aW9ucy5pbnNlcnQgPT09ICdmdW5jdGlvbicpIHtcbiAgICBvcHRpb25zLmluc2VydChzdHlsZSk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIHRhcmdldCA9IGdldFRhcmdldChvcHRpb25zLmluc2VydCB8fCAnaGVhZCcpO1xuXG4gICAgaWYgKCF0YXJnZXQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gICAgfVxuXG4gICAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbiAgfVxuXG4gIHJldHVybiBzdHlsZTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGUucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGUpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxudmFyIHJlcGxhY2VUZXh0ID0gZnVuY3Rpb24gcmVwbGFjZVRleHQoKSB7XG4gIHZhciB0ZXh0U3RvcmUgPSBbXTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHJlcGxhY2UoaW5kZXgsIHJlcGxhY2VtZW50KSB7XG4gICAgdGV4dFN0b3JlW2luZGV4XSA9IHJlcGxhY2VtZW50O1xuICAgIHJldHVybiB0ZXh0U3RvcmUuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJ1xcbicpO1xuICB9O1xufSgpO1xuXG5mdW5jdGlvbiBhcHBseVRvU2luZ2xldG9uVGFnKHN0eWxlLCBpbmRleCwgcmVtb3ZlLCBvYmopIHtcbiAgdmFyIGNzcyA9IHJlbW92ZSA/ICcnIDogb2JqLm1lZGlhID8gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKS5jb25jYXQob2JqLmNzcywgXCJ9XCIpIDogb2JqLmNzczsgLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuICBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IHJlcGxhY2VUZXh0KGluZGV4LCBjc3MpO1xuICB9IGVsc2Uge1xuICAgIHZhciBjc3NOb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKTtcbiAgICB2YXIgY2hpbGROb2RlcyA9IHN0eWxlLmNoaWxkTm9kZXM7XG5cbiAgICBpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHtcbiAgICAgIHN0eWxlLnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTtcbiAgICB9XG5cbiAgICBpZiAoY2hpbGROb2Rlcy5sZW5ndGgpIHtcbiAgICAgIHN0eWxlLmluc2VydEJlZm9yZShjc3NOb2RlLCBjaGlsZE5vZGVzW2luZGV4XSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlLmFwcGVuZENoaWxkKGNzc05vZGUpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBhcHBseVRvVGFnKHN0eWxlLCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IG9iai5jc3M7XG4gIHZhciBtZWRpYSA9IG9iai5tZWRpYTtcbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKG1lZGlhKSB7XG4gICAgc3R5bGUuc2V0QXR0cmlidXRlKCdtZWRpYScsIG1lZGlhKTtcbiAgfSBlbHNlIHtcbiAgICBzdHlsZS5yZW1vdmVBdHRyaWJ1dGUoJ21lZGlhJyk7XG4gIH1cblxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSAndW5kZWZpbmVkJykge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGUuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGUucmVtb3ZlQ2hpbGQoc3R5bGUuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxudmFyIHNpbmdsZXRvbiA9IG51bGw7XG52YXIgc2luZ2xldG9uQ291bnRlciA9IDA7XG5cbmZ1bmN0aW9uIGFkZFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgc3R5bGU7XG4gIHZhciB1cGRhdGU7XG4gIHZhciByZW1vdmU7XG5cbiAgaWYgKG9wdGlvbnMuc2luZ2xldG9uKSB7XG4gICAgdmFyIHN0eWxlSW5kZXggPSBzaW5nbGV0b25Db3VudGVyKys7XG4gICAgc3R5bGUgPSBzaW5nbGV0b24gfHwgKHNpbmdsZXRvbiA9IGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSk7XG4gICAgdXBkYXRlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCBmYWxzZSk7XG4gICAgcmVtb3ZlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCB0cnVlKTtcbiAgfSBlbHNlIHtcbiAgICBzdHlsZSA9IGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgICB1cGRhdGUgPSBhcHBseVRvVGFnLmJpbmQobnVsbCwgc3R5bGUsIG9wdGlvbnMpO1xuXG4gICAgcmVtb3ZlID0gZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcbiAgICB9O1xuICB9XG5cbiAgdXBkYXRlKG9iaik7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGVTdHlsZShuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTsgLy8gRm9yY2Ugc2luZ2xlLXRhZyBzb2x1dGlvbiBvbiBJRTYtOSwgd2hpY2ggaGFzIGEgaGFyZCBsaW1pdCBvbiB0aGUgIyBvZiA8c3R5bGU+XG4gIC8vIHRhZ3MgaXQgd2lsbCBhbGxvdyBvbiBhIHBhZ2VcblxuICBpZiAoIW9wdGlvbnMuc2luZ2xldG9uICYmIHR5cGVvZiBvcHRpb25zLnNpbmdsZXRvbiAhPT0gJ2Jvb2xlYW4nKSB7XG4gICAgb3B0aW9ucy5zaW5nbGV0b24gPSBpc09sZElFKCk7XG4gIH1cblxuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG5ld0xpc3QpICE9PSAnW29iamVjdCBBcnJheV0nKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRvbVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRG9tW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRvbVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRvbS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsImZ1bmN0aW9uIHN0eWxpc19taW4gKFcpIHtcbiAgZnVuY3Rpb24gTShkLCBjLCBlLCBoLCBhKSB7XG4gICAgZm9yICh2YXIgbSA9IDAsIGIgPSAwLCB2ID0gMCwgbiA9IDAsIHEsIGcsIHggPSAwLCBLID0gMCwgaywgdSA9IGsgPSBxID0gMCwgbCA9IDAsIHIgPSAwLCBJID0gMCwgdCA9IDAsIEIgPSBlLmxlbmd0aCwgSiA9IEIgLSAxLCB5LCBmID0gJycsIHAgPSAnJywgRiA9ICcnLCBHID0gJycsIEM7IGwgPCBCOykge1xuICAgICAgZyA9IGUuY2hhckNvZGVBdChsKTtcbiAgICAgIGwgPT09IEogJiYgMCAhPT0gYiArIG4gKyB2ICsgbSAmJiAoMCAhPT0gYiAmJiAoZyA9IDQ3ID09PSBiID8gMTAgOiA0NyksIG4gPSB2ID0gbSA9IDAsIEIrKywgSisrKTtcblxuICAgICAgaWYgKDAgPT09IGIgKyBuICsgdiArIG0pIHtcbiAgICAgICAgaWYgKGwgPT09IEogJiYgKDAgPCByICYmIChmID0gZi5yZXBsYWNlKE4sICcnKSksIDAgPCBmLnRyaW0oKS5sZW5ndGgpKSB7XG4gICAgICAgICAgc3dpdGNoIChnKSB7XG4gICAgICAgICAgICBjYXNlIDMyOlxuICAgICAgICAgICAgY2FzZSA5OlxuICAgICAgICAgICAgY2FzZSA1OTpcbiAgICAgICAgICAgIGNhc2UgMTM6XG4gICAgICAgICAgICBjYXNlIDEwOlxuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgZiArPSBlLmNoYXJBdChsKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBnID0gNTk7XG4gICAgICAgIH1cblxuICAgICAgICBzd2l0Y2ggKGcpIHtcbiAgICAgICAgICBjYXNlIDEyMzpcbiAgICAgICAgICAgIGYgPSBmLnRyaW0oKTtcbiAgICAgICAgICAgIHEgPSBmLmNoYXJDb2RlQXQoMCk7XG4gICAgICAgICAgICBrID0gMTtcblxuICAgICAgICAgICAgZm9yICh0ID0gKytsOyBsIDwgQjspIHtcbiAgICAgICAgICAgICAgc3dpdGNoIChnID0gZS5jaGFyQ29kZUF0KGwpKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAxMjM6XG4gICAgICAgICAgICAgICAgICBrKys7XG4gICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgIGNhc2UgMTI1OlxuICAgICAgICAgICAgICAgICAgay0tO1xuICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICBjYXNlIDQ3OlxuICAgICAgICAgICAgICAgICAgc3dpdGNoIChnID0gZS5jaGFyQ29kZUF0KGwgKyAxKSkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDQyOlxuICAgICAgICAgICAgICAgICAgICBjYXNlIDQ3OlxuICAgICAgICAgICAgICAgICAgICAgIGE6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodSA9IGwgKyAxOyB1IDwgSjsgKyt1KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoZS5jaGFyQ29kZUF0KHUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSA0NzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICg0MiA9PT0gZyAmJiA0MiA9PT0gZS5jaGFyQ29kZUF0KHUgLSAxKSAmJiBsICsgMiAhPT0gdSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsID0gdSArIDE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrIGE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAxMDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICg0NyA9PT0gZykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsID0gdSArIDE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrIGE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICBsID0gdTtcbiAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICBjYXNlIDkxOlxuICAgICAgICAgICAgICAgICAgZysrO1xuXG4gICAgICAgICAgICAgICAgY2FzZSA0MDpcbiAgICAgICAgICAgICAgICAgIGcrKztcblxuICAgICAgICAgICAgICAgIGNhc2UgMzQ6XG4gICAgICAgICAgICAgICAgY2FzZSAzOTpcbiAgICAgICAgICAgICAgICAgIGZvciAoOyBsKysgPCBKICYmIGUuY2hhckNvZGVBdChsKSAhPT0gZzspIHtcbiAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgaWYgKDAgPT09IGspIGJyZWFrO1xuICAgICAgICAgICAgICBsKys7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGsgPSBlLnN1YnN0cmluZyh0LCBsKTtcbiAgICAgICAgICAgIDAgPT09IHEgJiYgKHEgPSAoZiA9IGYucmVwbGFjZShjYSwgJycpLnRyaW0oKSkuY2hhckNvZGVBdCgwKSk7XG5cbiAgICAgICAgICAgIHN3aXRjaCAocSkge1xuICAgICAgICAgICAgICBjYXNlIDY0OlxuICAgICAgICAgICAgICAgIDAgPCByICYmIChmID0gZi5yZXBsYWNlKE4sICcnKSk7XG4gICAgICAgICAgICAgICAgZyA9IGYuY2hhckNvZGVBdCgxKTtcblxuICAgICAgICAgICAgICAgIHN3aXRjaCAoZykge1xuICAgICAgICAgICAgICAgICAgY2FzZSAxMDA6XG4gICAgICAgICAgICAgICAgICBjYXNlIDEwOTpcbiAgICAgICAgICAgICAgICAgIGNhc2UgMTE1OlxuICAgICAgICAgICAgICAgICAgY2FzZSA0NTpcbiAgICAgICAgICAgICAgICAgICAgciA9IGM7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICByID0gTztcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBrID0gTShjLCByLCBrLCBnLCBhICsgMSk7XG4gICAgICAgICAgICAgICAgdCA9IGsubGVuZ3RoO1xuICAgICAgICAgICAgICAgIDAgPCBBICYmIChyID0gWChPLCBmLCBJKSwgQyA9IEgoMywgaywgciwgYywgRCwgeiwgdCwgZywgYSwgaCksIGYgPSByLmpvaW4oJycpLCB2b2lkIDAgIT09IEMgJiYgMCA9PT0gKHQgPSAoayA9IEMudHJpbSgpKS5sZW5ndGgpICYmIChnID0gMCwgayA9ICcnKSk7XG4gICAgICAgICAgICAgICAgaWYgKDAgPCB0KSBzd2l0Y2ggKGcpIHtcbiAgICAgICAgICAgICAgICAgIGNhc2UgMTE1OlxuICAgICAgICAgICAgICAgICAgICBmID0gZi5yZXBsYWNlKGRhLCBlYSk7XG5cbiAgICAgICAgICAgICAgICAgIGNhc2UgMTAwOlxuICAgICAgICAgICAgICAgICAgY2FzZSAxMDk6XG4gICAgICAgICAgICAgICAgICBjYXNlIDQ1OlxuICAgICAgICAgICAgICAgICAgICBrID0gZiArICd7JyArIGsgKyAnfSc7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgICBjYXNlIDEwNzpcbiAgICAgICAgICAgICAgICAgICAgZiA9IGYucmVwbGFjZShmYSwgJyQxICQyJyk7XG4gICAgICAgICAgICAgICAgICAgIGsgPSBmICsgJ3snICsgayArICd9JztcbiAgICAgICAgICAgICAgICAgICAgayA9IDEgPT09IHcgfHwgMiA9PT0gdyAmJiBMKCdAJyArIGssIDMpID8gJ0Atd2Via2l0LScgKyBrICsgJ0AnICsgayA6ICdAJyArIGs7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICBrID0gZiArIGssIDExMiA9PT0gaCAmJiAoayA9IChwICs9IGssICcnKSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGsgPSAnJztcbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIGsgPSBNKGMsIFgoYywgZiwgSSksIGssIGgsIGEgKyAxKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgRiArPSBrO1xuICAgICAgICAgICAgayA9IEkgPSByID0gdSA9IHEgPSAwO1xuICAgICAgICAgICAgZiA9ICcnO1xuICAgICAgICAgICAgZyA9IGUuY2hhckNvZGVBdCgrK2wpO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICBjYXNlIDEyNTpcbiAgICAgICAgICBjYXNlIDU5OlxuICAgICAgICAgICAgZiA9ICgwIDwgciA/IGYucmVwbGFjZShOLCAnJykgOiBmKS50cmltKCk7XG4gICAgICAgICAgICBpZiAoMSA8ICh0ID0gZi5sZW5ndGgpKSBzd2l0Y2ggKDAgPT09IHUgJiYgKHEgPSBmLmNoYXJDb2RlQXQoMCksIDQ1ID09PSBxIHx8IDk2IDwgcSAmJiAxMjMgPiBxKSAmJiAodCA9IChmID0gZi5yZXBsYWNlKCcgJywgJzonKSkubGVuZ3RoKSwgMCA8IEEgJiYgdm9pZCAwICE9PSAoQyA9IEgoMSwgZiwgYywgZCwgRCwgeiwgcC5sZW5ndGgsIGgsIGEsIGgpKSAmJiAwID09PSAodCA9IChmID0gQy50cmltKCkpLmxlbmd0aCkgJiYgKGYgPSAnXFx4MDBcXHgwMCcpLCBxID0gZi5jaGFyQ29kZUF0KDApLCBnID0gZi5jaGFyQ29kZUF0KDEpLCBxKSB7XG4gICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICBjYXNlIDY0OlxuICAgICAgICAgICAgICAgIGlmICgxMDUgPT09IGcgfHwgOTkgPT09IGcpIHtcbiAgICAgICAgICAgICAgICAgIEcgKz0gZiArIGUuY2hhckF0KGwpO1xuICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgNTggIT09IGYuY2hhckNvZGVBdCh0IC0gMSkgJiYgKHAgKz0gUChmLCBxLCBnLCBmLmNoYXJDb2RlQXQoMikpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIEkgPSByID0gdSA9IHEgPSAwO1xuICAgICAgICAgICAgZiA9ICcnO1xuICAgICAgICAgICAgZyA9IGUuY2hhckNvZGVBdCgrK2wpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHN3aXRjaCAoZykge1xuICAgICAgICBjYXNlIDEzOlxuICAgICAgICBjYXNlIDEwOlxuICAgICAgICAgIDQ3ID09PSBiID8gYiA9IDAgOiAwID09PSAxICsgcSAmJiAxMDcgIT09IGggJiYgMCA8IGYubGVuZ3RoICYmIChyID0gMSwgZiArPSAnXFx4MDAnKTtcbiAgICAgICAgICAwIDwgQSAqIFkgJiYgSCgwLCBmLCBjLCBkLCBELCB6LCBwLmxlbmd0aCwgaCwgYSwgaCk7XG4gICAgICAgICAgeiA9IDE7XG4gICAgICAgICAgRCsrO1xuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgNTk6XG4gICAgICAgIGNhc2UgMTI1OlxuICAgICAgICAgIGlmICgwID09PSBiICsgbiArIHYgKyBtKSB7XG4gICAgICAgICAgICB6Kys7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG5cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICB6Kys7XG4gICAgICAgICAgeSA9IGUuY2hhckF0KGwpO1xuXG4gICAgICAgICAgc3dpdGNoIChnKSB7XG4gICAgICAgICAgICBjYXNlIDk6XG4gICAgICAgICAgICBjYXNlIDMyOlxuICAgICAgICAgICAgICBpZiAoMCA9PT0gbiArIG0gKyBiKSBzd2l0Y2ggKHgpIHtcbiAgICAgICAgICAgICAgICBjYXNlIDQ0OlxuICAgICAgICAgICAgICAgIGNhc2UgNTg6XG4gICAgICAgICAgICAgICAgY2FzZSA5OlxuICAgICAgICAgICAgICAgIGNhc2UgMzI6XG4gICAgICAgICAgICAgICAgICB5ID0gJyc7XG4gICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAzMiAhPT0gZyAmJiAoeSA9ICcgJyk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgeSA9ICdcXFxcMCc7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDEyOlxuICAgICAgICAgICAgICB5ID0gJ1xcXFxmJztcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgMTE6XG4gICAgICAgICAgICAgIHkgPSAnXFxcXHYnO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSAzODpcbiAgICAgICAgICAgICAgMCA9PT0gbiArIGIgKyBtICYmIChyID0gSSA9IDEsIHkgPSAnXFxmJyArIHkpO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSAxMDg6XG4gICAgICAgICAgICAgIGlmICgwID09PSBuICsgYiArIG0gKyBFICYmIDAgPCB1KSBzd2l0Y2ggKGwgLSB1KSB7XG4gICAgICAgICAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgICAgICAgMTEyID09PSB4ICYmIDU4ID09PSBlLmNoYXJDb2RlQXQobCAtIDMpICYmIChFID0geCk7XG5cbiAgICAgICAgICAgICAgICBjYXNlIDg6XG4gICAgICAgICAgICAgICAgICAxMTEgPT09IEsgJiYgKEUgPSBLKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSA1ODpcbiAgICAgICAgICAgICAgMCA9PT0gbiArIGIgKyBtICYmICh1ID0gbCk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDQ0OlxuICAgICAgICAgICAgICAwID09PSBiICsgdiArIG4gKyBtICYmIChyID0gMSwgeSArPSAnXFxyJyk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDM0OlxuICAgICAgICAgICAgY2FzZSAzOTpcbiAgICAgICAgICAgICAgMCA9PT0gYiAmJiAobiA9IG4gPT09IGcgPyAwIDogMCA9PT0gbiA/IGcgOiBuKTtcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgOTE6XG4gICAgICAgICAgICAgIDAgPT09IG4gKyBiICsgdiAmJiBtKys7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDkzOlxuICAgICAgICAgICAgICAwID09PSBuICsgYiArIHYgJiYgbS0tO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSA0MTpcbiAgICAgICAgICAgICAgMCA9PT0gbiArIGIgKyBtICYmIHYtLTtcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgNDA6XG4gICAgICAgICAgICAgIGlmICgwID09PSBuICsgYiArIG0pIHtcbiAgICAgICAgICAgICAgICBpZiAoMCA9PT0gcSkgc3dpdGNoICgyICogeCArIDMgKiBLKSB7XG4gICAgICAgICAgICAgICAgICBjYXNlIDUzMzpcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIHEgPSAxO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2Kys7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSA2NDpcbiAgICAgICAgICAgICAgMCA9PT0gYiArIHYgKyBuICsgbSArIHUgKyBrICYmIChrID0gMSk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDQyOlxuICAgICAgICAgICAgY2FzZSA0NzpcbiAgICAgICAgICAgICAgaWYgKCEoMCA8IG4gKyBtICsgdikpIHN3aXRjaCAoYikge1xuICAgICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICAgIHN3aXRjaCAoMiAqIGcgKyAzICogZS5jaGFyQ29kZUF0KGwgKyAxKSkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDIzNTpcbiAgICAgICAgICAgICAgICAgICAgICBiID0gNDc7XG4gICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICAgICAgY2FzZSAyMjA6XG4gICAgICAgICAgICAgICAgICAgICAgdCA9IGwsIGIgPSA0MjtcbiAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICBjYXNlIDQyOlxuICAgICAgICAgICAgICAgICAgNDcgPT09IGcgJiYgNDIgPT09IHggJiYgdCArIDIgIT09IGwgJiYgKDMzID09PSBlLmNoYXJDb2RlQXQodCArIDIpICYmIChwICs9IGUuc3Vic3RyaW5nKHQsIGwgKyAxKSksIHkgPSAnJywgYiA9IDApO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgMCA9PT0gYiAmJiAoZiArPSB5KTtcbiAgICAgIH1cblxuICAgICAgSyA9IHg7XG4gICAgICB4ID0gZztcbiAgICAgIGwrKztcbiAgICB9XG5cbiAgICB0ID0gcC5sZW5ndGg7XG5cbiAgICBpZiAoMCA8IHQpIHtcbiAgICAgIHIgPSBjO1xuICAgICAgaWYgKDAgPCBBICYmIChDID0gSCgyLCBwLCByLCBkLCBELCB6LCB0LCBoLCBhLCBoKSwgdm9pZCAwICE9PSBDICYmIDAgPT09IChwID0gQykubGVuZ3RoKSkgcmV0dXJuIEcgKyBwICsgRjtcbiAgICAgIHAgPSByLmpvaW4oJywnKSArICd7JyArIHAgKyAnfSc7XG5cbiAgICAgIGlmICgwICE9PSB3ICogRSkge1xuICAgICAgICAyICE9PSB3IHx8IEwocCwgMikgfHwgKEUgPSAwKTtcblxuICAgICAgICBzd2l0Y2ggKEUpIHtcbiAgICAgICAgICBjYXNlIDExMTpcbiAgICAgICAgICAgIHAgPSBwLnJlcGxhY2UoaGEsICc6LW1vei0kMScpICsgcDtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgY2FzZSAxMTI6XG4gICAgICAgICAgICBwID0gcC5yZXBsYWNlKFEsICc6Oi13ZWJraXQtaW5wdXQtJDEnKSArIHAucmVwbGFjZShRLCAnOjotbW96LSQxJykgKyBwLnJlcGxhY2UoUSwgJzotbXMtaW5wdXQtJDEnKSArIHA7XG4gICAgICAgIH1cblxuICAgICAgICBFID0gMDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gRyArIHAgKyBGO1xuICB9XG5cbiAgZnVuY3Rpb24gWChkLCBjLCBlKSB7XG4gICAgdmFyIGggPSBjLnRyaW0oKS5zcGxpdChpYSk7XG4gICAgYyA9IGg7XG4gICAgdmFyIGEgPSBoLmxlbmd0aCxcbiAgICAgICAgbSA9IGQubGVuZ3RoO1xuXG4gICAgc3dpdGNoIChtKSB7XG4gICAgICBjYXNlIDA6XG4gICAgICBjYXNlIDE6XG4gICAgICAgIHZhciBiID0gMDtcblxuICAgICAgICBmb3IgKGQgPSAwID09PSBtID8gJycgOiBkWzBdICsgJyAnOyBiIDwgYTsgKytiKSB7XG4gICAgICAgICAgY1tiXSA9IFooZCwgY1tiXSwgZSkudHJpbSgpO1xuICAgICAgICB9XG5cbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHZhciB2ID0gYiA9IDA7XG5cbiAgICAgICAgZm9yIChjID0gW107IGIgPCBhOyArK2IpIHtcbiAgICAgICAgICBmb3IgKHZhciBuID0gMDsgbiA8IG07ICsrbikge1xuICAgICAgICAgICAgY1t2KytdID0gWihkW25dICsgJyAnLCBoW2JdLCBlKS50cmltKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICB9XG5cbiAgICByZXR1cm4gYztcbiAgfVxuXG4gIGZ1bmN0aW9uIFooZCwgYywgZSkge1xuICAgIHZhciBoID0gYy5jaGFyQ29kZUF0KDApO1xuICAgIDMzID4gaCAmJiAoaCA9IChjID0gYy50cmltKCkpLmNoYXJDb2RlQXQoMCkpO1xuXG4gICAgc3dpdGNoIChoKSB7XG4gICAgICBjYXNlIDM4OlxuICAgICAgICByZXR1cm4gYy5yZXBsYWNlKEYsICckMScgKyBkLnRyaW0oKSk7XG5cbiAgICAgIGNhc2UgNTg6XG4gICAgICAgIHJldHVybiBkLnRyaW0oKSArIGMucmVwbGFjZShGLCAnJDEnICsgZC50cmltKCkpO1xuXG4gICAgICBkZWZhdWx0OlxuICAgICAgICBpZiAoMCA8IDEgKiBlICYmIDAgPCBjLmluZGV4T2YoJ1xcZicpKSByZXR1cm4gYy5yZXBsYWNlKEYsICg1OCA9PT0gZC5jaGFyQ29kZUF0KDApID8gJycgOiAnJDEnKSArIGQudHJpbSgpKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZCArIGM7XG4gIH1cblxuICBmdW5jdGlvbiBQKGQsIGMsIGUsIGgpIHtcbiAgICB2YXIgYSA9IGQgKyAnOycsXG4gICAgICAgIG0gPSAyICogYyArIDMgKiBlICsgNCAqIGg7XG5cbiAgICBpZiAoOTQ0ID09PSBtKSB7XG4gICAgICBkID0gYS5pbmRleE9mKCc6JywgOSkgKyAxO1xuICAgICAgdmFyIGIgPSBhLnN1YnN0cmluZyhkLCBhLmxlbmd0aCAtIDEpLnRyaW0oKTtcbiAgICAgIGIgPSBhLnN1YnN0cmluZygwLCBkKS50cmltKCkgKyBiICsgJzsnO1xuICAgICAgcmV0dXJuIDEgPT09IHcgfHwgMiA9PT0gdyAmJiBMKGIsIDEpID8gJy13ZWJraXQtJyArIGIgKyBiIDogYjtcbiAgICB9XG5cbiAgICBpZiAoMCA9PT0gdyB8fCAyID09PSB3ICYmICFMKGEsIDEpKSByZXR1cm4gYTtcblxuICAgIHN3aXRjaCAobSkge1xuICAgICAgY2FzZSAxMDE1OlxuICAgICAgICByZXR1cm4gOTcgPT09IGEuY2hhckNvZGVBdCgxMCkgPyAnLXdlYmtpdC0nICsgYSArIGEgOiBhO1xuXG4gICAgICBjYXNlIDk1MTpcbiAgICAgICAgcmV0dXJuIDExNiA9PT0gYS5jaGFyQ29kZUF0KDMpID8gJy13ZWJraXQtJyArIGEgKyBhIDogYTtcblxuICAgICAgY2FzZSA5NjM6XG4gICAgICAgIHJldHVybiAxMTAgPT09IGEuY2hhckNvZGVBdCg1KSA/ICctd2Via2l0LScgKyBhICsgYSA6IGE7XG5cbiAgICAgIGNhc2UgMTAwOTpcbiAgICAgICAgaWYgKDEwMCAhPT0gYS5jaGFyQ29kZUF0KDQpKSBicmVhaztcblxuICAgICAgY2FzZSA5Njk6XG4gICAgICBjYXNlIDk0MjpcbiAgICAgICAgcmV0dXJuICctd2Via2l0LScgKyBhICsgYTtcblxuICAgICAgY2FzZSA5Nzg6XG4gICAgICAgIHJldHVybiAnLXdlYmtpdC0nICsgYSArICctbW96LScgKyBhICsgYTtcblxuICAgICAgY2FzZSAxMDE5OlxuICAgICAgY2FzZSA5ODM6XG4gICAgICAgIHJldHVybiAnLXdlYmtpdC0nICsgYSArICctbW96LScgKyBhICsgJy1tcy0nICsgYSArIGE7XG5cbiAgICAgIGNhc2UgODgzOlxuICAgICAgICBpZiAoNDUgPT09IGEuY2hhckNvZGVBdCg4KSkgcmV0dXJuICctd2Via2l0LScgKyBhICsgYTtcbiAgICAgICAgaWYgKDAgPCBhLmluZGV4T2YoJ2ltYWdlLXNldCgnLCAxMSkpIHJldHVybiBhLnJlcGxhY2UoamEsICckMS13ZWJraXQtJDInKSArIGE7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIDkzMjpcbiAgICAgICAgaWYgKDQ1ID09PSBhLmNoYXJDb2RlQXQoNCkpIHN3aXRjaCAoYS5jaGFyQ29kZUF0KDUpKSB7XG4gICAgICAgICAgY2FzZSAxMDM6XG4gICAgICAgICAgICByZXR1cm4gJy13ZWJraXQtYm94LScgKyBhLnJlcGxhY2UoJy1ncm93JywgJycpICsgJy13ZWJraXQtJyArIGEgKyAnLW1zLScgKyBhLnJlcGxhY2UoJ2dyb3cnLCAncG9zaXRpdmUnKSArIGE7XG5cbiAgICAgICAgICBjYXNlIDExNTpcbiAgICAgICAgICAgIHJldHVybiAnLXdlYmtpdC0nICsgYSArICctbXMtJyArIGEucmVwbGFjZSgnc2hyaW5rJywgJ25lZ2F0aXZlJykgKyBhO1xuXG4gICAgICAgICAgY2FzZSA5ODpcbiAgICAgICAgICAgIHJldHVybiAnLXdlYmtpdC0nICsgYSArICctbXMtJyArIGEucmVwbGFjZSgnYmFzaXMnLCAncHJlZmVycmVkLXNpemUnKSArIGE7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICctd2Via2l0LScgKyBhICsgJy1tcy0nICsgYSArIGE7XG5cbiAgICAgIGNhc2UgOTY0OlxuICAgICAgICByZXR1cm4gJy13ZWJraXQtJyArIGEgKyAnLW1zLWZsZXgtJyArIGEgKyBhO1xuXG4gICAgICBjYXNlIDEwMjM6XG4gICAgICAgIGlmICg5OSAhPT0gYS5jaGFyQ29kZUF0KDgpKSBicmVhaztcbiAgICAgICAgYiA9IGEuc3Vic3RyaW5nKGEuaW5kZXhPZignOicsIDE1KSkucmVwbGFjZSgnZmxleC0nLCAnJykucmVwbGFjZSgnc3BhY2UtYmV0d2VlbicsICdqdXN0aWZ5Jyk7XG4gICAgICAgIHJldHVybiAnLXdlYmtpdC1ib3gtcGFjaycgKyBiICsgJy13ZWJraXQtJyArIGEgKyAnLW1zLWZsZXgtcGFjaycgKyBiICsgYTtcblxuICAgICAgY2FzZSAxMDA1OlxuICAgICAgICByZXR1cm4ga2EudGVzdChhKSA/IGEucmVwbGFjZShhYSwgJzotd2Via2l0LScpICsgYS5yZXBsYWNlKGFhLCAnOi1tb3otJykgKyBhIDogYTtcblxuICAgICAgY2FzZSAxZTM6XG4gICAgICAgIGIgPSBhLnN1YnN0cmluZygxMykudHJpbSgpO1xuICAgICAgICBjID0gYi5pbmRleE9mKCctJykgKyAxO1xuXG4gICAgICAgIHN3aXRjaCAoYi5jaGFyQ29kZUF0KDApICsgYi5jaGFyQ29kZUF0KGMpKSB7XG4gICAgICAgICAgY2FzZSAyMjY6XG4gICAgICAgICAgICBiID0gYS5yZXBsYWNlKEcsICd0YicpO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICBjYXNlIDIzMjpcbiAgICAgICAgICAgIGIgPSBhLnJlcGxhY2UoRywgJ3RiLXJsJyk7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgIGNhc2UgMjIwOlxuICAgICAgICAgICAgYiA9IGEucmVwbGFjZShHLCAnbHInKTtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBhO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuICctd2Via2l0LScgKyBhICsgJy1tcy0nICsgYiArIGE7XG5cbiAgICAgIGNhc2UgMTAxNzpcbiAgICAgICAgaWYgKC0xID09PSBhLmluZGV4T2YoJ3N0aWNreScsIDkpKSBicmVhaztcblxuICAgICAgY2FzZSA5NzU6XG4gICAgICAgIGMgPSAoYSA9IGQpLmxlbmd0aCAtIDEwO1xuICAgICAgICBiID0gKDMzID09PSBhLmNoYXJDb2RlQXQoYykgPyBhLnN1YnN0cmluZygwLCBjKSA6IGEpLnN1YnN0cmluZyhkLmluZGV4T2YoJzonLCA3KSArIDEpLnRyaW0oKTtcblxuICAgICAgICBzd2l0Y2ggKG0gPSBiLmNoYXJDb2RlQXQoMCkgKyAoYi5jaGFyQ29kZUF0KDcpIHwgMCkpIHtcbiAgICAgICAgICBjYXNlIDIwMzpcbiAgICAgICAgICAgIGlmICgxMTEgPiBiLmNoYXJDb2RlQXQoOCkpIGJyZWFrO1xuXG4gICAgICAgICAgY2FzZSAxMTU6XG4gICAgICAgICAgICBhID0gYS5yZXBsYWNlKGIsICctd2Via2l0LScgKyBiKSArICc7JyArIGE7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgIGNhc2UgMjA3OlxuICAgICAgICAgIGNhc2UgMTAyOlxuICAgICAgICAgICAgYSA9IGEucmVwbGFjZShiLCAnLXdlYmtpdC0nICsgKDEwMiA8IG0gPyAnaW5saW5lLScgOiAnJykgKyAnYm94JykgKyAnOycgKyBhLnJlcGxhY2UoYiwgJy13ZWJraXQtJyArIGIpICsgJzsnICsgYS5yZXBsYWNlKGIsICctbXMtJyArIGIgKyAnYm94JykgKyAnOycgKyBhO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGEgKyAnOyc7XG5cbiAgICAgIGNhc2UgOTM4OlxuICAgICAgICBpZiAoNDUgPT09IGEuY2hhckNvZGVBdCg1KSkgc3dpdGNoIChhLmNoYXJDb2RlQXQoNikpIHtcbiAgICAgICAgICBjYXNlIDEwNTpcbiAgICAgICAgICAgIHJldHVybiBiID0gYS5yZXBsYWNlKCctaXRlbXMnLCAnJyksICctd2Via2l0LScgKyBhICsgJy13ZWJraXQtYm94LScgKyBiICsgJy1tcy1mbGV4LScgKyBiICsgYTtcblxuICAgICAgICAgIGNhc2UgMTE1OlxuICAgICAgICAgICAgcmV0dXJuICctd2Via2l0LScgKyBhICsgJy1tcy1mbGV4LWl0ZW0tJyArIGEucmVwbGFjZShiYSwgJycpICsgYTtcblxuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gJy13ZWJraXQtJyArIGEgKyAnLW1zLWZsZXgtbGluZS1wYWNrJyArIGEucmVwbGFjZSgnYWxpZ24tY29udGVudCcsICcnKS5yZXBsYWNlKGJhLCAnJykgKyBhO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIDk3MzpcbiAgICAgIGNhc2UgOTg5OlxuICAgICAgICBpZiAoNDUgIT09IGEuY2hhckNvZGVBdCgzKSB8fCAxMjIgPT09IGEuY2hhckNvZGVBdCg0KSkgYnJlYWs7XG5cbiAgICAgIGNhc2UgOTMxOlxuICAgICAgY2FzZSA5NTM6XG4gICAgICAgIGlmICghMCA9PT0gbGEudGVzdChkKSkgcmV0dXJuIDExNSA9PT0gKGIgPSBkLnN1YnN0cmluZyhkLmluZGV4T2YoJzonKSArIDEpKS5jaGFyQ29kZUF0KDApID8gUChkLnJlcGxhY2UoJ3N0cmV0Y2gnLCAnZmlsbC1hdmFpbGFibGUnKSwgYywgZSwgaCkucmVwbGFjZSgnOmZpbGwtYXZhaWxhYmxlJywgJzpzdHJldGNoJykgOiBhLnJlcGxhY2UoYiwgJy13ZWJraXQtJyArIGIpICsgYS5yZXBsYWNlKGIsICctbW96LScgKyBiLnJlcGxhY2UoJ2ZpbGwtJywgJycpKSArIGE7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIDk2MjpcbiAgICAgICAgaWYgKGEgPSAnLXdlYmtpdC0nICsgYSArICgxMDIgPT09IGEuY2hhckNvZGVBdCg1KSA/ICctbXMtJyArIGEgOiAnJykgKyBhLCAyMTEgPT09IGUgKyBoICYmIDEwNSA9PT0gYS5jaGFyQ29kZUF0KDEzKSAmJiAwIDwgYS5pbmRleE9mKCd0cmFuc2Zvcm0nLCAxMCkpIHJldHVybiBhLnN1YnN0cmluZygwLCBhLmluZGV4T2YoJzsnLCAyNykgKyAxKS5yZXBsYWNlKG1hLCAnJDEtd2Via2l0LSQyJykgKyBhO1xuICAgIH1cblxuICAgIHJldHVybiBhO1xuICB9XG5cbiAgZnVuY3Rpb24gTChkLCBjKSB7XG4gICAgdmFyIGUgPSBkLmluZGV4T2YoMSA9PT0gYyA/ICc6JyA6ICd7JyksXG4gICAgICAgIGggPSBkLnN1YnN0cmluZygwLCAzICE9PSBjID8gZSA6IDEwKTtcbiAgICBlID0gZC5zdWJzdHJpbmcoZSArIDEsIGQubGVuZ3RoIC0gMSk7XG4gICAgcmV0dXJuIFIoMiAhPT0gYyA/IGggOiBoLnJlcGxhY2UobmEsICckMScpLCBlLCBjKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGVhKGQsIGMpIHtcbiAgICB2YXIgZSA9IFAoYywgYy5jaGFyQ29kZUF0KDApLCBjLmNoYXJDb2RlQXQoMSksIGMuY2hhckNvZGVBdCgyKSk7XG4gICAgcmV0dXJuIGUgIT09IGMgKyAnOycgPyBlLnJlcGxhY2Uob2EsICcgb3IgKCQxKScpLnN1YnN0cmluZyg0KSA6ICcoJyArIGMgKyAnKSc7XG4gIH1cblxuICBmdW5jdGlvbiBIKGQsIGMsIGUsIGgsIGEsIG0sIGIsIHYsIG4sIHEpIHtcbiAgICBmb3IgKHZhciBnID0gMCwgeCA9IGMsIHc7IGcgPCBBOyArK2cpIHtcbiAgICAgIHN3aXRjaCAodyA9IFNbZ10uY2FsbChCLCBkLCB4LCBlLCBoLCBhLCBtLCBiLCB2LCBuLCBxKSkge1xuICAgICAgICBjYXNlIHZvaWQgMDpcbiAgICAgICAgY2FzZSAhMTpcbiAgICAgICAgY2FzZSAhMDpcbiAgICAgICAgY2FzZSBudWxsOlxuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgeCA9IHc7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHggIT09IGMpIHJldHVybiB4O1xuICB9XG5cbiAgZnVuY3Rpb24gVChkKSB7XG4gICAgc3dpdGNoIChkKSB7XG4gICAgICBjYXNlIHZvaWQgMDpcbiAgICAgIGNhc2UgbnVsbDpcbiAgICAgICAgQSA9IFMubGVuZ3RoID0gMDtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGlmICgnZnVuY3Rpb24nID09PSB0eXBlb2YgZCkgU1tBKytdID0gZDtlbHNlIGlmICgnb2JqZWN0JyA9PT0gdHlwZW9mIGQpIGZvciAodmFyIGMgPSAwLCBlID0gZC5sZW5ndGg7IGMgPCBlOyArK2MpIHtcbiAgICAgICAgICBUKGRbY10pO1xuICAgICAgICB9IGVsc2UgWSA9ICEhZCB8IDA7XG4gICAgfVxuXG4gICAgcmV0dXJuIFQ7XG4gIH1cblxuICBmdW5jdGlvbiBVKGQpIHtcbiAgICBkID0gZC5wcmVmaXg7XG4gICAgdm9pZCAwICE9PSBkICYmIChSID0gbnVsbCwgZCA/ICdmdW5jdGlvbicgIT09IHR5cGVvZiBkID8gdyA9IDEgOiAodyA9IDIsIFIgPSBkKSA6IHcgPSAwKTtcbiAgICByZXR1cm4gVTtcbiAgfVxuXG4gIGZ1bmN0aW9uIEIoZCwgYykge1xuICAgIHZhciBlID0gZDtcbiAgICAzMyA+IGUuY2hhckNvZGVBdCgwKSAmJiAoZSA9IGUudHJpbSgpKTtcbiAgICBWID0gZTtcbiAgICBlID0gW1ZdO1xuXG4gICAgaWYgKDAgPCBBKSB7XG4gICAgICB2YXIgaCA9IEgoLTEsIGMsIGUsIGUsIEQsIHosIDAsIDAsIDAsIDApO1xuICAgICAgdm9pZCAwICE9PSBoICYmICdzdHJpbmcnID09PSB0eXBlb2YgaCAmJiAoYyA9IGgpO1xuICAgIH1cblxuICAgIHZhciBhID0gTShPLCBlLCBjLCAwLCAwKTtcbiAgICAwIDwgQSAmJiAoaCA9IEgoLTIsIGEsIGUsIGUsIEQsIHosIGEubGVuZ3RoLCAwLCAwLCAwKSwgdm9pZCAwICE9PSBoICYmIChhID0gaCkpO1xuICAgIFYgPSAnJztcbiAgICBFID0gMDtcbiAgICB6ID0gRCA9IDE7XG4gICAgcmV0dXJuIGE7XG4gIH1cblxuICB2YXIgY2EgPSAvXlxcMCsvZyxcbiAgICAgIE4gPSAvW1xcMFxcclxcZl0vZyxcbiAgICAgIGFhID0gLzogKi9nLFxuICAgICAga2EgPSAvem9vfGdyYS8sXG4gICAgICBtYSA9IC8oWyw6IF0pKHRyYW5zZm9ybSkvZyxcbiAgICAgIGlhID0gLyxcXHIrPy9nLFxuICAgICAgRiA9IC8oW1xcdFxcclxcbiBdKSpcXGY/Ji9nLFxuICAgICAgZmEgPSAvQChrXFx3KylcXHMqKFxcUyopXFxzKi8sXG4gICAgICBRID0gLzo6KHBsYWNlKS9nLFxuICAgICAgaGEgPSAvOihyZWFkLW9ubHkpL2csXG4gICAgICBHID0gL1tzdmhdXFx3Ky1bdGJscl17Mn0vLFxuICAgICAgZGEgPSAvXFwoXFxzKiguKilcXHMqXFwpL2csXG4gICAgICBvYSA9IC8oW1xcc1xcU10qPyk7L2csXG4gICAgICBiYSA9IC8tc2VsZnxmbGV4LS9nLFxuICAgICAgbmEgPSAvW15dKj8oOltycF1bZWxdYVtcXHctXSspW15dKi8sXG4gICAgICBsYSA9IC9zdHJldGNofDpcXHMqXFx3K1xcLSg/OmNvbnRlfGF2YWlsKS8sXG4gICAgICBqYSA9IC8oW14tXSkoaW1hZ2Utc2V0XFwoKS8sXG4gICAgICB6ID0gMSxcbiAgICAgIEQgPSAxLFxuICAgICAgRSA9IDAsXG4gICAgICB3ID0gMSxcbiAgICAgIE8gPSBbXSxcbiAgICAgIFMgPSBbXSxcbiAgICAgIEEgPSAwLFxuICAgICAgUiA9IG51bGwsXG4gICAgICBZID0gMCxcbiAgICAgIFYgPSAnJztcbiAgQi51c2UgPSBUO1xuICBCLnNldCA9IFU7XG4gIHZvaWQgMCAhPT0gVyAmJiBVKFcpO1xuICByZXR1cm4gQjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgc3R5bGlzX21pbjtcbiIsInZhciB1bml0bGVzc0tleXMgPSB7XG4gIGFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiAxLFxuICBib3JkZXJJbWFnZU91dHNldDogMSxcbiAgYm9yZGVySW1hZ2VTbGljZTogMSxcbiAgYm9yZGVySW1hZ2VXaWR0aDogMSxcbiAgYm94RmxleDogMSxcbiAgYm94RmxleEdyb3VwOiAxLFxuICBib3hPcmRpbmFsR3JvdXA6IDEsXG4gIGNvbHVtbkNvdW50OiAxLFxuICBjb2x1bW5zOiAxLFxuICBmbGV4OiAxLFxuICBmbGV4R3JvdzogMSxcbiAgZmxleFBvc2l0aXZlOiAxLFxuICBmbGV4U2hyaW5rOiAxLFxuICBmbGV4TmVnYXRpdmU6IDEsXG4gIGZsZXhPcmRlcjogMSxcbiAgZ3JpZFJvdzogMSxcbiAgZ3JpZFJvd0VuZDogMSxcbiAgZ3JpZFJvd1NwYW46IDEsXG4gIGdyaWRSb3dTdGFydDogMSxcbiAgZ3JpZENvbHVtbjogMSxcbiAgZ3JpZENvbHVtbkVuZDogMSxcbiAgZ3JpZENvbHVtblNwYW46IDEsXG4gIGdyaWRDb2x1bW5TdGFydDogMSxcbiAgbXNHcmlkUm93OiAxLFxuICBtc0dyaWRSb3dTcGFuOiAxLFxuICBtc0dyaWRDb2x1bW46IDEsXG4gIG1zR3JpZENvbHVtblNwYW46IDEsXG4gIGZvbnRXZWlnaHQ6IDEsXG4gIGxpbmVIZWlnaHQ6IDEsXG4gIG9wYWNpdHk6IDEsXG4gIG9yZGVyOiAxLFxuICBvcnBoYW5zOiAxLFxuICB0YWJTaXplOiAxLFxuICB3aWRvd3M6IDEsXG4gIHpJbmRleDogMSxcbiAgem9vbTogMSxcbiAgV2Via2l0TGluZUNsYW1wOiAxLFxuICAvLyBTVkctcmVsYXRlZCBwcm9wZXJ0aWVzXG4gIGZpbGxPcGFjaXR5OiAxLFxuICBmbG9vZE9wYWNpdHk6IDEsXG4gIHN0b3BPcGFjaXR5OiAxLFxuICBzdHJva2VEYXNoYXJyYXk6IDEsXG4gIHN0cm9rZURhc2hvZmZzZXQ6IDEsXG4gIHN0cm9rZU1pdGVybGltaXQ6IDEsXG4gIHN0cm9rZU9wYWNpdHk6IDEsXG4gIHN0cm9rZVdpZHRoOiAxXG59O1xuXG5leHBvcnQgZGVmYXVsdCB1bml0bGVzc0tleXM7XG4iLCJpbXBvcnQgbWVtb2l6ZSBmcm9tICdAZW1vdGlvbi9tZW1vaXplJztcblxudmFyIHJlYWN0UHJvcHNSZWdleCA9IC9eKChjaGlsZHJlbnxkYW5nZXJvdXNseVNldElubmVySFRNTHxrZXl8cmVmfGF1dG9Gb2N1c3xkZWZhdWx0VmFsdWV8ZGVmYXVsdENoZWNrZWR8aW5uZXJIVE1MfHN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ3xzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmd8dmFsdWVMaW5rfGFjY2VwdHxhY2NlcHRDaGFyc2V0fGFjY2Vzc0tleXxhY3Rpb258YWxsb3d8YWxsb3dVc2VyTWVkaWF8YWxsb3dQYXltZW50UmVxdWVzdHxhbGxvd0Z1bGxTY3JlZW58YWxsb3dUcmFuc3BhcmVuY3l8YWx0fGFzeW5jfGF1dG9Db21wbGV0ZXxhdXRvUGxheXxjYXB0dXJlfGNlbGxQYWRkaW5nfGNlbGxTcGFjaW5nfGNoYWxsZW5nZXxjaGFyU2V0fGNoZWNrZWR8Y2l0ZXxjbGFzc0lEfGNsYXNzTmFtZXxjb2xzfGNvbFNwYW58Y29udGVudHxjb250ZW50RWRpdGFibGV8Y29udGV4dE1lbnV8Y29udHJvbHN8Y29udHJvbHNMaXN0fGNvb3Jkc3xjcm9zc09yaWdpbnxkYXRhfGRhdGVUaW1lfGRlY29kaW5nfGRlZmF1bHR8ZGVmZXJ8ZGlyfGRpc2FibGVkfGRpc2FibGVQaWN0dXJlSW5QaWN0dXJlfGRvd25sb2FkfGRyYWdnYWJsZXxlbmNUeXBlfGZvcm18Zm9ybUFjdGlvbnxmb3JtRW5jVHlwZXxmb3JtTWV0aG9kfGZvcm1Ob1ZhbGlkYXRlfGZvcm1UYXJnZXR8ZnJhbWVCb3JkZXJ8aGVhZGVyc3xoZWlnaHR8aGlkZGVufGhpZ2h8aHJlZnxocmVmTGFuZ3xodG1sRm9yfGh0dHBFcXVpdnxpZHxpbnB1dE1vZGV8aW50ZWdyaXR5fGlzfGtleVBhcmFtc3xrZXlUeXBlfGtpbmR8bGFiZWx8bGFuZ3xsaXN0fGxvYWRpbmd8bG9vcHxsb3d8bWFyZ2luSGVpZ2h0fG1hcmdpbldpZHRofG1heHxtYXhMZW5ndGh8bWVkaWF8bWVkaWFHcm91cHxtZXRob2R8bWlufG1pbkxlbmd0aHxtdWx0aXBsZXxtdXRlZHxuYW1lfG5vbmNlfG5vVmFsaWRhdGV8b3BlbnxvcHRpbXVtfHBhdHRlcm58cGxhY2Vob2xkZXJ8cGxheXNJbmxpbmV8cG9zdGVyfHByZWxvYWR8cHJvZmlsZXxyYWRpb0dyb3VwfHJlYWRPbmx5fHJlZmVycmVyUG9saWN5fHJlbHxyZXF1aXJlZHxyZXZlcnNlZHxyb2xlfHJvd3N8cm93U3BhbnxzYW5kYm94fHNjb3BlfHNjb3BlZHxzY3JvbGxpbmd8c2VhbWxlc3N8c2VsZWN0ZWR8c2hhcGV8c2l6ZXxzaXplc3xzbG90fHNwYW58c3BlbGxDaGVja3xzcmN8c3JjRG9jfHNyY0xhbmd8c3JjU2V0fHN0YXJ0fHN0ZXB8c3R5bGV8c3VtbWFyeXx0YWJJbmRleHx0YXJnZXR8dGl0bGV8dHlwZXx1c2VNYXB8dmFsdWV8d2lkdGh8d21vZGV8d3JhcHxhYm91dHxkYXRhdHlwZXxpbmxpc3R8cHJlZml4fHByb3BlcnR5fHJlc291cmNlfHR5cGVvZnx2b2NhYnxhdXRvQ2FwaXRhbGl6ZXxhdXRvQ29ycmVjdHxhdXRvU2F2ZXxjb2xvcnxpbmVydHxpdGVtUHJvcHxpdGVtU2NvcGV8aXRlbVR5cGV8aXRlbUlEfGl0ZW1SZWZ8b258cmVzdWx0c3xzZWN1cml0eXx1bnNlbGVjdGFibGV8YWNjZW50SGVpZ2h0fGFjY3VtdWxhdGV8YWRkaXRpdmV8YWxpZ25tZW50QmFzZWxpbmV8YWxsb3dSZW9yZGVyfGFscGhhYmV0aWN8YW1wbGl0dWRlfGFyYWJpY0Zvcm18YXNjZW50fGF0dHJpYnV0ZU5hbWV8YXR0cmlidXRlVHlwZXxhdXRvUmV2ZXJzZXxhemltdXRofGJhc2VGcmVxdWVuY3l8YmFzZWxpbmVTaGlmdHxiYXNlUHJvZmlsZXxiYm94fGJlZ2lufGJpYXN8Ynl8Y2FsY01vZGV8Y2FwSGVpZ2h0fGNsaXB8Y2xpcFBhdGhVbml0c3xjbGlwUGF0aHxjbGlwUnVsZXxjb2xvckludGVycG9sYXRpb258Y29sb3JJbnRlcnBvbGF0aW9uRmlsdGVyc3xjb2xvclByb2ZpbGV8Y29sb3JSZW5kZXJpbmd8Y29udGVudFNjcmlwdFR5cGV8Y29udGVudFN0eWxlVHlwZXxjdXJzb3J8Y3h8Y3l8ZHxkZWNlbGVyYXRlfGRlc2NlbnR8ZGlmZnVzZUNvbnN0YW50fGRpcmVjdGlvbnxkaXNwbGF5fGRpdmlzb3J8ZG9taW5hbnRCYXNlbGluZXxkdXJ8ZHh8ZHl8ZWRnZU1vZGV8ZWxldmF0aW9ufGVuYWJsZUJhY2tncm91bmR8ZW5kfGV4cG9uZW50fGV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWR8ZmlsbHxmaWxsT3BhY2l0eXxmaWxsUnVsZXxmaWx0ZXJ8ZmlsdGVyUmVzfGZpbHRlclVuaXRzfGZsb29kQ29sb3J8Zmxvb2RPcGFjaXR5fGZvY3VzYWJsZXxmb250RmFtaWx5fGZvbnRTaXplfGZvbnRTaXplQWRqdXN0fGZvbnRTdHJldGNofGZvbnRTdHlsZXxmb250VmFyaWFudHxmb250V2VpZ2h0fGZvcm1hdHxmcm9tfGZyfGZ4fGZ5fGcxfGcyfGdseXBoTmFtZXxnbHlwaE9yaWVudGF0aW9uSG9yaXpvbnRhbHxnbHlwaE9yaWVudGF0aW9uVmVydGljYWx8Z2x5cGhSZWZ8Z3JhZGllbnRUcmFuc2Zvcm18Z3JhZGllbnRVbml0c3xoYW5naW5nfGhvcml6QWR2WHxob3Jpek9yaWdpblh8aWRlb2dyYXBoaWN8aW1hZ2VSZW5kZXJpbmd8aW58aW4yfGludGVyY2VwdHxrfGsxfGsyfGszfGs0fGtlcm5lbE1hdHJpeHxrZXJuZWxVbml0TGVuZ3RofGtlcm5pbmd8a2V5UG9pbnRzfGtleVNwbGluZXN8a2V5VGltZXN8bGVuZ3RoQWRqdXN0fGxldHRlclNwYWNpbmd8bGlnaHRpbmdDb2xvcnxsaW1pdGluZ0NvbmVBbmdsZXxsb2NhbHxtYXJrZXJFbmR8bWFya2VyTWlkfG1hcmtlclN0YXJ0fG1hcmtlckhlaWdodHxtYXJrZXJVbml0c3xtYXJrZXJXaWR0aHxtYXNrfG1hc2tDb250ZW50VW5pdHN8bWFza1VuaXRzfG1hdGhlbWF0aWNhbHxtb2RlfG51bU9jdGF2ZXN8b2Zmc2V0fG9wYWNpdHl8b3BlcmF0b3J8b3JkZXJ8b3JpZW50fG9yaWVudGF0aW9ufG9yaWdpbnxvdmVyZmxvd3xvdmVybGluZVBvc2l0aW9ufG92ZXJsaW5lVGhpY2tuZXNzfHBhbm9zZTF8cGFpbnRPcmRlcnxwYXRoTGVuZ3RofHBhdHRlcm5Db250ZW50VW5pdHN8cGF0dGVyblRyYW5zZm9ybXxwYXR0ZXJuVW5pdHN8cG9pbnRlckV2ZW50c3xwb2ludHN8cG9pbnRzQXRYfHBvaW50c0F0WXxwb2ludHNBdFp8cHJlc2VydmVBbHBoYXxwcmVzZXJ2ZUFzcGVjdFJhdGlvfHByaW1pdGl2ZVVuaXRzfHJ8cmFkaXVzfHJlZlh8cmVmWXxyZW5kZXJpbmdJbnRlbnR8cmVwZWF0Q291bnR8cmVwZWF0RHVyfHJlcXVpcmVkRXh0ZW5zaW9uc3xyZXF1aXJlZEZlYXR1cmVzfHJlc3RhcnR8cmVzdWx0fHJvdGF0ZXxyeHxyeXxzY2FsZXxzZWVkfHNoYXBlUmVuZGVyaW5nfHNsb3BlfHNwYWNpbmd8c3BlY3VsYXJDb25zdGFudHxzcGVjdWxhckV4cG9uZW50fHNwZWVkfHNwcmVhZE1ldGhvZHxzdGFydE9mZnNldHxzdGREZXZpYXRpb258c3RlbWh8c3RlbXZ8c3RpdGNoVGlsZXN8c3RvcENvbG9yfHN0b3BPcGFjaXR5fHN0cmlrZXRocm91Z2hQb3NpdGlvbnxzdHJpa2V0aHJvdWdoVGhpY2tuZXNzfHN0cmluZ3xzdHJva2V8c3Ryb2tlRGFzaGFycmF5fHN0cm9rZURhc2hvZmZzZXR8c3Ryb2tlTGluZWNhcHxzdHJva2VMaW5lam9pbnxzdHJva2VNaXRlcmxpbWl0fHN0cm9rZU9wYWNpdHl8c3Ryb2tlV2lkdGh8c3VyZmFjZVNjYWxlfHN5c3RlbUxhbmd1YWdlfHRhYmxlVmFsdWVzfHRhcmdldFh8dGFyZ2V0WXx0ZXh0QW5jaG9yfHRleHREZWNvcmF0aW9ufHRleHRSZW5kZXJpbmd8dGV4dExlbmd0aHx0b3x0cmFuc2Zvcm18dTF8dTJ8dW5kZXJsaW5lUG9zaXRpb258dW5kZXJsaW5lVGhpY2tuZXNzfHVuaWNvZGV8dW5pY29kZUJpZGl8dW5pY29kZVJhbmdlfHVuaXRzUGVyRW18dkFscGhhYmV0aWN8dkhhbmdpbmd8dklkZW9ncmFwaGljfHZNYXRoZW1hdGljYWx8dmFsdWVzfHZlY3RvckVmZmVjdHx2ZXJzaW9ufHZlcnRBZHZZfHZlcnRPcmlnaW5YfHZlcnRPcmlnaW5ZfHZpZXdCb3h8dmlld1RhcmdldHx2aXNpYmlsaXR5fHdpZHRoc3x3b3JkU3BhY2luZ3x3cml0aW5nTW9kZXx4fHhIZWlnaHR8eDF8eDJ8eENoYW5uZWxTZWxlY3Rvcnx4bGlua0FjdHVhdGV8eGxpbmtBcmNyb2xlfHhsaW5rSHJlZnx4bGlua1JvbGV8eGxpbmtTaG93fHhsaW5rVGl0bGV8eGxpbmtUeXBlfHhtbEJhc2V8eG1sbnN8eG1sbnNYbGlua3x4bWxMYW5nfHhtbFNwYWNlfHl8eTF8eTJ8eUNoYW5uZWxTZWxlY3Rvcnx6fHpvb21BbmRQYW58Zm9yfGNsYXNzfGF1dG9mb2N1cyl8KChbRGRdW0FhXVtUdF1bQWFdfFtBYV1bUnJdW0lpXVtBYV18eCktLiopKSQvOyAvLyBodHRwczovL2VzYmVuY2guY29tL2JlbmNoLzViZmVlNjhhNGNkN2U2MDA5ZWY2MWQyM1xuXG52YXIgaW5kZXggPSBtZW1vaXplKGZ1bmN0aW9uIChwcm9wKSB7XG4gIHJldHVybiByZWFjdFByb3BzUmVnZXgudGVzdChwcm9wKSB8fCBwcm9wLmNoYXJDb2RlQXQoMCkgPT09IDExMVxuICAvKiBvICovXG4gICYmIHByb3AuY2hhckNvZGVBdCgxKSA9PT0gMTEwXG4gIC8qIG4gKi9cbiAgJiYgcHJvcC5jaGFyQ29kZUF0KDIpIDwgOTE7XG59XG4vKiBaKzEgKi9cbik7XG5cbmV4cG9ydCBkZWZhdWx0IGluZGV4O1xuIiwiZnVuY3Rpb24gbWVtb2l6ZShmbikge1xuICB2YXIgY2FjaGUgPSB7fTtcbiAgcmV0dXJuIGZ1bmN0aW9uIChhcmcpIHtcbiAgICBpZiAoY2FjaGVbYXJnXSA9PT0gdW5kZWZpbmVkKSBjYWNoZVthcmddID0gZm4oYXJnKTtcbiAgICByZXR1cm4gY2FjaGVbYXJnXTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgbWVtb2l6ZTtcbiIsImltcG9ydHt0eXBlT2YgYXMgZSxpc0VsZW1lbnQgYXMgdCxpc1ZhbGlkRWxlbWVudFR5cGUgYXMgbn1mcm9tXCJyZWFjdC1pc1wiO2ltcG9ydCByLHt1c2VTdGF0ZSBhcyBvLHVzZUNvbnRleHQgYXMgcyx1c2VNZW1vIGFzIGksdXNlRWZmZWN0IGFzIGEsdXNlUmVmIGFzIGMsY3JlYXRlRWxlbWVudCBhcyB1LHVzZURlYnVnVmFsdWUgYXMgbCx1c2VMYXlvdXRFZmZlY3QgYXMgZH1mcm9tXCJyZWFjdFwiO2ltcG9ydCBoIGZyb21cInNoYWxsb3dlcXVhbFwiO2ltcG9ydCBwIGZyb21cIkBlbW90aW9uL3N0eWxpc1wiO2ltcG9ydCBmIGZyb21cIkBlbW90aW9uL3VuaXRsZXNzXCI7aW1wb3J0IG0gZnJvbVwiQGVtb3Rpb24vaXMtcHJvcC12YWxpZFwiO2ltcG9ydCB5IGZyb21cImhvaXN0LW5vbi1yZWFjdC1zdGF0aWNzXCI7ZnVuY3Rpb24gdigpe3JldHVybih2PU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBuPWFyZ3VtZW50c1t0XTtmb3IodmFyIHIgaW4gbilPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKGVbcl09bltyXSl9cmV0dXJuIGV9KS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dmFyIGc9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIG49W2VbMF1dLHI9MCxvPXQubGVuZ3RoO3I8bztyKz0xKW4ucHVzaCh0W3JdLGVbcisxXSk7cmV0dXJuIG59LFM9ZnVuY3Rpb24odCl7cmV0dXJuIG51bGwhPT10JiZcIm9iamVjdFwiPT10eXBlb2YgdCYmXCJbb2JqZWN0IE9iamVjdF1cIj09PSh0LnRvU3RyaW5nP3QudG9TdHJpbmcoKTpPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCkpJiYhZSh0KX0sdz1PYmplY3QuZnJlZXplKFtdKSxFPU9iamVjdC5mcmVlemUoe30pO2Z1bmN0aW9uIGIoZSl7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgZX1mdW5jdGlvbiBfKGUpe3JldHVyblwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJlwic3RyaW5nXCI9PXR5cGVvZiBlJiZlfHxlLmRpc3BsYXlOYW1lfHxlLm5hbWV8fFwiQ29tcG9uZW50XCJ9ZnVuY3Rpb24gTihlKXtyZXR1cm4gZSYmXCJzdHJpbmdcIj09dHlwZW9mIGUuc3R5bGVkQ29tcG9uZW50SWR9dmFyIEE9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHByb2Nlc3MmJihwcm9jZXNzLmVudi5SRUFDVF9BUFBfU0NfQVRUUnx8cHJvY2Vzcy5lbnYuU0NfQVRUUil8fFwiZGF0YS1zdHlsZWRcIixDPVwiNS4yLjFcIixJPVwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3cmJlwiSFRNTEVsZW1lbnRcImluIHdpbmRvdyxQPUJvb2xlYW4oXCJib29sZWFuXCI9PXR5cGVvZiBTQ19ESVNBQkxFX1NQRUVEWT9TQ19ESVNBQkxFX1NQRUVEWTpcInVuZGVmaW5lZFwiIT10eXBlb2YgcHJvY2VzcyYmdm9pZCAwIT09cHJvY2Vzcy5lbnYuUkVBQ1RfQVBQX1NDX0RJU0FCTEVfU1BFRURZJiZcIlwiIT09cHJvY2Vzcy5lbnYuUkVBQ1RfQVBQX1NDX0RJU0FCTEVfU1BFRURZP1wiZmFsc2VcIiE9PXByb2Nlc3MuZW52LlJFQUNUX0FQUF9TQ19ESVNBQkxFX1NQRUVEWSYmcHJvY2Vzcy5lbnYuUkVBQ1RfQVBQX1NDX0RJU0FCTEVfU1BFRURZOlwidW5kZWZpbmVkXCIhPXR5cGVvZiBwcm9jZXNzJiZ2b2lkIDAhPT1wcm9jZXNzLmVudi5TQ19ESVNBQkxFX1NQRUVEWSYmXCJcIiE9PXByb2Nlc3MuZW52LlNDX0RJU0FCTEVfU1BFRURZP1wiZmFsc2VcIiE9PXByb2Nlc3MuZW52LlNDX0RJU0FCTEVfU1BFRURZJiZwcm9jZXNzLmVudi5TQ19ESVNBQkxFX1NQRUVEWTpcInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WKSxPPXt9LFI9XCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOVj97MTpcIkNhbm5vdCBjcmVhdGUgc3R5bGVkLWNvbXBvbmVudCBmb3IgY29tcG9uZW50OiAlcy5cXG5cXG5cIiwyOlwiQ2FuJ3QgY29sbGVjdCBzdHlsZXMgb25jZSB5b3UndmUgY29uc3VtZWQgYSBgU2VydmVyU3R5bGVTaGVldGAncyBzdHlsZXMhIGBTZXJ2ZXJTdHlsZVNoZWV0YCBpcyBhIG9uZSBvZmYgaW5zdGFuY2UgZm9yIGVhY2ggc2VydmVyLXNpZGUgcmVuZGVyIGN5Y2xlLlxcblxcbi0gQXJlIHlvdSB0cnlpbmcgdG8gcmV1c2UgaXQgYWNyb3NzIHJlbmRlcnM/XFxuLSBBcmUgeW91IGFjY2lkZW50YWxseSBjYWxsaW5nIGNvbGxlY3RTdHlsZXMgdHdpY2U/XFxuXFxuXCIsMzpcIlN0cmVhbWluZyBTU1IgaXMgb25seSBzdXBwb3J0ZWQgaW4gYSBOb2RlLmpzIGVudmlyb25tZW50OyBQbGVhc2UgZG8gbm90IHRyeSB0byBjYWxsIHRoaXMgbWV0aG9kIGluIHRoZSBicm93c2VyLlxcblxcblwiLDQ6XCJUaGUgYFN0eWxlU2hlZXRNYW5hZ2VyYCBleHBlY3RzIGEgdmFsaWQgdGFyZ2V0IG9yIHNoZWV0IHByb3AhXFxuXFxuLSBEb2VzIHRoaXMgZXJyb3Igb2NjdXIgb24gdGhlIGNsaWVudCBhbmQgaXMgeW91ciB0YXJnZXQgZmFsc3k/XFxuLSBEb2VzIHRoaXMgZXJyb3Igb2NjdXIgb24gdGhlIHNlcnZlciBhbmQgaXMgdGhlIHNoZWV0IGZhbHN5P1xcblxcblwiLDU6XCJUaGUgY2xvbmUgbWV0aG9kIGNhbm5vdCBiZSB1c2VkIG9uIHRoZSBjbGllbnQhXFxuXFxuLSBBcmUgeW91IHJ1bm5pbmcgaW4gYSBjbGllbnQtbGlrZSBlbnZpcm9ubWVudCBvbiB0aGUgc2VydmVyP1xcbi0gQXJlIHlvdSB0cnlpbmcgdG8gcnVuIFNTUiBvbiB0aGUgY2xpZW50P1xcblxcblwiLDY6XCJUcnlpbmcgdG8gaW5zZXJ0IGEgbmV3IHN0eWxlIHRhZywgYnV0IHRoZSBnaXZlbiBOb2RlIGlzIHVubW91bnRlZCFcXG5cXG4tIEFyZSB5b3UgdXNpbmcgYSBjdXN0b20gdGFyZ2V0IHRoYXQgaXNuJ3QgbW91bnRlZD9cXG4tIERvZXMgeW91ciBkb2N1bWVudCBub3QgaGF2ZSBhIHZhbGlkIGhlYWQgZWxlbWVudD9cXG4tIEhhdmUgeW91IGFjY2lkZW50YWxseSByZW1vdmVkIGEgc3R5bGUgdGFnIG1hbnVhbGx5P1xcblxcblwiLDc6J1RoZW1lUHJvdmlkZXI6IFBsZWFzZSByZXR1cm4gYW4gb2JqZWN0IGZyb20geW91ciBcInRoZW1lXCIgcHJvcCBmdW5jdGlvbiwgZS5nLlxcblxcbmBgYGpzXFxudGhlbWU9eygpID0+ICh7fSl9XFxuYGBgXFxuXFxuJyw4OidUaGVtZVByb3ZpZGVyOiBQbGVhc2UgbWFrZSB5b3VyIFwidGhlbWVcIiBwcm9wIGFuIG9iamVjdC5cXG5cXG4nLDk6XCJNaXNzaW5nIGRvY3VtZW50IGA8aGVhZD5gXFxuXFxuXCIsMTA6XCJDYW5ub3QgZmluZCBhIFN0eWxlU2hlZXQgaW5zdGFuY2UuIFVzdWFsbHkgdGhpcyBoYXBwZW5zIGlmIHRoZXJlIGFyZSBtdWx0aXBsZSBjb3BpZXMgb2Ygc3R5bGVkLWNvbXBvbmVudHMgbG9hZGVkIGF0IG9uY2UuIENoZWNrIG91dCB0aGlzIGlzc3VlIGZvciBob3cgdG8gdHJvdWJsZXNob290IGFuZCBmaXggdGhlIGNvbW1vbiBjYXNlcyB3aGVyZSB0aGlzIHNpdHVhdGlvbiBjYW4gaGFwcGVuOiBodHRwczovL2dpdGh1Yi5jb20vc3R5bGVkLWNvbXBvbmVudHMvc3R5bGVkLWNvbXBvbmVudHMvaXNzdWVzLzE5NDEjaXNzdWVjb21tZW50LTQxNzg2MjAyMVxcblxcblwiLDExOlwiX1RoaXMgZXJyb3Igd2FzIHJlcGxhY2VkIHdpdGggYSBkZXYtdGltZSB3YXJuaW5nLCBpdCB3aWxsIGJlIGRlbGV0ZWQgZm9yIHY0IGZpbmFsLl8gW2NyZWF0ZUdsb2JhbFN0eWxlXSByZWNlaXZlZCBjaGlsZHJlbiB3aGljaCB3aWxsIG5vdCBiZSByZW5kZXJlZC4gUGxlYXNlIHVzZSB0aGUgY29tcG9uZW50IHdpdGhvdXQgcGFzc2luZyBjaGlsZHJlbiBlbGVtZW50cy5cXG5cXG5cIiwxMjpcIkl0IHNlZW1zIHlvdSBhcmUgaW50ZXJwb2xhdGluZyBhIGtleWZyYW1lIGRlY2xhcmF0aW9uICglcykgaW50byBhbiB1bnRhZ2dlZCBzdHJpbmcuIFRoaXMgd2FzIHN1cHBvcnRlZCBpbiBzdHlsZWQtY29tcG9uZW50cyB2MywgYnV0IGlzIG5vdCBsb25nZXIgc3VwcG9ydGVkIGluIHY0IGFzIGtleWZyYW1lcyBhcmUgbm93IGluamVjdGVkIG9uLWRlbWFuZC4gUGxlYXNlIHdyYXAgeW91ciBzdHJpbmcgaW4gdGhlIGNzc1xcXFxgXFxcXGAgaGVscGVyIHdoaWNoIGVuc3VyZXMgdGhlIHN0eWxlcyBhcmUgaW5qZWN0ZWQgY29ycmVjdGx5LiBTZWUgaHR0cHM6Ly93d3cuc3R5bGVkLWNvbXBvbmVudHMuY29tL2RvY3MvYXBpI2Nzc1xcblxcblwiLDEzOlwiJXMgaXMgbm90IGEgc3R5bGVkIGNvbXBvbmVudCBhbmQgY2Fubm90IGJlIHJlZmVycmVkIHRvIHZpYSBjb21wb25lbnQgc2VsZWN0b3IuIFNlZSBodHRwczovL3d3dy5zdHlsZWQtY29tcG9uZW50cy5jb20vZG9jcy9hZHZhbmNlZCNyZWZlcnJpbmctdG8tb3RoZXItY29tcG9uZW50cyBmb3IgbW9yZSBkZXRhaWxzLlxcblxcblwiLDE0OidUaGVtZVByb3ZpZGVyOiBcInRoZW1lXCIgcHJvcCBpcyByZXF1aXJlZC5cXG5cXG4nLDE1OlwiQSBzdHlsaXMgcGx1Z2luIGhhcyBiZWVuIHN1cHBsaWVkIHRoYXQgaXMgbm90IG5hbWVkLiBXZSBuZWVkIGEgbmFtZSBmb3IgZWFjaCBwbHVnaW4gdG8gYmUgYWJsZSB0byBwcmV2ZW50IHN0eWxpbmcgY29sbGlzaW9ucyBiZXR3ZWVuIGRpZmZlcmVudCBzdHlsaXMgY29uZmlndXJhdGlvbnMgd2l0aGluIHRoZSBzYW1lIGFwcC4gQmVmb3JlIHlvdSBwYXNzIHlvdXIgcGx1Z2luIHRvIGA8U3R5bGVTaGVldE1hbmFnZXIgc3R5bGlzUGx1Z2lucz17W119PmAsIHBsZWFzZSBtYWtlIHN1cmUgZWFjaCBwbHVnaW4gaXMgdW5pcXVlbHktbmFtZWQsIGUuZy5cXG5cXG5gYGBqc1xcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShpbXBvcnRlZFBsdWdpbiwgJ25hbWUnLCB7IHZhbHVlOiAnc29tZS11bmlxdWUtbmFtZScgfSk7XFxuYGBgXFxuXFxuXCIsMTY6XCJSZWFjaGVkIHRoZSBsaW1pdCBvZiBob3cgbWFueSBzdHlsZWQgY29tcG9uZW50cyBtYXkgYmUgY3JlYXRlZCBhdCBncm91cCAlcy5cXG5Zb3UgbWF5IG9ubHkgY3JlYXRlIHVwIHRvIDEsMDczLDc0MSw4MjQgY29tcG9uZW50cy4gSWYgeW91J3JlIGNyZWF0aW5nIGNvbXBvbmVudHMgZHluYW1pY2FsbHksXFxuYXMgZm9yIGluc3RhbmNlIGluIHlvdXIgcmVuZGVyIG1ldGhvZCB0aGVuIHlvdSBtYXkgYmUgcnVubmluZyBpbnRvIHRoaXMgbGltaXRhdGlvbi5cXG5cXG5cIiwxNzpcIkNTU1N0eWxlU2hlZXQgY291bGQgbm90IGJlIGZvdW5kIG9uIEhUTUxTdHlsZUVsZW1lbnQuXFxuSGFzIHN0eWxlZC1jb21wb25lbnRzJyBzdHlsZSB0YWcgYmVlbiB1bm1vdW50ZWQgb3IgYWx0ZXJlZCBieSBhbm90aGVyIHNjcmlwdD9cXG5cIn06e307ZnVuY3Rpb24gRCgpe2Zvcih2YXIgZT1hcmd1bWVudHMubGVuZ3RoPD0wP3ZvaWQgMDphcmd1bWVudHNbMF0sdD1bXSxuPTEscj1hcmd1bWVudHMubGVuZ3RoO248cjtuKz0xKXQucHVzaChuPDB8fGFyZ3VtZW50cy5sZW5ndGg8PW4/dm9pZCAwOmFyZ3VtZW50c1tuXSk7cmV0dXJuIHQuZm9yRWFjaCgoZnVuY3Rpb24odCl7ZT1lLnJlcGxhY2UoLyVbYS16XS8sdCl9KSksZX1mdW5jdGlvbiBqKGUpe2Zvcih2YXIgdD1hcmd1bWVudHMubGVuZ3RoLG49bmV3IEFycmF5KHQ+MT90LTE6MCkscj0xO3I8dDtyKyspbltyLTFdPWFyZ3VtZW50c1tyXTt0aHJvd1wicHJvZHVjdGlvblwiPT09cHJvY2Vzcy5lbnYuTk9ERV9FTlY/bmV3IEVycm9yKFwiQW4gZXJyb3Igb2NjdXJyZWQuIFNlZSBodHRwczovL2dpdC5pby9KVUlhRSNcIitlK1wiIGZvciBtb3JlIGluZm9ybWF0aW9uLlwiKyhuLmxlbmd0aD4wP1wiIEFyZ3M6IFwiK24uam9pbihcIiwgXCIpOlwiXCIpKTpuZXcgRXJyb3IoRC5hcHBseSh2b2lkIDAsW1JbZV1dLmNvbmNhdChuKSkudHJpbSgpKX12YXIgVD1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSl7dGhpcy5ncm91cFNpemVzPW5ldyBVaW50MzJBcnJheSg1MTIpLHRoaXMubGVuZ3RoPTUxMix0aGlzLnRhZz1lfXZhciB0PWUucHJvdG90eXBlO3JldHVybiB0LmluZGV4T2ZHcm91cD1mdW5jdGlvbihlKXtmb3IodmFyIHQ9MCxuPTA7bjxlO24rKyl0Kz10aGlzLmdyb3VwU2l6ZXNbbl07cmV0dXJuIHR9LHQuaW5zZXJ0UnVsZXM9ZnVuY3Rpb24oZSx0KXtpZihlPj10aGlzLmdyb3VwU2l6ZXMubGVuZ3RoKXtmb3IodmFyIG49dGhpcy5ncm91cFNpemVzLHI9bi5sZW5ndGgsbz1yO2U+PW87KShvPDw9MSk8MCYmaigxNixcIlwiK2UpO3RoaXMuZ3JvdXBTaXplcz1uZXcgVWludDMyQXJyYXkobyksdGhpcy5ncm91cFNpemVzLnNldChuKSx0aGlzLmxlbmd0aD1vO2Zvcih2YXIgcz1yO3M8bztzKyspdGhpcy5ncm91cFNpemVzW3NdPTB9Zm9yKHZhciBpPXRoaXMuaW5kZXhPZkdyb3VwKGUrMSksYT0wLGM9dC5sZW5ndGg7YTxjO2ErKyl0aGlzLnRhZy5pbnNlcnRSdWxlKGksdFthXSkmJih0aGlzLmdyb3VwU2l6ZXNbZV0rKyxpKyspfSx0LmNsZWFyR3JvdXA9ZnVuY3Rpb24oZSl7aWYoZTx0aGlzLmxlbmd0aCl7dmFyIHQ9dGhpcy5ncm91cFNpemVzW2VdLG49dGhpcy5pbmRleE9mR3JvdXAoZSkscj1uK3Q7dGhpcy5ncm91cFNpemVzW2VdPTA7Zm9yKHZhciBvPW47bzxyO28rKyl0aGlzLnRhZy5kZWxldGVSdWxlKG4pfX0sdC5nZXRHcm91cD1mdW5jdGlvbihlKXt2YXIgdD1cIlwiO2lmKGU+PXRoaXMubGVuZ3RofHwwPT09dGhpcy5ncm91cFNpemVzW2VdKXJldHVybiB0O2Zvcih2YXIgbj10aGlzLmdyb3VwU2l6ZXNbZV0scj10aGlzLmluZGV4T2ZHcm91cChlKSxvPXIrbixzPXI7czxvO3MrKyl0Kz10aGlzLnRhZy5nZXRSdWxlKHMpK1wiLyohc2MqL1xcblwiO3JldHVybiB0fSxlfSgpLGs9bmV3IE1hcCx4PW5ldyBNYXAsVj0xLEI9ZnVuY3Rpb24oZSl7aWYoay5oYXMoZSkpcmV0dXJuIGsuZ2V0KGUpO2Zvcig7eC5oYXMoVik7KVYrKzt2YXIgdD1WKys7cmV0dXJuXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmKCgwfHQpPDB8fHQ+MTw8MzApJiZqKDE2LFwiXCIrdCksay5zZXQoZSx0KSx4LnNldCh0LGUpLHR9LE09ZnVuY3Rpb24oZSl7cmV0dXJuIHguZ2V0KGUpfSx6PWZ1bmN0aW9uKGUsdCl7ay5zZXQoZSx0KSx4LnNldCh0LGUpfSxMPVwic3R5bGVbXCIrQSsnXVtkYXRhLXN0eWxlZC12ZXJzaW9uPVwiNS4yLjFcIl0nLEc9bmV3IFJlZ0V4cChcIl5cIitBKydcXFxcLmcoXFxcXGQrKVxcXFxbaWQ9XCIoW1xcXFx3XFxcXGQtXSspXCJcXFxcXS4qP1wiKFteXCJdKiknKSxGPWZ1bmN0aW9uKGUsdCxuKXtmb3IodmFyIHIsbz1uLnNwbGl0KFwiLFwiKSxzPTAsaT1vLmxlbmd0aDtzPGk7cysrKShyPW9bc10pJiZlLnJlZ2lzdGVyTmFtZSh0LHIpfSxZPWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciBuPXQuaW5uZXJIVE1MLnNwbGl0KFwiLyohc2MqL1xcblwiKSxyPVtdLG89MCxzPW4ubGVuZ3RoO288cztvKyspe3ZhciBpPW5bb10udHJpbSgpO2lmKGkpe3ZhciBhPWkubWF0Y2goRyk7aWYoYSl7dmFyIGM9MHxwYXJzZUludChhWzFdLDEwKSx1PWFbMl07MCE9PWMmJih6KHUsYyksRihlLHUsYVszXSksZS5nZXRUYWcoKS5pbnNlcnRSdWxlcyhjLHIpKSxyLmxlbmd0aD0wfWVsc2Ugci5wdXNoKGkpfX19LHE9ZnVuY3Rpb24oKXtyZXR1cm5cInVuZGVmaW5lZFwiIT10eXBlb2YgX193ZWJwYWNrX25vbmNlX18/X193ZWJwYWNrX25vbmNlX186bnVsbH0sSD1mdW5jdGlvbihlKXt2YXIgdD1kb2N1bWVudC5oZWFkLG49ZXx8dCxyPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKSxvPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1lLmNoaWxkTm9kZXMsbj10Lmxlbmd0aDtuPj0wO24tLSl7dmFyIHI9dFtuXTtpZihyJiYxPT09ci5ub2RlVHlwZSYmci5oYXNBdHRyaWJ1dGUoQSkpcmV0dXJuIHJ9fShuKSxzPXZvaWQgMCE9PW8/by5uZXh0U2libGluZzpudWxsO3Iuc2V0QXR0cmlidXRlKEEsXCJhY3RpdmVcIiksci5zZXRBdHRyaWJ1dGUoXCJkYXRhLXN0eWxlZC12ZXJzaW9uXCIsXCI1LjIuMVwiKTt2YXIgaT1xKCk7cmV0dXJuIGkmJnIuc2V0QXR0cmlidXRlKFwibm9uY2VcIixpKSxuLmluc2VydEJlZm9yZShyLHMpLHJ9LCQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUpe3ZhciB0PXRoaXMuZWxlbWVudD1IKGUpO3QuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoXCJcIikpLHRoaXMuc2hlZXQ9ZnVuY3Rpb24oZSl7aWYoZS5zaGVldClyZXR1cm4gZS5zaGVldDtmb3IodmFyIHQ9ZG9jdW1lbnQuc3R5bGVTaGVldHMsbj0wLHI9dC5sZW5ndGg7bjxyO24rKyl7dmFyIG89dFtuXTtpZihvLm93bmVyTm9kZT09PWUpcmV0dXJuIG99aigxNyl9KHQpLHRoaXMubGVuZ3RoPTB9dmFyIHQ9ZS5wcm90b3R5cGU7cmV0dXJuIHQuaW5zZXJ0UnVsZT1mdW5jdGlvbihlLHQpe3RyeXtyZXR1cm4gdGhpcy5zaGVldC5pbnNlcnRSdWxlKHQsZSksdGhpcy5sZW5ndGgrKywhMH1jYXRjaChlKXtyZXR1cm4hMX19LHQuZGVsZXRlUnVsZT1mdW5jdGlvbihlKXt0aGlzLnNoZWV0LmRlbGV0ZVJ1bGUoZSksdGhpcy5sZW5ndGgtLX0sdC5nZXRSdWxlPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuc2hlZXQuY3NzUnVsZXNbZV07cmV0dXJuIHZvaWQgMCE9PXQmJlwic3RyaW5nXCI9PXR5cGVvZiB0LmNzc1RleHQ/dC5jc3NUZXh0OlwiXCJ9LGV9KCksVz1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSl7dmFyIHQ9dGhpcy5lbGVtZW50PUgoZSk7dGhpcy5ub2Rlcz10LmNoaWxkTm9kZXMsdGhpcy5sZW5ndGg9MH12YXIgdD1lLnByb3RvdHlwZTtyZXR1cm4gdC5pbnNlcnRSdWxlPWZ1bmN0aW9uKGUsdCl7aWYoZTw9dGhpcy5sZW5ndGgmJmU+PTApe3ZhciBuPWRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHQpLHI9dGhpcy5ub2Rlc1tlXTtyZXR1cm4gdGhpcy5lbGVtZW50Lmluc2VydEJlZm9yZShuLHJ8fG51bGwpLHRoaXMubGVuZ3RoKyssITB9cmV0dXJuITF9LHQuZGVsZXRlUnVsZT1mdW5jdGlvbihlKXt0aGlzLmVsZW1lbnQucmVtb3ZlQ2hpbGQodGhpcy5ub2Rlc1tlXSksdGhpcy5sZW5ndGgtLX0sdC5nZXRSdWxlPWZ1bmN0aW9uKGUpe3JldHVybiBlPHRoaXMubGVuZ3RoP3RoaXMubm9kZXNbZV0udGV4dENvbnRlbnQ6XCJcIn0sZX0oKSxVPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlKXt0aGlzLnJ1bGVzPVtdLHRoaXMubGVuZ3RoPTB9dmFyIHQ9ZS5wcm90b3R5cGU7cmV0dXJuIHQuaW5zZXJ0UnVsZT1mdW5jdGlvbihlLHQpe3JldHVybiBlPD10aGlzLmxlbmd0aCYmKHRoaXMucnVsZXMuc3BsaWNlKGUsMCx0KSx0aGlzLmxlbmd0aCsrLCEwKX0sdC5kZWxldGVSdWxlPWZ1bmN0aW9uKGUpe3RoaXMucnVsZXMuc3BsaWNlKGUsMSksdGhpcy5sZW5ndGgtLX0sdC5nZXRSdWxlPWZ1bmN0aW9uKGUpe3JldHVybiBlPHRoaXMubGVuZ3RoP3RoaXMucnVsZXNbZV06XCJcIn0sZX0oKSxKPUksWD17aXNTZXJ2ZXI6IUksdXNlQ1NTT01JbmplY3Rpb246IVB9LFo9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCxuKXt2b2lkIDA9PT1lJiYoZT1FKSx2b2lkIDA9PT10JiYodD17fSksdGhpcy5vcHRpb25zPXYoe30sWCx7fSxlKSx0aGlzLmdzPXQsdGhpcy5uYW1lcz1uZXcgTWFwKG4pLCF0aGlzLm9wdGlvbnMuaXNTZXJ2ZXImJkkmJkomJihKPSExLGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKEwpLG49MCxyPXQubGVuZ3RoO248cjtuKyspe3ZhciBvPXRbbl07byYmXCJhY3RpdmVcIiE9PW8uZ2V0QXR0cmlidXRlKEEpJiYoWShlLG8pLG8ucGFyZW50Tm9kZSYmby5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKG8pKX19KHRoaXMpKX1lLnJlZ2lzdGVySWQ9ZnVuY3Rpb24oZSl7cmV0dXJuIEIoZSl9O3ZhciB0PWUucHJvdG90eXBlO3JldHVybiB0LnJlY29uc3RydWN0V2l0aE9wdGlvbnM9ZnVuY3Rpb24odCxuKXtyZXR1cm4gdm9pZCAwPT09biYmKG49ITApLG5ldyBlKHYoe30sdGhpcy5vcHRpb25zLHt9LHQpLHRoaXMuZ3MsbiYmdGhpcy5uYW1lc3x8dm9pZCAwKX0sdC5hbGxvY2F0ZUdTSW5zdGFuY2U9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuZ3NbZV09KHRoaXMuZ3NbZV18fDApKzF9LHQuZ2V0VGFnPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGFnfHwodGhpcy50YWc9KG49KHQ9dGhpcy5vcHRpb25zKS5pc1NlcnZlcixyPXQudXNlQ1NTT01JbmplY3Rpb24sbz10LnRhcmdldCxlPW4/bmV3IFUobyk6cj9uZXcgJChvKTpuZXcgVyhvKSxuZXcgVChlKSkpO3ZhciBlLHQsbixyLG99LHQuaGFzTmFtZUZvcklkPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHRoaXMubmFtZXMuaGFzKGUpJiZ0aGlzLm5hbWVzLmdldChlKS5oYXModCl9LHQucmVnaXN0ZXJOYW1lPWZ1bmN0aW9uKGUsdCl7aWYoQihlKSx0aGlzLm5hbWVzLmhhcyhlKSl0aGlzLm5hbWVzLmdldChlKS5hZGQodCk7ZWxzZXt2YXIgbj1uZXcgU2V0O24uYWRkKHQpLHRoaXMubmFtZXMuc2V0KGUsbil9fSx0Lmluc2VydFJ1bGVzPWZ1bmN0aW9uKGUsdCxuKXt0aGlzLnJlZ2lzdGVyTmFtZShlLHQpLHRoaXMuZ2V0VGFnKCkuaW5zZXJ0UnVsZXMoQihlKSxuKX0sdC5jbGVhck5hbWVzPWZ1bmN0aW9uKGUpe3RoaXMubmFtZXMuaGFzKGUpJiZ0aGlzLm5hbWVzLmdldChlKS5jbGVhcigpfSx0LmNsZWFyUnVsZXM9ZnVuY3Rpb24oZSl7dGhpcy5nZXRUYWcoKS5jbGVhckdyb3VwKEIoZSkpLHRoaXMuY2xlYXJOYW1lcyhlKX0sdC5jbGVhclRhZz1mdW5jdGlvbigpe3RoaXMudGFnPXZvaWQgMH0sdC50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbihlKXtmb3IodmFyIHQ9ZS5nZXRUYWcoKSxuPXQubGVuZ3RoLHI9XCJcIixvPTA7bzxuO28rKyl7dmFyIHM9TShvKTtpZih2b2lkIDAhPT1zKXt2YXIgaT1lLm5hbWVzLmdldChzKSxhPXQuZ2V0R3JvdXAobyk7aWYodm9pZCAwIT09aSYmMCE9PWEubGVuZ3RoKXt2YXIgYz1BK1wiLmdcIitvKydbaWQ9XCInK3MrJ1wiXScsdT1cIlwiO3ZvaWQgMCE9PWkmJmkuZm9yRWFjaCgoZnVuY3Rpb24oZSl7ZS5sZW5ndGg+MCYmKHUrPWUrXCIsXCIpfSkpLHIrPVwiXCIrYStjKyd7Y29udGVudDpcIicrdSsnXCJ9Lyohc2MqL1xcbid9fX1yZXR1cm4gcn0odGhpcyl9LGV9KCksSz0vKGEpKGQpL2dpLFE9ZnVuY3Rpb24oZSl7cmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoZSsoZT4yNT8zOTo5NykpfTtmdW5jdGlvbiBlZShlKXt2YXIgdCxuPVwiXCI7Zm9yKHQ9TWF0aC5hYnMoZSk7dD41Mjt0PXQvNTJ8MCluPVEodCU1MikrbjtyZXR1cm4oUSh0JTUyKStuKS5yZXBsYWNlKEssXCIkMS0kMlwiKX12YXIgdGU9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIG49dC5sZW5ndGg7bjspZT0zMyplXnQuY2hhckNvZGVBdCgtLW4pO3JldHVybiBlfSxuZT1mdW5jdGlvbihlKXtyZXR1cm4gdGUoNTM4MSxlKX07ZnVuY3Rpb24gcmUoZSl7Zm9yKHZhciB0PTA7dDxlLmxlbmd0aDt0Kz0xKXt2YXIgbj1lW3RdO2lmKGIobikmJiFOKG4pKXJldHVybiExfXJldHVybiEwfXZhciBvZT1uZShcIjUuMi4xXCIpLHNlPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQsbil7dGhpcy5ydWxlcz1lLHRoaXMuc3RhdGljUnVsZXNJZD1cIlwiLHRoaXMuaXNTdGF0aWM9XCJwcm9kdWN0aW9uXCI9PT1wcm9jZXNzLmVudi5OT0RFX0VOViYmKHZvaWQgMD09PW58fG4uaXNTdGF0aWMpJiZyZShlKSx0aGlzLmNvbXBvbmVudElkPXQsdGhpcy5iYXNlSGFzaD10ZShvZSx0KSx0aGlzLmJhc2VTdHlsZT1uLFoucmVnaXN0ZXJJZCh0KX1yZXR1cm4gZS5wcm90b3R5cGUuZ2VuZXJhdGVBbmRJbmplY3RTdHlsZXM9ZnVuY3Rpb24oZSx0LG4pe3ZhciByPXRoaXMuY29tcG9uZW50SWQsbz1bXTtpZih0aGlzLmJhc2VTdHlsZSYmby5wdXNoKHRoaXMuYmFzZVN0eWxlLmdlbmVyYXRlQW5kSW5qZWN0U3R5bGVzKGUsdCxuKSksdGhpcy5pc1N0YXRpYyYmIW4uaGFzaClpZih0aGlzLnN0YXRpY1J1bGVzSWQmJnQuaGFzTmFtZUZvcklkKHIsdGhpcy5zdGF0aWNSdWxlc0lkKSlvLnB1c2godGhpcy5zdGF0aWNSdWxlc0lkKTtlbHNle3ZhciBzPU5lKHRoaXMucnVsZXMsZSx0LG4pLmpvaW4oXCJcIiksaT1lZSh0ZSh0aGlzLmJhc2VIYXNoLHMubGVuZ3RoKT4+PjApO2lmKCF0Lmhhc05hbWVGb3JJZChyLGkpKXt2YXIgYT1uKHMsXCIuXCIraSx2b2lkIDAscik7dC5pbnNlcnRSdWxlcyhyLGksYSl9by5wdXNoKGkpLHRoaXMuc3RhdGljUnVsZXNJZD1pfWVsc2V7Zm9yKHZhciBjPXRoaXMucnVsZXMubGVuZ3RoLHU9dGUodGhpcy5iYXNlSGFzaCxuLmhhc2gpLGw9XCJcIixkPTA7ZDxjO2QrKyl7dmFyIGg9dGhpcy5ydWxlc1tkXTtpZihcInN0cmluZ1wiPT10eXBlb2YgaClsKz1oLFwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJih1PXRlKHUsaCtkKSk7ZWxzZSBpZihoKXt2YXIgcD1OZShoLGUsdCxuKSxmPUFycmF5LmlzQXJyYXkocCk/cC5qb2luKFwiXCIpOnA7dT10ZSh1LGYrZCksbCs9Zn19aWYobCl7dmFyIG09ZWUodT4+PjApO2lmKCF0Lmhhc05hbWVGb3JJZChyLG0pKXt2YXIgeT1uKGwsXCIuXCIrbSx2b2lkIDAscik7dC5pbnNlcnRSdWxlcyhyLG0seSl9by5wdXNoKG0pfX1yZXR1cm4gby5qb2luKFwiIFwiKX0sZX0oKSxpZT0vXlxccypcXC9cXC8uKiQvZ20sYWU9W1wiOlwiLFwiW1wiLFwiLlwiLFwiI1wiXTtmdW5jdGlvbiBjZShlKXt2YXIgdCxuLHIsbyxzPXZvaWQgMD09PWU/RTplLGk9cy5vcHRpb25zLGE9dm9pZCAwPT09aT9FOmksYz1zLnBsdWdpbnMsdT12b2lkIDA9PT1jP3c6YyxsPW5ldyBwKGEpLGQ9W10saD1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KHQpe2lmKHQpdHJ5e2UodCtcIn1cIil9Y2F0Y2goZSl7fX1yZXR1cm4gZnVuY3Rpb24obixyLG8scyxpLGEsYyx1LGwsZCl7c3dpdGNoKG4pe2Nhc2UgMTppZigwPT09bCYmNjQ9PT1yLmNoYXJDb2RlQXQoMCkpcmV0dXJuIGUocitcIjtcIiksXCJcIjticmVhaztjYXNlIDI6aWYoMD09PXUpcmV0dXJuIHIrXCIvKnwqL1wiO2JyZWFrO2Nhc2UgMzpzd2l0Y2godSl7Y2FzZSAxMDI6Y2FzZSAxMTI6cmV0dXJuIGUob1swXStyKSxcIlwiO2RlZmF1bHQ6cmV0dXJuIHIrKDA9PT1kP1wiLyp8Ki9cIjpcIlwiKX1jYXNlLTI6ci5zcGxpdChcIi8qfCovfVwiKS5mb3JFYWNoKHQpfX19KChmdW5jdGlvbihlKXtkLnB1c2goZSl9KSksZj1mdW5jdGlvbihlLHIscyl7cmV0dXJuIDA9PT1yJiZhZS5pbmNsdWRlcyhzW24ubGVuZ3RoXSl8fHMubWF0Y2gobyk/ZTpcIi5cIit0fTtmdW5jdGlvbiBtKGUscyxpLGEpe3ZvaWQgMD09PWEmJihhPVwiJlwiKTt2YXIgYz1lLnJlcGxhY2UoaWUsXCJcIiksdT1zJiZpP2krXCIgXCIrcytcIiB7IFwiK2MrXCIgfVwiOmM7cmV0dXJuIHQ9YSxuPXMscj1uZXcgUmVnRXhwKFwiXFxcXFwiK24rXCJcXFxcYlwiLFwiZ1wiKSxvPW5ldyBSZWdFeHAoXCIoXFxcXFwiK24rXCJcXFxcYil7Mix9XCIpLGwoaXx8IXM/XCJcIjpzLHUpfXJldHVybiBsLnVzZShbXS5jb25jYXQodSxbZnVuY3Rpb24oZSx0LG8pezI9PT1lJiZvLmxlbmd0aCYmb1swXS5sYXN0SW5kZXhPZihuKT4wJiYob1swXT1vWzBdLnJlcGxhY2UocixmKSl9LGgsZnVuY3Rpb24oZSl7aWYoLTI9PT1lKXt2YXIgdD1kO3JldHVybiBkPVtdLHR9fV0pKSxtLmhhc2g9dS5sZW5ndGg/dS5yZWR1Y2UoKGZ1bmN0aW9uKGUsdCl7cmV0dXJuIHQubmFtZXx8aigxNSksdGUoZSx0Lm5hbWUpfSksNTM4MSkudG9TdHJpbmcoKTpcIlwiLG19dmFyIHVlPXIuY3JlYXRlQ29udGV4dCgpLGxlPXVlLkNvbnN1bWVyLGRlPXIuY3JlYXRlQ29udGV4dCgpLGhlPShkZS5Db25zdW1lcixuZXcgWikscGU9Y2UoKTtmdW5jdGlvbiBmZSgpe3JldHVybiBzKHVlKXx8aGV9ZnVuY3Rpb24gbWUoKXtyZXR1cm4gcyhkZSl8fHBlfWZ1bmN0aW9uIHllKGUpe3ZhciB0PW8oZS5zdHlsaXNQbHVnaW5zKSxuPXRbMF0scz10WzFdLGM9ZmUoKSx1PWkoKGZ1bmN0aW9uKCl7dmFyIHQ9YztyZXR1cm4gZS5zaGVldD90PWUuc2hlZXQ6ZS50YXJnZXQmJih0PXQucmVjb25zdHJ1Y3RXaXRoT3B0aW9ucyh7dGFyZ2V0OmUudGFyZ2V0fSwhMSkpLGUuZGlzYWJsZUNTU09NSW5qZWN0aW9uJiYodD10LnJlY29uc3RydWN0V2l0aE9wdGlvbnMoe3VzZUNTU09NSW5qZWN0aW9uOiExfSkpLHR9KSxbZS5kaXNhYmxlQ1NTT01JbmplY3Rpb24sZS5zaGVldCxlLnRhcmdldF0pLGw9aSgoZnVuY3Rpb24oKXtyZXR1cm4gY2Uoe29wdGlvbnM6e3ByZWZpeDohZS5kaXNhYmxlVmVuZG9yUHJlZml4ZXN9LHBsdWdpbnM6bn0pfSksW2UuZGlzYWJsZVZlbmRvclByZWZpeGVzLG5dKTtyZXR1cm4gYSgoZnVuY3Rpb24oKXtoKG4sZS5zdHlsaXNQbHVnaW5zKXx8cyhlLnN0eWxpc1BsdWdpbnMpfSksW2Uuc3R5bGlzUGx1Z2luc10pLHIuY3JlYXRlRWxlbWVudCh1ZS5Qcm92aWRlcix7dmFsdWU6dX0sci5jcmVhdGVFbGVtZW50KGRlLlByb3ZpZGVyLHt2YWx1ZTpsfSxcInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WP3IuQ2hpbGRyZW4ub25seShlLmNoaWxkcmVuKTplLmNoaWxkcmVuKSl9dmFyIHZlPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQpe3ZhciBuPXRoaXM7dGhpcy5pbmplY3Q9ZnVuY3Rpb24oZSx0KXt2b2lkIDA9PT10JiYodD1wZSk7dmFyIHI9bi5uYW1lK3QuaGFzaDtlLmhhc05hbWVGb3JJZChuLmlkLHIpfHxlLmluc2VydFJ1bGVzKG4uaWQscix0KG4ucnVsZXMscixcIkBrZXlmcmFtZXNcIikpfSx0aGlzLnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIGooMTIsU3RyaW5nKG4ubmFtZSkpfSx0aGlzLm5hbWU9ZSx0aGlzLmlkPVwic2Mta2V5ZnJhbWVzLVwiK2UsdGhpcy5ydWxlcz10fXJldHVybiBlLnByb3RvdHlwZS5nZXROYW1lPWZ1bmN0aW9uKGUpe3JldHVybiB2b2lkIDA9PT1lJiYoZT1wZSksdGhpcy5uYW1lK2UuaGFzaH0sZX0oKSxnZT0vKFtBLVpdKS8sU2U9LyhbQS1aXSkvZyx3ZT0vXm1zLS8sRWU9ZnVuY3Rpb24oZSl7cmV0dXJuXCItXCIrZS50b0xvd2VyQ2FzZSgpfTtmdW5jdGlvbiBiZShlKXtyZXR1cm4gZ2UudGVzdChlKT9lLnJlcGxhY2UoU2UsRWUpLnJlcGxhY2Uod2UsXCItbXMtXCIpOmV9dmFyIF9lPWZ1bmN0aW9uKGUpe3JldHVybiBudWxsPT1lfHwhMT09PWV8fFwiXCI9PT1lfTtmdW5jdGlvbiBOZShlLG4scixvKXtpZihBcnJheS5pc0FycmF5KGUpKXtmb3IodmFyIHMsaT1bXSxhPTAsYz1lLmxlbmd0aDthPGM7YSs9MSlcIlwiIT09KHM9TmUoZVthXSxuLHIsbykpJiYoQXJyYXkuaXNBcnJheShzKT9pLnB1c2guYXBwbHkoaSxzKTppLnB1c2gocykpO3JldHVybiBpfWlmKF9lKGUpKXJldHVyblwiXCI7aWYoTihlKSlyZXR1cm5cIi5cIitlLnN0eWxlZENvbXBvbmVudElkO2lmKGIoZSkpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mKGw9ZSl8fGwucHJvdG90eXBlJiZsLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50fHwhbilyZXR1cm4gZTt2YXIgdT1lKG4pO3JldHVyblwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJnQodSkmJmNvbnNvbGUud2FybihfKGUpK1wiIGlzIG5vdCBhIHN0eWxlZCBjb21wb25lbnQgYW5kIGNhbm5vdCBiZSByZWZlcnJlZCB0byB2aWEgY29tcG9uZW50IHNlbGVjdG9yLiBTZWUgaHR0cHM6Ly93d3cuc3R5bGVkLWNvbXBvbmVudHMuY29tL2RvY3MvYWR2YW5jZWQjcmVmZXJyaW5nLXRvLW90aGVyLWNvbXBvbmVudHMgZm9yIG1vcmUgZGV0YWlscy5cIiksTmUodSxuLHIsbyl9dmFyIGw7cmV0dXJuIGUgaW5zdGFuY2VvZiB2ZT9yPyhlLmluamVjdChyLG8pLGUuZ2V0TmFtZShvKSk6ZTpTKGUpP2Z1bmN0aW9uIGUodCxuKXt2YXIgcixvLHM9W107Zm9yKHZhciBpIGluIHQpdC5oYXNPd25Qcm9wZXJ0eShpKSYmIV9lKHRbaV0pJiYoUyh0W2ldKT9zLnB1c2guYXBwbHkocyxlKHRbaV0saSkpOmIodFtpXSk/cy5wdXNoKGJlKGkpK1wiOlwiLHRbaV0sXCI7XCIpOnMucHVzaChiZShpKStcIjogXCIrKHI9aSxudWxsPT0obz10W2ldKXx8XCJib29sZWFuXCI9PXR5cGVvZiBvfHxcIlwiPT09bz9cIlwiOlwibnVtYmVyXCIhPXR5cGVvZiBvfHwwPT09b3x8ciBpbiBmP1N0cmluZyhvKS50cmltKCk6bytcInB4XCIpK1wiO1wiKSk7cmV0dXJuIG4/W24rXCIge1wiXS5jb25jYXQocyxbXCJ9XCJdKTpzfShlKTplLnRvU3RyaW5nKCl9ZnVuY3Rpb24gQWUoZSl7Zm9yKHZhciB0PWFyZ3VtZW50cy5sZW5ndGgsbj1uZXcgQXJyYXkodD4xP3QtMTowKSxyPTE7cjx0O3IrKyluW3ItMV09YXJndW1lbnRzW3JdO3JldHVybiBiKGUpfHxTKGUpP05lKGcodyxbZV0uY29uY2F0KG4pKSk6MD09PW4ubGVuZ3RoJiYxPT09ZS5sZW5ndGgmJlwic3RyaW5nXCI9PXR5cGVvZiBlWzBdP2U6TmUoZyhlLG4pKX12YXIgQ2U9L2ludmFsaWQgaG9vayBjYWxsL2ksSWU9bmV3IFNldCxQZT1mdW5jdGlvbihlLHQpe2lmKFwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYpe3ZhciBuPVwiVGhlIGNvbXBvbmVudCBcIitlKyh0Pycgd2l0aCB0aGUgaWQgb2YgXCInK3QrJ1wiJzpcIlwiKStcIiBoYXMgYmVlbiBjcmVhdGVkIGR5bmFtaWNhbGx5LlxcbllvdSBtYXkgc2VlIHRoaXMgd2FybmluZyBiZWNhdXNlIHlvdSd2ZSBjYWxsZWQgc3R5bGVkIGluc2lkZSBhbm90aGVyIGNvbXBvbmVudC5cXG5UbyByZXNvbHZlIHRoaXMgb25seSBjcmVhdGUgbmV3IFN0eWxlZENvbXBvbmVudHMgb3V0c2lkZSBvZiBhbnkgcmVuZGVyIG1ldGhvZCBhbmQgZnVuY3Rpb24gY29tcG9uZW50LlwiO3RyeXtjKCksSWUuaGFzKG4pfHwoY29uc29sZS53YXJuKG4pLEllLmFkZChuKSl9Y2F0Y2goZSl7Q2UudGVzdChlLm1lc3NhZ2UpJiZJZS5kZWxldGUobil9fX0sT2U9ZnVuY3Rpb24oZSx0LG4pe3JldHVybiB2b2lkIDA9PT1uJiYobj1FKSxlLnRoZW1lIT09bi50aGVtZSYmZS50aGVtZXx8dHx8bi50aGVtZX0sUmU9L1shXCIjJCUmJygpKissLi86Ozw9Pj9AW1xcXFxcXF1eYHt8fX4tXSsvZyxEZT0vKF4tfC0kKS9nO2Z1bmN0aW9uIGplKGUpe3JldHVybiBlLnJlcGxhY2UoUmUsXCItXCIpLnJlcGxhY2UoRGUsXCJcIil9dmFyIFRlPWZ1bmN0aW9uKGUpe3JldHVybiBlZShuZShlKT4+PjApfTtmdW5jdGlvbiBrZShlKXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgZSYmKFwicHJvZHVjdGlvblwiPT09cHJvY2Vzcy5lbnYuTk9ERV9FTlZ8fGUuY2hhckF0KDApPT09ZS5jaGFyQXQoMCkudG9Mb3dlckNhc2UoKSl9dmFyIHhlPWZ1bmN0aW9uKGUpe3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIGV8fFwib2JqZWN0XCI9PXR5cGVvZiBlJiZudWxsIT09ZSYmIUFycmF5LmlzQXJyYXkoZSl9LFZlPWZ1bmN0aW9uKGUpe3JldHVyblwiX19wcm90b19fXCIhPT1lJiZcImNvbnN0cnVjdG9yXCIhPT1lJiZcInByb3RvdHlwZVwiIT09ZX07ZnVuY3Rpb24gQmUoZSx0LG4pe3ZhciByPWVbbl07eGUodCkmJnhlKHIpP01lKHIsdCk6ZVtuXT10fWZ1bmN0aW9uIE1lKGUpe2Zvcih2YXIgdD1hcmd1bWVudHMubGVuZ3RoLG49bmV3IEFycmF5KHQ+MT90LTE6MCkscj0xO3I8dDtyKyspbltyLTFdPWFyZ3VtZW50c1tyXTtmb3IodmFyIG89MCxzPW47bzxzLmxlbmd0aDtvKyspe3ZhciBpPXNbb107aWYoeGUoaSkpZm9yKHZhciBhIGluIGkpVmUoYSkmJkJlKGUsaVthXSxhKX1yZXR1cm4gZX12YXIgemU9ci5jcmVhdGVDb250ZXh0KCksTGU9emUuQ29uc3VtZXI7ZnVuY3Rpb24gR2UoZSl7dmFyIHQ9cyh6ZSksbj1pKChmdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbihlLHQpe2lmKCFlKXJldHVybiBqKDE0KTtpZihiKGUpKXt2YXIgbj1lKHQpO3JldHVyblwicHJvZHVjdGlvblwiPT09cHJvY2Vzcy5lbnYuTk9ERV9FTlZ8fG51bGwhPT1uJiYhQXJyYXkuaXNBcnJheShuKSYmXCJvYmplY3RcIj09dHlwZW9mIG4/bjpqKDcpfXJldHVybiBBcnJheS5pc0FycmF5KGUpfHxcIm9iamVjdFwiIT10eXBlb2YgZT9qKDgpOnQ/dih7fSx0LHt9LGUpOmV9KGUudGhlbWUsdCl9KSxbZS50aGVtZSx0XSk7cmV0dXJuIGUuY2hpbGRyZW4/ci5jcmVhdGVFbGVtZW50KHplLlByb3ZpZGVyLHt2YWx1ZTpufSxlLmNoaWxkcmVuKTpudWxsfXZhciBGZT17fTtmdW5jdGlvbiBZZShlLHQsbil7dmFyIG89TihlKSxpPSFrZShlKSxhPXQuYXR0cnMsYz12b2lkIDA9PT1hP3c6YSxkPXQuY29tcG9uZW50SWQsaD12b2lkIDA9PT1kP2Z1bmN0aW9uKGUsdCl7dmFyIG49XCJzdHJpbmdcIiE9dHlwZW9mIGU/XCJzY1wiOmplKGUpO0ZlW25dPShGZVtuXXx8MCkrMTt2YXIgcj1uK1wiLVwiK1RlKFwiNS4yLjFcIituK0ZlW25dKTtyZXR1cm4gdD90K1wiLVwiK3I6cn0odC5kaXNwbGF5TmFtZSx0LnBhcmVudENvbXBvbmVudElkKTpkLHA9dC5kaXNwbGF5TmFtZSxmPXZvaWQgMD09PXA/ZnVuY3Rpb24oZSl7cmV0dXJuIGtlKGUpP1wic3R5bGVkLlwiK2U6XCJTdHlsZWQoXCIrXyhlKStcIilcIn0oZSk6cCxnPXQuZGlzcGxheU5hbWUmJnQuY29tcG9uZW50SWQ/amUodC5kaXNwbGF5TmFtZSkrXCItXCIrdC5jb21wb25lbnRJZDp0LmNvbXBvbmVudElkfHxoLFM9byYmZS5hdHRycz9BcnJheS5wcm90b3R5cGUuY29uY2F0KGUuYXR0cnMsYykuZmlsdGVyKEJvb2xlYW4pOmMsQT10LnNob3VsZEZvcndhcmRQcm9wO28mJmUuc2hvdWxkRm9yd2FyZFByb3AmJihBPXQuc2hvdWxkRm9yd2FyZFByb3A/ZnVuY3Rpb24obixyKXtyZXR1cm4gZS5zaG91bGRGb3J3YXJkUHJvcChuLHIpJiZ0LnNob3VsZEZvcndhcmRQcm9wKG4scil9OmUuc2hvdWxkRm9yd2FyZFByb3ApO3ZhciBDLEk9bmV3IHNlKG4sZyxvP2UuY29tcG9uZW50U3R5bGU6dm9pZCAwKSxQPUkuaXNTdGF0aWMmJjA9PT1jLmxlbmd0aCxPPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGZ1bmN0aW9uKGUsdCxuLHIpe3ZhciBvPWUuYXR0cnMsaT1lLmNvbXBvbmVudFN0eWxlLGE9ZS5kZWZhdWx0UHJvcHMsYz1lLmZvbGRlZENvbXBvbmVudElkcyxkPWUuc2hvdWxkRm9yd2FyZFByb3AsaD1lLnN0eWxlZENvbXBvbmVudElkLHA9ZS50YXJnZXQ7XCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmbChoKTt2YXIgZj1mdW5jdGlvbihlLHQsbil7dm9pZCAwPT09ZSYmKGU9RSk7dmFyIHI9dih7fSx0LHt0aGVtZTplfSksbz17fTtyZXR1cm4gbi5mb3JFYWNoKChmdW5jdGlvbihlKXt2YXIgdCxuLHMsaT1lO2Zvcih0IGluIGIoaSkmJihpPWkocikpLGkpclt0XT1vW3RdPVwiY2xhc3NOYW1lXCI9PT10PyhuPW9bdF0scz1pW3RdLG4mJnM/bitcIiBcIitzOm58fHMpOmlbdF19KSksW3Isb119KE9lKHQscyh6ZSksYSl8fEUsdCxvKSx5PWZbMF0sZz1mWzFdLFM9ZnVuY3Rpb24oZSx0LG4scil7dmFyIG89ZmUoKSxzPW1lKCksaT10P2UuZ2VuZXJhdGVBbmRJbmplY3RTdHlsZXMoRSxvLHMpOmUuZ2VuZXJhdGVBbmRJbmplY3RTdHlsZXMobixvLHMpO3JldHVyblwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJmwoaSksXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmIXQmJnImJnIoaSksaX0oaSxyLHksXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOVj9lLndhcm5Ub29NYW55Q2xhc3Nlczp2b2lkIDApLHc9bixfPWcuJGFzfHx0LiRhc3x8Zy5hc3x8dC5hc3x8cCxOPWtlKF8pLEE9ZyE9PXQ/dih7fSx0LHt9LGcpOnQsQz17fTtmb3IodmFyIEkgaW4gQSlcIiRcIiE9PUlbMF0mJlwiYXNcIiE9PUkmJihcImZvcndhcmRlZEFzXCI9PT1JP0MuYXM9QVtJXTooZD9kKEksbSk6IU58fG0oSSkpJiYoQ1tJXT1BW0ldKSk7cmV0dXJuIHQuc3R5bGUmJmcuc3R5bGUhPT10LnN0eWxlJiYoQy5zdHlsZT12KHt9LHQuc3R5bGUse30sZy5zdHlsZSkpLEMuY2xhc3NOYW1lPUFycmF5LnByb3RvdHlwZS5jb25jYXQoYyxoLFMhPT1oP1M6bnVsbCx0LmNsYXNzTmFtZSxnLmNsYXNzTmFtZSkuZmlsdGVyKEJvb2xlYW4pLmpvaW4oXCIgXCIpLEMucmVmPXcsdShfLEMpfShDLGUsdCxQKX07cmV0dXJuIE8uZGlzcGxheU5hbWU9ZiwoQz1yLmZvcndhcmRSZWYoTykpLmF0dHJzPVMsQy5jb21wb25lbnRTdHlsZT1JLEMuZGlzcGxheU5hbWU9ZixDLnNob3VsZEZvcndhcmRQcm9wPUEsQy5mb2xkZWRDb21wb25lbnRJZHM9bz9BcnJheS5wcm90b3R5cGUuY29uY2F0KGUuZm9sZGVkQ29tcG9uZW50SWRzLGUuc3R5bGVkQ29tcG9uZW50SWQpOncsQy5zdHlsZWRDb21wb25lbnRJZD1nLEMudGFyZ2V0PW8/ZS50YXJnZXQ6ZSxDLndpdGhDb21wb25lbnQ9ZnVuY3Rpb24oZSl7dmFyIHI9dC5jb21wb25lbnRJZCxvPWZ1bmN0aW9uKGUsdCl7aWYobnVsbD09ZSlyZXR1cm57fTt2YXIgbixyLG89e30scz1PYmplY3Qua2V5cyhlKTtmb3Iocj0wO3I8cy5sZW5ndGg7cisrKW49c1tyXSx0LmluZGV4T2Yobik+PTB8fChvW25dPWVbbl0pO3JldHVybiBvfSh0LFtcImNvbXBvbmVudElkXCJdKSxzPXImJnIrXCItXCIrKGtlKGUpP2U6amUoXyhlKSkpO3JldHVybiBZZShlLHYoe30sbyx7YXR0cnM6Uyxjb21wb25lbnRJZDpzfSksbil9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShDLFwiZGVmYXVsdFByb3BzXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9mb2xkZWREZWZhdWx0UHJvcHN9LHNldDpmdW5jdGlvbih0KXt0aGlzLl9mb2xkZWREZWZhdWx0UHJvcHM9bz9NZSh7fSxlLmRlZmF1bHRQcm9wcyx0KTp0fX0pLFwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJihQZShmLGcpLEMud2FyblRvb01hbnlDbGFzc2VzPWZ1bmN0aW9uKGUsdCl7dmFyIG49e30scj0hMTtyZXR1cm4gZnVuY3Rpb24obyl7aWYoIXImJihuW29dPSEwLE9iamVjdC5rZXlzKG4pLmxlbmd0aD49MjAwKSl7dmFyIHM9dD8nIHdpdGggdGhlIGlkIG9mIFwiJyt0KydcIic6XCJcIjtjb25zb2xlLndhcm4oXCJPdmVyIDIwMCBjbGFzc2VzIHdlcmUgZ2VuZXJhdGVkIGZvciBjb21wb25lbnQgXCIrZStzK1wiLlxcbkNvbnNpZGVyIHVzaW5nIHRoZSBhdHRycyBtZXRob2QsIHRvZ2V0aGVyIHdpdGggYSBzdHlsZSBvYmplY3QgZm9yIGZyZXF1ZW50bHkgY2hhbmdlZCBzdHlsZXMuXFxuRXhhbXBsZTpcXG4gIGNvbnN0IENvbXBvbmVudCA9IHN0eWxlZC5kaXYuYXR0cnMocHJvcHMgPT4gKHtcXG4gICAgc3R5bGU6IHtcXG4gICAgICBiYWNrZ3JvdW5kOiBwcm9wcy5iYWNrZ3JvdW5kLFxcbiAgICB9LFxcbiAgfSkpYHdpZHRoOiAxMDAlO2BcXG5cXG4gIDxDb21wb25lbnQgLz5cIikscj0hMCxuPXt9fX19KGYsZykpLEMudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm5cIi5cIitDLnN0eWxlZENvbXBvbmVudElkfSxpJiZ5KEMsZSx7YXR0cnM6ITAsY29tcG9uZW50U3R5bGU6ITAsZGlzcGxheU5hbWU6ITAsZm9sZGVkQ29tcG9uZW50SWRzOiEwLHNob3VsZEZvcndhcmRQcm9wOiEwLHN0eWxlZENvbXBvbmVudElkOiEwLHRhcmdldDohMCx3aXRoQ29tcG9uZW50OiEwfSksQ312YXIgcWU9ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uIGUodCxyLG8pe2lmKHZvaWQgMD09PW8mJihvPUUpLCFuKHIpKXJldHVybiBqKDEsU3RyaW5nKHIpKTt2YXIgcz1mdW5jdGlvbigpe3JldHVybiB0KHIsbyxBZS5hcHBseSh2b2lkIDAsYXJndW1lbnRzKSl9O3JldHVybiBzLndpdGhDb25maWc9ZnVuY3Rpb24obil7cmV0dXJuIGUodCxyLHYoe30sbyx7fSxuKSl9LHMuYXR0cnM9ZnVuY3Rpb24obil7cmV0dXJuIGUodCxyLHYoe30sbyx7YXR0cnM6QXJyYXkucHJvdG90eXBlLmNvbmNhdChvLmF0dHJzLG4pLmZpbHRlcihCb29sZWFuKX0pKX0sc30oWWUsZSl9O1tcImFcIixcImFiYnJcIixcImFkZHJlc3NcIixcImFyZWFcIixcImFydGljbGVcIixcImFzaWRlXCIsXCJhdWRpb1wiLFwiYlwiLFwiYmFzZVwiLFwiYmRpXCIsXCJiZG9cIixcImJpZ1wiLFwiYmxvY2txdW90ZVwiLFwiYm9keVwiLFwiYnJcIixcImJ1dHRvblwiLFwiY2FudmFzXCIsXCJjYXB0aW9uXCIsXCJjaXRlXCIsXCJjb2RlXCIsXCJjb2xcIixcImNvbGdyb3VwXCIsXCJkYXRhXCIsXCJkYXRhbGlzdFwiLFwiZGRcIixcImRlbFwiLFwiZGV0YWlsc1wiLFwiZGZuXCIsXCJkaWFsb2dcIixcImRpdlwiLFwiZGxcIixcImR0XCIsXCJlbVwiLFwiZW1iZWRcIixcImZpZWxkc2V0XCIsXCJmaWdjYXB0aW9uXCIsXCJmaWd1cmVcIixcImZvb3RlclwiLFwiZm9ybVwiLFwiaDFcIixcImgyXCIsXCJoM1wiLFwiaDRcIixcImg1XCIsXCJoNlwiLFwiaGVhZFwiLFwiaGVhZGVyXCIsXCJoZ3JvdXBcIixcImhyXCIsXCJodG1sXCIsXCJpXCIsXCJpZnJhbWVcIixcImltZ1wiLFwiaW5wdXRcIixcImluc1wiLFwia2JkXCIsXCJrZXlnZW5cIixcImxhYmVsXCIsXCJsZWdlbmRcIixcImxpXCIsXCJsaW5rXCIsXCJtYWluXCIsXCJtYXBcIixcIm1hcmtcIixcIm1hcnF1ZWVcIixcIm1lbnVcIixcIm1lbnVpdGVtXCIsXCJtZXRhXCIsXCJtZXRlclwiLFwibmF2XCIsXCJub3NjcmlwdFwiLFwib2JqZWN0XCIsXCJvbFwiLFwib3B0Z3JvdXBcIixcIm9wdGlvblwiLFwib3V0cHV0XCIsXCJwXCIsXCJwYXJhbVwiLFwicGljdHVyZVwiLFwicHJlXCIsXCJwcm9ncmVzc1wiLFwicVwiLFwicnBcIixcInJ0XCIsXCJydWJ5XCIsXCJzXCIsXCJzYW1wXCIsXCJzY3JpcHRcIixcInNlY3Rpb25cIixcInNlbGVjdFwiLFwic21hbGxcIixcInNvdXJjZVwiLFwic3BhblwiLFwic3Ryb25nXCIsXCJzdHlsZVwiLFwic3ViXCIsXCJzdW1tYXJ5XCIsXCJzdXBcIixcInRhYmxlXCIsXCJ0Ym9keVwiLFwidGRcIixcInRleHRhcmVhXCIsXCJ0Zm9vdFwiLFwidGhcIixcInRoZWFkXCIsXCJ0aW1lXCIsXCJ0aXRsZVwiLFwidHJcIixcInRyYWNrXCIsXCJ1XCIsXCJ1bFwiLFwidmFyXCIsXCJ2aWRlb1wiLFwid2JyXCIsXCJjaXJjbGVcIixcImNsaXBQYXRoXCIsXCJkZWZzXCIsXCJlbGxpcHNlXCIsXCJmb3JlaWduT2JqZWN0XCIsXCJnXCIsXCJpbWFnZVwiLFwibGluZVwiLFwibGluZWFyR3JhZGllbnRcIixcIm1hcmtlclwiLFwibWFza1wiLFwicGF0aFwiLFwicGF0dGVyblwiLFwicG9seWdvblwiLFwicG9seWxpbmVcIixcInJhZGlhbEdyYWRpZW50XCIsXCJyZWN0XCIsXCJzdG9wXCIsXCJzdmdcIixcInRleHRcIixcInRzcGFuXCJdLmZvckVhY2goKGZ1bmN0aW9uKGUpe3FlW2VdPXFlKGUpfSkpO3ZhciBIZT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0KXt0aGlzLnJ1bGVzPWUsdGhpcy5jb21wb25lbnRJZD10LHRoaXMuaXNTdGF0aWM9cmUoZSksWi5yZWdpc3RlcklkKHRoaXMuY29tcG9uZW50SWQrMSl9dmFyIHQ9ZS5wcm90b3R5cGU7cmV0dXJuIHQuY3JlYXRlU3R5bGVzPWZ1bmN0aW9uKGUsdCxuLHIpe3ZhciBvPXIoTmUodGhpcy5ydWxlcyx0LG4scikuam9pbihcIlwiKSxcIlwiKSxzPXRoaXMuY29tcG9uZW50SWQrZTtuLmluc2VydFJ1bGVzKHMscyxvKX0sdC5yZW1vdmVTdHlsZXM9ZnVuY3Rpb24oZSx0KXt0LmNsZWFyUnVsZXModGhpcy5jb21wb25lbnRJZCtlKX0sdC5yZW5kZXJTdHlsZXM9ZnVuY3Rpb24oZSx0LG4scil7ZT4yJiZaLnJlZ2lzdGVySWQodGhpcy5jb21wb25lbnRJZCtlKSx0aGlzLnJlbW92ZVN0eWxlcyhlLG4pLHRoaXMuY3JlYXRlU3R5bGVzKGUsdCxuLHIpfSxlfSgpO2Z1bmN0aW9uICRlKGUpe2Zvcih2YXIgdD1hcmd1bWVudHMubGVuZ3RoLG49bmV3IEFycmF5KHQ+MT90LTE6MCksbz0xO288dDtvKyspbltvLTFdPWFyZ3VtZW50c1tvXTt2YXIgaT1BZS5hcHBseSh2b2lkIDAsW2VdLmNvbmNhdChuKSksYT1cInNjLWdsb2JhbC1cIitUZShKU09OLnN0cmluZ2lmeShpKSksdT1uZXcgSGUoaSxhKTtmdW5jdGlvbiBsKGUpe3ZhciB0PWZlKCksbj1tZSgpLG89cyh6ZSksbD1jKHQuYWxsb2NhdGVHU0luc3RhbmNlKGEpKS5jdXJyZW50O3JldHVyblwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJnIuQ2hpbGRyZW4uY291bnQoZS5jaGlsZHJlbikmJmNvbnNvbGUud2FybihcIlRoZSBnbG9iYWwgc3R5bGUgY29tcG9uZW50IFwiK2ErXCIgd2FzIGdpdmVuIGNoaWxkIEpTWC4gY3JlYXRlR2xvYmFsU3R5bGUgZG9lcyBub3QgcmVuZGVyIGNoaWxkcmVuLlwiKSxcInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiZpLnNvbWUoKGZ1bmN0aW9uKGUpe3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiBlJiYtMSE9PWUuaW5kZXhPZihcIkBpbXBvcnRcIil9KSkmJmNvbnNvbGUud2FybihcIlBsZWFzZSBkbyBub3QgdXNlIEBpbXBvcnQgQ1NTIHN5bnRheCBpbiBjcmVhdGVHbG9iYWxTdHlsZSBhdCB0aGlzIHRpbWUsIGFzIHRoZSBDU1NPTSBBUElzIHdlIHVzZSBpbiBwcm9kdWN0aW9uIGRvIG5vdCBoYW5kbGUgaXQgd2VsbC4gSW5zdGVhZCwgd2UgcmVjb21tZW5kIHVzaW5nIGEgbGlicmFyeSBzdWNoIGFzIHJlYWN0LWhlbG1ldCB0byBpbmplY3QgYSB0eXBpY2FsIDxsaW5rPiBtZXRhIHRhZyB0byB0aGUgc3R5bGVzaGVldCwgb3Igc2ltcGx5IGVtYmVkZGluZyBpdCBtYW51YWxseSBpbiB5b3VyIGluZGV4Lmh0bWwgPGhlYWQ+IHNlY3Rpb24gZm9yIGEgc2ltcGxlciBhcHAuXCIpLGQoKGZ1bmN0aW9uKCl7cmV0dXJuIGgobCxlLHQsbyxuKSxmdW5jdGlvbigpe3JldHVybiB1LnJlbW92ZVN0eWxlcyhsLHQpfX0pLFtsLGUsdCxvLG5dKSxudWxsfWZ1bmN0aW9uIGgoZSx0LG4scixvKXtpZih1LmlzU3RhdGljKXUucmVuZGVyU3R5bGVzKGUsTyxuLG8pO2Vsc2V7dmFyIHM9dih7fSx0LHt0aGVtZTpPZSh0LHIsbC5kZWZhdWx0UHJvcHMpfSk7dS5yZW5kZXJTdHlsZXMoZSxzLG4sbyl9fXJldHVyblwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJlBlKGEpLHIubWVtbyhsKX1mdW5jdGlvbiBXZShlKXtcInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgbmF2aWdhdG9yJiZcIlJlYWN0TmF0aXZlXCI9PT1uYXZpZ2F0b3IucHJvZHVjdCYmY29uc29sZS53YXJuKFwiYGtleWZyYW1lc2AgY2Fubm90IGJlIHVzZWQgb24gUmVhY3ROYXRpdmUsIG9ubHkgb24gdGhlIHdlYi4gVG8gZG8gYW5pbWF0aW9uIGluIFJlYWN0TmF0aXZlIHBsZWFzZSB1c2UgQW5pbWF0ZWQuXCIpO2Zvcih2YXIgdD1hcmd1bWVudHMubGVuZ3RoLG49bmV3IEFycmF5KHQ+MT90LTE6MCkscj0xO3I8dDtyKyspbltyLTFdPWFyZ3VtZW50c1tyXTt2YXIgbz1BZS5hcHBseSh2b2lkIDAsW2VdLmNvbmNhdChuKSkuam9pbihcIlwiKSxzPVRlKG8pO3JldHVybiBuZXcgdmUocyxvKX12YXIgVWU9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKCl7dmFyIGU9dGhpczt0aGlzLl9lbWl0U2hlZXRDU1M9ZnVuY3Rpb24oKXt2YXIgdD1lLmluc3RhbmNlLnRvU3RyaW5nKCksbj1xKCk7cmV0dXJuXCI8c3R5bGUgXCIrW24mJidub25jZT1cIicrbisnXCInLEErJz1cInRydWVcIicsJ2RhdGEtc3R5bGVkLXZlcnNpb249XCI1LjIuMVwiJ10uZmlsdGVyKEJvb2xlYW4pLmpvaW4oXCIgXCIpK1wiPlwiK3QrXCI8L3N0eWxlPlwifSx0aGlzLmdldFN0eWxlVGFncz1mdW5jdGlvbigpe3JldHVybiBlLnNlYWxlZD9qKDIpOmUuX2VtaXRTaGVldENTUygpfSx0aGlzLmdldFN0eWxlRWxlbWVudD1mdW5jdGlvbigpe3ZhciB0O2lmKGUuc2VhbGVkKXJldHVybiBqKDIpO3ZhciBuPSgodD17fSlbQV09XCJcIix0W1wiZGF0YS1zdHlsZWQtdmVyc2lvblwiXT1cIjUuMi4xXCIsdC5kYW5nZXJvdXNseVNldElubmVySFRNTD17X19odG1sOmUuaW5zdGFuY2UudG9TdHJpbmcoKX0sdCksbz1xKCk7cmV0dXJuIG8mJihuLm5vbmNlPW8pLFtyLmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiLHYoe30sbix7a2V5Olwic2MtMC0wXCJ9KSldfSx0aGlzLnNlYWw9ZnVuY3Rpb24oKXtlLnNlYWxlZD0hMH0sdGhpcy5pbnN0YW5jZT1uZXcgWih7aXNTZXJ2ZXI6ITB9KSx0aGlzLnNlYWxlZD0hMX12YXIgdD1lLnByb3RvdHlwZTtyZXR1cm4gdC5jb2xsZWN0U3R5bGVzPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLnNlYWxlZD9qKDIpOnIuY3JlYXRlRWxlbWVudCh5ZSx7c2hlZXQ6dGhpcy5pbnN0YW5jZX0sZSl9LHQuaW50ZXJsZWF2ZVdpdGhOb2RlU3RyZWFtPWZ1bmN0aW9uKGUpe3JldHVybiBqKDMpfSxlfSgpLEplPWZ1bmN0aW9uKGUpe3ZhciB0PXIuZm9yd2FyZFJlZigoZnVuY3Rpb24odCxuKXt2YXIgbz1zKHplKSxpPWUuZGVmYXVsdFByb3BzLGE9T2UodCxvLGkpO3JldHVyblwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJnZvaWQgMD09PWEmJmNvbnNvbGUud2FybignW3dpdGhUaGVtZV0gWW91IGFyZSBub3QgdXNpbmcgYSBUaGVtZVByb3ZpZGVyIG5vciBwYXNzaW5nIGEgdGhlbWUgcHJvcCBvciBhIHRoZW1lIGluIGRlZmF1bHRQcm9wcyBpbiBjb21wb25lbnQgY2xhc3MgXCInK18oZSkrJ1wiJyksci5jcmVhdGVFbGVtZW50KGUsdih7fSx0LHt0aGVtZTphLHJlZjpufSkpfSkpO3JldHVybiB5KHQsZSksdC5kaXNwbGF5TmFtZT1cIldpdGhUaGVtZShcIitfKGUpK1wiKVwiLHR9LFhlPWZ1bmN0aW9uKCl7cmV0dXJuIHMoemUpfSxaZT17U3R5bGVTaGVldDpaLG1hc3RlclNoZWV0OmhlfTtcInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgbmF2aWdhdG9yJiZcIlJlYWN0TmF0aXZlXCI9PT1uYXZpZ2F0b3IucHJvZHVjdCYmY29uc29sZS53YXJuKFwiSXQgbG9va3MgbGlrZSB5b3UndmUgaW1wb3J0ZWQgJ3N0eWxlZC1jb21wb25lbnRzJyBvbiBSZWFjdCBOYXRpdmUuXFxuUGVyaGFwcyB5b3UncmUgbG9va2luZyB0byBpbXBvcnQgJ3N0eWxlZC1jb21wb25lbnRzL25hdGl2ZSc/XFxuUmVhZCBtb3JlIGFib3V0IHRoaXMgYXQgaHR0cHM6Ly93d3cuc3R5bGVkLWNvbXBvbmVudHMuY29tL2RvY3MvYmFzaWNzI3JlYWN0LW5hdGl2ZVwiKSxcInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiZcInRlc3RcIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiYod2luZG93W1wiX19zdHlsZWQtY29tcG9uZW50cy1pbml0X19cIl09d2luZG93W1wiX19zdHlsZWQtY29tcG9uZW50cy1pbml0X19cIl18fDAsMT09PXdpbmRvd1tcIl9fc3R5bGVkLWNvbXBvbmVudHMtaW5pdF9fXCJdJiZjb25zb2xlLndhcm4oXCJJdCBsb29rcyBsaWtlIHRoZXJlIGFyZSBzZXZlcmFsIGluc3RhbmNlcyBvZiAnc3R5bGVkLWNvbXBvbmVudHMnIGluaXRpYWxpemVkIGluIHRoaXMgYXBwbGljYXRpb24uIFRoaXMgbWF5IGNhdXNlIGR5bmFtaWMgc3R5bGVzIHRvIG5vdCByZW5kZXIgcHJvcGVybHksIGVycm9ycyBkdXJpbmcgdGhlIHJlaHlkcmF0aW9uIHByb2Nlc3MsIGEgbWlzc2luZyB0aGVtZSBwcm9wLCBhbmQgbWFrZXMgeW91ciBhcHBsaWNhdGlvbiBiaWdnZXIgd2l0aG91dCBnb29kIHJlYXNvbi5cXG5cXG5TZWUgaHR0cHM6Ly9zLWMuc2gvMkJBWHplZCBmb3IgbW9yZSBpbmZvLlwiKSx3aW5kb3dbXCJfX3N0eWxlZC1jb21wb25lbnRzLWluaXRfX1wiXSs9MSk7ZXhwb3J0IGRlZmF1bHQgcWU7ZXhwb3J0e1VlIGFzIFNlcnZlclN0eWxlU2hlZXQsbGUgYXMgU3R5bGVTaGVldENvbnN1bWVyLHVlIGFzIFN0eWxlU2hlZXRDb250ZXh0LHllIGFzIFN0eWxlU2hlZXRNYW5hZ2VyLExlIGFzIFRoZW1lQ29uc3VtZXIsemUgYXMgVGhlbWVDb250ZXh0LEdlIGFzIFRoZW1lUHJvdmlkZXIsWmUgYXMgX19QUklWQVRFX18sJGUgYXMgY3JlYXRlR2xvYmFsU3R5bGUsQWUgYXMgY3NzLE4gYXMgaXNTdHlsZWRDb21wb25lbnQsV2UgYXMga2V5ZnJhbWVzLFhlIGFzIHVzZVRoZW1lLEMgYXMgdmVyc2lvbixKZSBhcyB3aXRoVGhlbWV9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3R5bGVkLWNvbXBvbmVudHMuYnJvd3Nlci5lc20uanMubWFwXG4iLCJ2YXIgaXNQcm9kdWN0aW9uID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJztcbnZhciBwcmVmaXggPSAnSW52YXJpYW50IGZhaWxlZCc7XG5mdW5jdGlvbiBpbnZhcmlhbnQoY29uZGl0aW9uLCBtZXNzYWdlKSB7XG4gICAgaWYgKGNvbmRpdGlvbikge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChpc1Byb2R1Y3Rpb24pIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKHByZWZpeCk7XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcihwcmVmaXggKyBcIjogXCIgKyAobWVzc2FnZSB8fCAnJykpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBpbnZhcmlhbnQ7XG4iXSwic291cmNlUm9vdCI6IiJ9