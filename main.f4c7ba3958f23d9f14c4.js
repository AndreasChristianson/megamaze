(self.webpackChunkstatic_site_template=self.webpackChunkstatic_site_template||[]).push([[179],{79:(e,t,r)=>{"use strict";r(794);var n=r(935),o=r(294),a=r(163),i=a.ZP.div.withConfig({displayName:"GridAligned",componentId:"p6llgd-0"})(["width:","%;height:","%;top:","%;left:","%;position:absolute;box-sizing:border-box;"],(function(e){var t=e.width;return 100*(void 0===t?1:t)/30}),(function(e){var t=e.height;return 100*(void 0===t?1:t)/30}),(function(e){return 100*e.x/30}),(function(e){return 100*e.y/30})),c=(0,a.ZP)(i).withConfig({displayName:"Grid__GridBox",componentId:"hsvf45-0"})(["border:1px solid darkgrey;"]),l=function(e){return o.createElement(o.Fragment,null,new Array(900).fill(!0).map((function(e,t){return o.createElement(c,{key:t,x:Math.floor(t/30),y:t%30})})))};function u(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var f=function(e){var t,r,n=e.gameState,a=n.page,i=n.score,c=e.changeState,f=(t=(0,o.useState)(!1),r=1,function(e){if(Array.isArray(e))return e}(t)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var r=[],n=!0,o=!1,a=void 0;try{for(var i,c=e[Symbol.iterator]();!(n=(i=c.next()).done)&&(r.push(i.value),!t||r.length!==t);n=!0);}catch(e){o=!0,a=e}finally{try{n||null==c.return||c.return()}finally{if(o)throw a}}return r}}(t,r)||function(e,t){if(e){if("string"==typeof e)return u(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?u(e,t):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}())[0];return o.createElement(o.Fragment,null,f?o.createElement(l,null):null,o.createElement(a,{changePage:function(e){return c("page",e)},incrementScore:function(e){return c("score",i+e)}}))};function s(){var e,t,r=(e=['\n  * {\n    border: 0;\n    padding: 0;\n    margin: 0;\n    font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;\n  }\n  \n  body{\n    background-color: lightgray;\n    @media (prefers-color-scheme: dark) {\n      background-color: gray;\n    }\n  }\n'],t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}})));return s=function(){return r},r}var d=(0,a.vJ)(s()),m=r(427),p=a.ZP.div.withConfig({displayName:"Background",componentId:"sc-1ja7kg2-0"})(["width:100%;height:100%;background-image:url(",");background-size:100% 100%;"],(function(e){return e.backgroundImage}));function y(){return(y=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}var g=(0,a.ZP)(i).withConfig({displayName:"Button__ButtonDiv",componentId:"sc-1wh5wgx-0"})(["cursor:pointer;border-radius:1em;border:2px solid black;:focus{border-color:red;}background-color:#33333355;display:flex;justify-content:center;align-items:center;"]),b=function(e){return o.createElement(g,y({role:"button"},e),o.createElement("div",null,e.children))},h=r(454),v=a.ZP.h1.withConfig({displayName:"Controls__Header",componentId:"l9yrre-0"})(["margin:1em;text-decoration:underline;"]),w=a.ZP.h3.withConfig({displayName:"Controls__SectionHeader",componentId:"l9yrre-1"})(["margin:1em;"]),O=function(e){var t=e.changePage;return o.createElement(p,{backgroundImage:h},o.createElement(b,{onClick:function(){return t(P)},x:2,y:2,width:26,height:26},o.createElement(v,null,"Controls"),o.createElement(w,null,"Movement:"),o.createElement("p",null,"w,a,s,d or arrow keys"),o.createElement(w,null,"Shoot:"),o.createElement("p",null,"left click")))},k=r(675),j=r(550),S=(0,a.ZP)(i).withConfig({displayName:"Vim",componentId:"sc-1e60oua-0"})(["background-image:url(",");background-size:100% 100%;"],j);function E(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var x=function(e){e.changePage;var t,r,n=(0,o.useRef)(null),a=(t=(0,o.useState)({x:25,y:25}),r=2,function(e){if(Array.isArray(e))return e}(t)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var r=[],n=!0,o=!1,a=void 0;try{for(var i,c=e[Symbol.iterator]();!(n=(i=c.next()).done)&&(r.push(i.value),!t||r.length!==t);n=!0);}catch(e){o=!0,a=e}finally{try{n||null==c.return||c.return()}finally{if(o)throw a}}return r}}(t,r)||function(e,t){if(e){if("string"==typeof e)return E(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?E(e,t):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=a[0],c=a[1];(0,o.useEffect)((function(){n.current.focus()}),[]);var l=function(e,t,r){return Math.min(Math.max(e,t),r)},u=function(e,t){return c((function(r){var n=r.x,o=r.y;return{x:l(e+n,0,29),y:l(t+o,0,29)}}))};return o.createElement(p,{tabIndex:"0",backgroundImage:k,onKeyUp:function(e){switch(e.key){case"ArrowUp":u(-1,0);break;case"ArrowDown":u(1,0);break;case"ArrowLeft":u(0,-1);break;case"ArrowRight":u(0,1);break;default:console.log(e.key)}},ref:n},o.createElement(S,i))},P=function(e){var t=e.changePage;return o.createElement(p,{backgroundImage:m},o.createElement(b,{onClick:function(){return t(O)},x:25,y:10,width:4,height:2},"Controls"),o.createElement(b,{onClick:function(){return t(x)},x:25,y:18,width:4,height:2},"Play Game!"))};function A(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function I(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?A(Object(r),!0).forEach((function(t){C(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):A(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function C(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function _(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var N=a.ZP.div.withConfig({displayName:"MainPage__PageContainer",componentId:"sc-2if5lv-0"})(["position:absolute;top:50%;left:50%;max-width:1000px;max-height:1000px;width:100%;height:100%;transform:translate(-50%,-50%);"]),M=function(){var e,t,r=(e=(0,o.useState)({page:P,score:0}),t=2,function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var r=[],n=!0,o=!1,a=void 0;try{for(var i,c=e[Symbol.iterator]();!(n=(i=c.next()).done)&&(r.push(i.value),!t||r.length!==t);n=!0);}catch(e){o=!0,a=e}finally{try{n||null==c.return||c.return()}finally{if(o)throw a}}return r}}(e,t)||function(e,t){if(e){if("string"==typeof e)return _(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),n=r[0],a=r[1];return o.createElement(N,null,o.createElement(d,null),o.createElement(f,{gameState:n,changeState:function(e,t){a((function(r){return I(I({},r),{},C({},e,t))}))}}))};n.render(o.createElement(M,null),document.getElementById("root"))},675:(e,t,r)=>{"use strict";e.exports=r.p+"c4ee33e31ef76369f17a.webp"},454:(e,t,r)=>{"use strict";e.exports=r.p+"0cc6f8247c5e0d51c2a9.webp"},427:(e,t,r)=>{"use strict";e.exports=r.p+"d57eb5fa0317d0c244fb.webp"},550:(e,t,r)=>{"use strict";e.exports=r.p+"337a95e20939ecb91fce.webp"}},0,[[79,666,216]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdGF0aWMtc2l0ZS10ZW1wbGF0ZS8uL3NyYy9jb21wb25lbnRzL0dyaWRBbGlnbmVkLmpzeCIsIndlYnBhY2s6Ly9zdGF0aWMtc2l0ZS10ZW1wbGF0ZS8uL3NyYy9jb25zdGFudHMvZ3JpZC5qcyIsIndlYnBhY2s6Ly9zdGF0aWMtc2l0ZS10ZW1wbGF0ZS8uL3NyYy9jb21wb25lbnRzL0dyaWQuanN4Iiwid2VicGFjazovL3N0YXRpYy1zaXRlLXRlbXBsYXRlLy4vc3JjL2NvbXBvbmVudHMvTmF2aWdhdGlvbi5qc3giLCJ3ZWJwYWNrOi8vc3RhdGljLXNpdGUtdGVtcGxhdGUvLi9zcmMvR2xvYmFsU3R5bGVzLmpzeCIsIndlYnBhY2s6Ly9zdGF0aWMtc2l0ZS10ZW1wbGF0ZS8uL3NyYy9jb21wb25lbnRzL0JhY2tncm91bmQuanN4Iiwid2VicGFjazovL3N0YXRpYy1zaXRlLXRlbXBsYXRlLy4vc3JjL2NvbXBvbmVudHMvQnV0dG9uLmpzeCIsIndlYnBhY2s6Ly9zdGF0aWMtc2l0ZS10ZW1wbGF0ZS8uL3NyYy9wYWdlcy9Db250cm9scy5qc3giLCJ3ZWJwYWNrOi8vc3RhdGljLXNpdGUtdGVtcGxhdGUvLi9zcmMvY29tcG9uZW50cy9WaW0uanN4Iiwid2VicGFjazovL3N0YXRpYy1zaXRlLXRlbXBsYXRlLy4vc3JjL3BhZ2VzL0xldmVsMS5qc3giLCJ3ZWJwYWNrOi8vc3RhdGljLXNpdGUtdGVtcGxhdGUvLi9zcmMvcGFnZXMvVGl0bGUuanN4Iiwid2VicGFjazovL3N0YXRpYy1zaXRlLXRlbXBsYXRlLy4vc3JjL3BhZ2VzL01haW5QYWdlLmpzeCIsIndlYnBhY2s6Ly9zdGF0aWMtc2l0ZS10ZW1wbGF0ZS8uL3NyYy9hcHAuanMiXSwibmFtZXMiOlsiR3JpZEFsaWduZWQiLCJzdHlsZWQiLCJ3aWR0aCIsImhlaWdodCIsIngiLCJ5IiwiR3JpZEJveCIsIkdyaWQiLCJwcm9wcyIsIkFycmF5Iiwicm93cyIsImZpbGwiLCJtYXAiLCJfIiwiaW5kZXgiLCJrZXkiLCJNYXRoIiwiZmxvb3IiLCJOYXZpZ2F0aW9uIiwiZ2FtZVN0YXRlIiwiUGFnZSIsInBhZ2UiLCJzY29yZSIsImNoYW5nZVN0YXRlIiwic2hvd0dyaWQiLCJ1c2VTdGF0ZSIsImNoYW5nZVBhZ2UiLCJuZXdQYWdlIiwiaW5jcmVtZW50U2NvcmUiLCJhbW91bnQiLCJHbG9iYWxTdHlsZXMiLCJjcmVhdGVHbG9iYWxTdHlsZSIsIkJhY2tncm91bmQiLCJiYWNrZ3JvdW5kSW1hZ2UiLCJCdXR0b25EaXYiLCJCdXR0b24iLCJyb2xlIiwiY2hpbGRyZW4iLCJIZWFkZXIiLCJTZWN0aW9uSGVhZGVyIiwiQ29udHJvbHMiLCJiYXR0bGUiLCJvbkNsaWNrIiwiVGl0bGUiLCJWaW0iLCJ2aW1JbWFnZSIsIkxldmVsMSIsImJhY2tncm91bmRSZWYiLCJ1c2VSZWYiLCJ2aW1Qb3NpdGlvbiIsInNldFZpbVBvc2l0aW9uIiwidXNlRWZmZWN0IiwiY3VycmVudCIsImZvY3VzIiwiYm91bmQiLCJ2YWx1ZSIsImxvd2VyQm91bmQiLCJ1cHBlckJvdW5kIiwibWluIiwibWF4IiwiYm91bmRlZEluY3JlbWVudCIsImRlbHRhWCIsImRlbHRhWSIsImNvbHVtbnMiLCJ0YWJJbmRleCIsImxldmVsIiwib25LZXlVcCIsImV2ZW50IiwiY29uc29sZSIsImxvZyIsInJlZiIsInRpdGxlIiwiUGFnZUNvbnRhaW5lciIsIk1haW5QYWdlIiwic2V0R2FtZVN0YXRlIiwib2xkIiwiUmVhY3RET00iLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIl0sIm1hcHBpbmdzIjoiK0pBSWFBLEVBQWNDLG9CQUFILG1EQUFHQSxDQUFILHdGQUNiLG9CQUFHQyxNQUFILE9BQTRCLFVBQTVCLE1BQVcsRUFBWCxHQ0pZLE1ES1gsb0JBQUdDLE9BQUgsT0FBOEIsVUFBOUIsTUFBWSxFQUFaLEdDTlEsTURPWCxtQkFBZ0IsSUFBaEIsRUFBR0MsRUNQUSxNRFFWLG1CQUFnQixJQUFoQixFQUFHQyxFQ1BVLE1DSWpCQyxHQUFVTCxR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QixnQkFBQ00sRUFBRCxDQUFZQyxnQkFBaUJzQyxHQUMzQixnQkFBQ3BDLEVBQUQsQ0FDRU8sUUFBUyxrQkFBTWhCLEVBQVdjLElBQzFCcEMsRUFBRyxHQUNIQyxFQUFHLEdBQ0hILE1BQU8sRUFDUEMsT0FBUSxHQUVQLFlBRUgsZ0JBQUNnQyxFQUFELENBQ0VPLFFBQVMsa0JBQU1oQixFQUFXb0IsSUFDMUIxQyxFQUFHLEdBQ0hDLEVBQUcsR0FDSEgsTUFBTyxFQUNQQyxPQUFRLEdBRVAsZ0IsaXlCQ3BCUCxJQUFNcUUsRUFBZ0J2RSxvQkFBSCxrRUFBR0EsQ0FBSCxrSUFXTndFLEVBQVcsV0FBTSxJLElBQUEsRyxHQUNNaEQsY0FBUyxDQUN6Q0osS0FBTXNCLEVBQ05yQixNQUFPLEksRUFIbUIsRSxrekJBQ3JCSCxFQURxQixLQUNWdUQsRUFEVSxLQVk1QixPQUNFLGdCQUFDRixFQUFELEtBQ0UsZ0JBQUMxQyxFQUFELE1BQ0EsZ0JBQUNaLEVBQUQsQ0FBWUMsVUFBV0EsRUFBV0ksWUFWbEIsU0FBQ1IsRUFBS3dDLEdBQ3hCbUIsR0FBYSxTQUFDQyxHQUFELGNBQ1JBLEdBRFEsUUFFVjVELEVBQU13QyxZQ25CYnFCLFNBQWdCLGdCQUFDSCxFQUFELE1BQWNJLFNBQVNDLGVBQWUsVSIsImZpbGUiOiJtYWluLjQ3NzkyOTA3N2I3MTkxYzUwMWIzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cydcbmltcG9ydCB7IHJvd3MsIGNvbHVtbnMgfSBmcm9tICcuLi9jb25zdGFudHMvZ3JpZCdcblxuZXhwb3J0IGNvbnN0IEdyaWRBbGlnbmVkID0gc3R5bGVkLmRpdmBcbiAgd2lkdGg6ICR7KHsgd2lkdGggPSAxIH0pID0+ICh3aWR0aCAqIDEwMCkgLyBjb2x1bW5zfSU7XG4gIGhlaWdodDogJHsoeyBoZWlnaHQgPSAxIH0pID0+IChoZWlnaHQgKiAxMDApIC8gcm93c30lO1xuICB0b3A6ICR7KHsgeCB9KSA9PiAoeCAqIDEwMCkgLyByb3dzfSU7XG4gIGxlZnQ6ICR7KHsgeSB9KSA9PiAoeSAqIDEwMCkgLyBjb2x1bW5zfSU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbmBcbiIsImV4cG9ydCBjb25zdCByb3dzID0gMzBcbmV4cG9ydCBjb25zdCBjb2x1bW5zID0gMzBcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnXG5pbXBvcnQgeyBjb2x1bW5zLCByb3dzIH0gZnJvbSAnLi4vY29uc3RhbnRzL2dyaWQnXG5pbXBvcnQgeyBHcmlkQWxpZ25lZCB9IGZyb20gJy4vR3JpZEFsaWduZWQnXG5cbmNvbnN0IEdyaWRCb3ggPSBzdHlsZWQoR3JpZEFsaWduZWQpYFxuICBib3JkZXI6IDFweCBzb2xpZCBkYXJrZ3JleTtcbmBcblxuZXhwb3J0IGNvbnN0IEdyaWQgPSAocHJvcHMpID0+IChcbiAgPD5cbiAgICB7bmV3IEFycmF5KHJvd3MgKiBjb2x1bW5zKS5maWxsKHRydWUpLm1hcCgoXywgaW5kZXgpID0+IChcbiAgICAgIDxHcmlkQm94IGtleT17aW5kZXh9IHg9e01hdGguZmxvb3IoaW5kZXggLyByb3dzKX0geT17aW5kZXggJSBjb2x1bW5zfSAvPlxuICAgICkpfVxuICA8Lz5cbilcbiIsImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cydcbmltcG9ydCB7IEdyaWQgfSBmcm9tICcuL0dyaWQnXG5cbmV4cG9ydCBjb25zdCBOYXZpZ2F0aW9uID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHtcbiAgICBnYW1lU3RhdGU6IHsgcGFnZTogUGFnZSwgc2NvcmUgfSxcbiAgICBjaGFuZ2VTdGF0ZSxcbiAgfSA9IHByb3BzXG4gIGNvbnN0IFtzaG93R3JpZF0gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgY2hhbmdlUGFnZSA9IChuZXdQYWdlKSA9PiBjaGFuZ2VTdGF0ZSgncGFnZScsIG5ld1BhZ2UpXG4gIGNvbnN0IGluY3JlbWVudFNjb3JlID0gKGFtb3VudCkgPT4gY2hhbmdlU3RhdGUoJ3Njb3JlJywgc2NvcmUgKyBhbW91bnQpXG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAge3Nob3dHcmlkID8gPEdyaWQgLz4gOiBudWxsfVxuICAgICAgPFBhZ2UgY2hhbmdlUGFnZT17Y2hhbmdlUGFnZX0gaW5jcmVtZW50U2NvcmU9e2luY3JlbWVudFNjb3JlfSAvPlxuICAgIDwvPlxuICApXG59XG4iLCJpbXBvcnQgeyBjcmVhdGVHbG9iYWxTdHlsZSB9IGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJ1xuXG5leHBvcnQgY29uc3QgR2xvYmFsU3R5bGVzID0gY3JlYXRlR2xvYmFsU3R5bGVgXG4gICoge1xuICAgIGJvcmRlcjogMDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIG1hcmdpbjogMDtcbiAgICBmb250LWZhbWlseTogXCJPcGVuIFNhbnNcIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgfVxuICBcbiAgYm9keXtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyYXk7XG4gICAgQG1lZGlhIChwcmVmZXJzLWNvbG9yLXNjaGVtZTogZGFyaykge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogZ3JheTtcbiAgICB9XG4gIH1cbmBcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnXG5cbmV4cG9ydCBjb25zdCBCYWNrZ3JvdW5kID0gc3R5bGVkLmRpdmBcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCR7KHsgYmFja2dyb3VuZEltYWdlIH0pID0+IGJhY2tncm91bmRJbWFnZX0pO1xuICBiYWNrZ3JvdW5kLXNpemU6IDEwMCUgMTAwJTtcbmBcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnXG5pbXBvcnQgeyBHcmlkQWxpZ25lZCB9IGZyb20gJy4vR3JpZEFsaWduZWQnXG5cbmNvbnN0IEJ1dHRvbkRpdiA9IHN0eWxlZChHcmlkQWxpZ25lZClgXG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYm9yZGVyLXJhZGl1czogMWVtO1xuICBib3JkZXI6IDJweCBzb2xpZCBibGFjaztcbiAgOmZvY3VzIHtcbiAgICBib3JkZXItY29sb3I6IHJlZDtcbiAgfVxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzMzMzNTU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuYFxuXG5leHBvcnQgY29uc3QgQnV0dG9uID0gKHByb3BzKSA9PiAoXG4gIDxCdXR0b25EaXYgcm9sZT1cImJ1dHRvblwiIHsuLi5wcm9wc30+XG4gICAgPGRpdj57cHJvcHMuY2hpbGRyZW59PC9kaXY+XG4gIDwvQnV0dG9uRGl2PlxuKVxuIiwiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJ1xuaW1wb3J0IGJhdHRsZSBmcm9tICcuLi9pbWFnZXMvdGl0bGUud2VicCdcbmltcG9ydCB7IEJhY2tncm91bmQgfSBmcm9tICcuLi9jb21wb25lbnRzL0JhY2tncm91bmQnXG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tICcuLi9jb21wb25lbnRzL0J1dHRvbidcbmltcG9ydCB7IFRpdGxlIH0gZnJvbSAnLi9UaXRsZSdcblxuY29uc3QgSGVhZGVyID0gc3R5bGVkLmgxYFxuICBtYXJnaW46IDFlbTtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG5gXG5cbmNvbnN0IFNlY3Rpb25IZWFkZXIgPSBzdHlsZWQuaDNgXG4gIG1hcmdpbjogMWVtO1xuYFxuXG5leHBvcnQgY29uc3QgQ29udHJvbHMgPSAoeyBjaGFuZ2VQYWdlIH0pID0+IChcbiAgPEJhY2tncm91bmQgYmFja2dyb3VuZEltYWdlPXtiYXR0bGV9PlxuICAgIDxCdXR0b24gb25DbGljaz17KCkgPT4gY2hhbmdlUGFnZShUaXRsZSl9IHg9ezJ9IHk9ezJ9IHdpZHRoPXsyNn0gaGVpZ2h0PXsyNn0+XG4gICAgICA8SGVhZGVyPkNvbnRyb2xzPC9IZWFkZXI+XG4gICAgICA8U2VjdGlvbkhlYWRlcj5Nb3ZlbWVudDo8L1NlY3Rpb25IZWFkZXI+XG4gICAgICA8cD53LGEscyxkIG9yIGFycm93IGtleXM8L3A+XG4gICAgICA8U2VjdGlvbkhlYWRlcj5TaG9vdDo8L1NlY3Rpb25IZWFkZXI+XG4gICAgICA8cD5sZWZ0IGNsaWNrPC9wPlxuICAgIDwvQnV0dG9uPlxuICA8L0JhY2tncm91bmQ+XG4pXG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJ1xuaW1wb3J0IHsgR3JpZEFsaWduZWQgfSBmcm9tICcuL0dyaWRBbGlnbmVkJ1xuaW1wb3J0IHZpbUltYWdlIGZyb20gJy4uL2ltYWdlcy92aW0tdGlueS53ZWJwJ1xuXG5leHBvcnQgY29uc3QgVmltID0gc3R5bGVkKEdyaWRBbGlnbmVkKWBcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCR7dmltSW1hZ2V9KTtcbiAgYmFja2dyb3VuZC1zaXplOiAxMDAlIDEwMCU7XG5gXG4iLCJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZVJlZiwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJ1xuaW1wb3J0IGxldmVsIGZyb20gJy4uL2ltYWdlcy9sZXZlbC0xLndlYnAnXG5pbXBvcnQgeyBCYWNrZ3JvdW5kIH0gZnJvbSAnLi4vY29tcG9uZW50cy9CYWNrZ3JvdW5kJ1xuaW1wb3J0IHsgVmltIH0gZnJvbSAnLi4vY29tcG9uZW50cy9WaW0nXG5pbXBvcnQgeyBjb2x1bW5zLCByb3dzIH0gZnJvbSAnLi4vY29uc3RhbnRzL2dyaWQnXG5cbmV4cG9ydCBjb25zdCBMZXZlbDEgPSAoeyBjaGFuZ2VQYWdlIH0pID0+IHtcbiAgY29uc3QgYmFja2dyb3VuZFJlZiA9IHVzZVJlZihudWxsKVxuICBjb25zdCBbdmltUG9zaXRpb24sIHNldFZpbVBvc2l0aW9uXSA9IHVzZVN0YXRlKHtcbiAgICB4OiAyNSxcbiAgICB5OiAyNSxcbiAgfSlcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBiYWNrZ3JvdW5kUmVmLmN1cnJlbnQuZm9jdXMoKVxuICB9LCBbXSlcbiAgY29uc3QgYm91bmQgPSAodmFsdWUsIGxvd2VyQm91bmQsIHVwcGVyQm91bmQpID0+XG4gICAgTWF0aC5taW4oTWF0aC5tYXgodmFsdWUsIGxvd2VyQm91bmQpLCB1cHBlckJvdW5kKVxuICBjb25zdCBib3VuZGVkSW5jcmVtZW50ID0gKGRlbHRhWCwgZGVsdGFZKSA9PlxuICAgIHNldFZpbVBvc2l0aW9uKCh7IHgsIHkgfSkgPT4ge1xuICAgICAgY29uc3QgbmV3WCA9IGJvdW5kKGRlbHRhWCArIHgsIDAsIHJvd3MgLSAxKVxuICAgICAgY29uc3QgbmV3WSA9IGJvdW5kKGRlbHRhWSArIHksIDAsIGNvbHVtbnMgLSAxKVxuXG4gICAgICByZXR1cm4ge1xuICAgICAgICB4OiBuZXdYLFxuICAgICAgICB5OiBuZXdZLFxuICAgICAgfVxuICAgIH0pXG4gIGNvbnN0IGhhbmRsZUtleVByZXNzID0gKGV2ZW50KSA9PiB7XG4gICAgc3dpdGNoIChldmVudC5rZXkpIHtcbiAgICAgIGNhc2UgJ0Fycm93VXAnOlxuICAgICAgICBib3VuZGVkSW5jcmVtZW50KC0xLCAwKVxuICAgICAgICBicmVha1xuICAgICAgY2FzZSAnQXJyb3dEb3duJzpcbiAgICAgICAgYm91bmRlZEluY3JlbWVudCgxLCAwKVxuXG4gICAgICAgIGJyZWFrXG4gICAgICBjYXNlICdBcnJvd0xlZnQnOlxuICAgICAgICBib3VuZGVkSW5jcmVtZW50KDAsIC0xKVxuXG4gICAgICAgIGJyZWFrXG4gICAgICBjYXNlICdBcnJvd1JpZ2h0JzpcbiAgICAgICAgYm91bmRlZEluY3JlbWVudCgwLCAxKVxuXG4gICAgICAgIGJyZWFrXG5cbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGNvbnNvbGUubG9nKGV2ZW50LmtleSlcbiAgICB9XG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxCYWNrZ3JvdW5kXG4gICAgICB0YWJJbmRleD1cIjBcIlxuICAgICAgYmFja2dyb3VuZEltYWdlPXtsZXZlbH1cbiAgICAgIG9uS2V5VXA9e2hhbmRsZUtleVByZXNzfVxuICAgICAgcmVmPXtiYWNrZ3JvdW5kUmVmfVxuICAgID5cbiAgICAgIDxWaW0gey4uLnZpbVBvc2l0aW9ufSAvPlxuICAgIDwvQmFja2dyb3VuZD5cbiAgKVxufVxuIiwiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJ1xuaW1wb3J0IHRpdGxlIGZyb20gJy4uL2ltYWdlcy90aXRsZTIud2VicCdcbmltcG9ydCB7IEJhY2tncm91bmQgfSBmcm9tICcuLi9jb21wb25lbnRzL0JhY2tncm91bmQnXG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tICcuLi9jb21wb25lbnRzL0J1dHRvbidcbmltcG9ydCB7IENvbnRyb2xzIH0gZnJvbSAnLi9Db250cm9scydcbmltcG9ydCB7IExldmVsMSB9IGZyb20gJy4vTGV2ZWwxJ1xuXG5leHBvcnQgY29uc3QgVGl0bGUgPSAoeyBjaGFuZ2VQYWdlIH0pID0+IChcbiAgPEJhY2tncm91bmQgYmFja2dyb3VuZEltYWdlPXt0aXRsZX0+XG4gICAgPEJ1dHRvblxuICAgICAgb25DbGljaz17KCkgPT4gY2hhbmdlUGFnZShDb250cm9scyl9XG4gICAgICB4PXsyNX1cbiAgICAgIHk9ezEwfVxuICAgICAgd2lkdGg9ezR9XG4gICAgICBoZWlnaHQ9ezJ9XG4gICAgPlxuICAgICAgeydDb250cm9scyd9XG4gICAgPC9CdXR0b24+XG4gICAgPEJ1dHRvblxuICAgICAgb25DbGljaz17KCkgPT4gY2hhbmdlUGFnZShMZXZlbDEpfVxuICAgICAgeD17MjV9XG4gICAgICB5PXsxOH1cbiAgICAgIHdpZHRoPXs0fVxuICAgICAgaGVpZ2h0PXsyfVxuICAgID5cbiAgICAgIHsnUGxheSBHYW1lISd9XG4gICAgPC9CdXR0b24+XG4gIDwvQmFja2dyb3VuZD5cbilcbiIsImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cydcbmltcG9ydCB7IE5hdmlnYXRpb24gfSBmcm9tICcuLi9jb21wb25lbnRzL05hdmlnYXRpb24nXG5pbXBvcnQgeyBHbG9iYWxTdHlsZXMgfSBmcm9tICcuLi9HbG9iYWxTdHlsZXMnXG5pbXBvcnQgeyBUaXRsZSB9IGZyb20gJy4vVGl0bGUnXG5cbmNvbnN0IFBhZ2VDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIG1heC13aWR0aDogMTAwMHB4O1xuICBtYXgtaGVpZ2h0OiAxMDAwcHg7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuYFxuXG5leHBvcnQgY29uc3QgTWFpblBhZ2UgPSAoKSA9PiB7XG4gIGNvbnN0IFtnYW1lU3RhdGUsIHNldEdhbWVTdGF0ZV0gPSB1c2VTdGF0ZSh7XG4gICAgcGFnZTogVGl0bGUsXG4gICAgc2NvcmU6IDAsXG4gIH0pXG4gIGNvbnN0IGNoYW5nZVN0YXRlID0gKGtleSwgdmFsdWUpID0+IHtcbiAgICBzZXRHYW1lU3RhdGUoKG9sZCkgPT4gKHtcbiAgICAgIC4uLm9sZCxcbiAgICAgIFtrZXldOiB2YWx1ZSxcbiAgICB9KSlcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPFBhZ2VDb250YWluZXI+XG4gICAgICA8R2xvYmFsU3R5bGVzIC8+XG4gICAgICA8TmF2aWdhdGlvbiBnYW1lU3RhdGU9e2dhbWVTdGF0ZX0gY2hhbmdlU3RhdGU9e2NoYW5nZVN0YXRlfSAvPlxuICAgIDwvUGFnZUNvbnRhaW5lcj5cbiAgKVxufVxuIiwiaW1wb3J0ICdmb250c291cmNlLW9wZW4tc2FucydcbmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5cbmltcG9ydCB7IE1haW5QYWdlIH0gZnJvbSAnLi9wYWdlcy9NYWluUGFnZSdcblxuUmVhY3RET00ucmVuZGVyKDxNYWluUGFnZSAvPiwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jvb3QnKSlcbiJdLCJzb3VyY2VSb290IjoiIn0=